/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for TimeAt type.
 */
public class TimeAt {
    private Integer months;
    private Integer years;

    /**
     * Default constructor.
     */
    public TimeAt() {
    }

    /**
     * Initialization constructor.
     * @param  months  Integer value for months.
     * @param  years  Integer value for years.
     */
    public TimeAt(
            Integer months,
            Integer years) {
        this.months = months;
        this.years = years;
    }

    /**
     * Getter for Months.
     * @return Returns the Integer
     */
    @JsonGetter("Months")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getMonths() {
        return months;
    }

    /**
     * Setter for Months.
     * @param months Value for Integer
     */
    @JsonSetter("Months")
    public void setMonths(Integer months) {
        this.months = months;
    }

    /**
     * Getter for Years.
     * @return Returns the Integer
     */
    @JsonGetter("Years")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getYears() {
        return years;
    }

    /**
     * Setter for Years.
     * @param years Value for Integer
     */
    @JsonSetter("Years")
    public void setYears(Integer years) {
        this.years = years;
    }

    /**
     * Converts this TimeAt into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "TimeAt [" + "months=" + months + ", years=" + years + "]";
    }

    /**
     * Builds a new {@link TimeAt.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link TimeAt.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .months(getMonths())
                .years(getYears());
        return builder;
    }

    /**
     * Class to build instances of {@link TimeAt}.
     */
    public static class Builder {
        private Integer months;
        private Integer years;



        /**
         * Setter for months.
         * @param  months  Integer value for months.
         * @return Builder
         */
        public Builder months(Integer months) {
            this.months = months;
            return this;
        }

        /**
         * Setter for years.
         * @param  years  Integer value for years.
         * @return Builder
         */
        public Builder years(Integer years) {
            this.years = years;
            return this;
        }

        /**
         * Builds a new {@link TimeAt} object using the set fields.
         * @return {@link TimeAt}
         */
        public TimeAt build() {
            return new TimeAt(months, years);
        }
    }
}
