/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for LegalNotices type.
 */
public class LegalNotices {
    private Administrators administrators;
    private List<Liquidators> liquidators;
    private List<MeetingCreditors> meetingCreditors;
    private List<Notice6253> notice6253;
    private Receiver receiver;
    private Integer summaryCount;
    private List<SummaryLine> summaryLine;
    private List<VolArrangement> volArrangement;
    private WindUp windUp;

    /**
     * Default constructor.
     */
    public LegalNotices() {
    }

    /**
     * Initialization constructor.
     * @param  administrators  Administrators value for administrators.
     * @param  liquidators  List of Liquidators value for liquidators.
     * @param  meetingCreditors  List of MeetingCreditors value for meetingCreditors.
     * @param  notice6253  List of Notice6253 value for notice6253.
     * @param  receiver  Receiver value for receiver.
     * @param  summaryCount  Integer value for summaryCount.
     * @param  summaryLine  List of SummaryLine value for summaryLine.
     * @param  volArrangement  List of VolArrangement value for volArrangement.
     * @param  windUp  WindUp value for windUp.
     */
    public LegalNotices(
            Administrators administrators,
            List<Liquidators> liquidators,
            List<MeetingCreditors> meetingCreditors,
            List<Notice6253> notice6253,
            Receiver receiver,
            Integer summaryCount,
            List<SummaryLine> summaryLine,
            List<VolArrangement> volArrangement,
            WindUp windUp) {
        this.administrators = administrators;
        this.liquidators = liquidators;
        this.meetingCreditors = meetingCreditors;
        this.notice6253 = notice6253;
        this.receiver = receiver;
        this.summaryCount = summaryCount;
        this.summaryLine = summaryLine;
        this.volArrangement = volArrangement;
        this.windUp = windUp;
    }

    /**
     * Getter for Administrators.
     * @return Returns the Administrators
     */
    @JsonGetter("Administrators")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Administrators getAdministrators() {
        return administrators;
    }

    /**
     * Setter for Administrators.
     * @param administrators Value for Administrators
     */
    @JsonSetter("Administrators")
    public void setAdministrators(Administrators administrators) {
        this.administrators = administrators;
    }

    /**
     * Getter for Liquidators.
     * @return Returns the List of Liquidators
     */
    @JsonGetter("Liquidators")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Liquidators> getLiquidators() {
        return liquidators;
    }

    /**
     * Setter for Liquidators.
     * @param liquidators Value for List of Liquidators
     */
    @JsonSetter("Liquidators")
    public void setLiquidators(List<Liquidators> liquidators) {
        this.liquidators = liquidators;
    }

    /**
     * Getter for MeetingCreditors.
     * @return Returns the List of MeetingCreditors
     */
    @JsonGetter("MeetingCreditors")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<MeetingCreditors> getMeetingCreditors() {
        return meetingCreditors;
    }

    /**
     * Setter for MeetingCreditors.
     * @param meetingCreditors Value for List of MeetingCreditors
     */
    @JsonSetter("MeetingCreditors")
    public void setMeetingCreditors(List<MeetingCreditors> meetingCreditors) {
        this.meetingCreditors = meetingCreditors;
    }

    /**
     * Getter for Notice6253.
     * @return Returns the List of Notice6253
     */
    @JsonGetter("Notice6253")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Notice6253> getNotice6253() {
        return notice6253;
    }

    /**
     * Setter for Notice6253.
     * @param notice6253 Value for List of Notice6253
     */
    @JsonSetter("Notice6253")
    public void setNotice6253(List<Notice6253> notice6253) {
        this.notice6253 = notice6253;
    }

    /**
     * Getter for Receiver.
     * @return Returns the Receiver
     */
    @JsonGetter("Receiver")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Receiver getReceiver() {
        return receiver;
    }

    /**
     * Setter for Receiver.
     * @param receiver Value for Receiver
     */
    @JsonSetter("Receiver")
    public void setReceiver(Receiver receiver) {
        this.receiver = receiver;
    }

    /**
     * Getter for SummaryCount.
     * Number of credit event types
     * @return Returns the Integer
     */
    @JsonGetter("SummaryCount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getSummaryCount() {
        return summaryCount;
    }

    /**
     * Setter for SummaryCount.
     * Number of credit event types
     * @param summaryCount Value for Integer
     */
    @JsonSetter("SummaryCount")
    public void setSummaryCount(Integer summaryCount) {
        this.summaryCount = summaryCount;
    }

    /**
     * Getter for SummaryLine.
     * @return Returns the List of SummaryLine
     */
    @JsonGetter("SummaryLine")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<SummaryLine> getSummaryLine() {
        return summaryLine;
    }

    /**
     * Setter for SummaryLine.
     * @param summaryLine Value for List of SummaryLine
     */
    @JsonSetter("SummaryLine")
    public void setSummaryLine(List<SummaryLine> summaryLine) {
        this.summaryLine = summaryLine;
    }

    /**
     * Getter for VolArrangement.
     * @return Returns the List of VolArrangement
     */
    @JsonGetter("VolArrangement")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<VolArrangement> getVolArrangement() {
        return volArrangement;
    }

    /**
     * Setter for VolArrangement.
     * @param volArrangement Value for List of VolArrangement
     */
    @JsonSetter("VolArrangement")
    public void setVolArrangement(List<VolArrangement> volArrangement) {
        this.volArrangement = volArrangement;
    }

    /**
     * Getter for WindUp.
     * @return Returns the WindUp
     */
    @JsonGetter("WindUp")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public WindUp getWindUp() {
        return windUp;
    }

    /**
     * Setter for WindUp.
     * @param windUp Value for WindUp
     */
    @JsonSetter("WindUp")
    public void setWindUp(WindUp windUp) {
        this.windUp = windUp;
    }

    /**
     * Converts this LegalNotices into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "LegalNotices [" + "administrators=" + administrators + ", liquidators="
                + liquidators + ", meetingCreditors=" + meetingCreditors + ", notice6253="
                + notice6253 + ", receiver=" + receiver + ", summaryCount=" + summaryCount
                + ", summaryLine=" + summaryLine + ", volArrangement=" + volArrangement
                + ", windUp=" + windUp + "]";
    }

    /**
     * Builds a new {@link LegalNotices.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link LegalNotices.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .administrators(getAdministrators())
                .liquidators(getLiquidators())
                .meetingCreditors(getMeetingCreditors())
                .notice6253(getNotice6253())
                .receiver(getReceiver())
                .summaryCount(getSummaryCount())
                .summaryLine(getSummaryLine())
                .volArrangement(getVolArrangement())
                .windUp(getWindUp());
        return builder;
    }

    /**
     * Class to build instances of {@link LegalNotices}.
     */
    public static class Builder {
        private Administrators administrators;
        private List<Liquidators> liquidators;
        private List<MeetingCreditors> meetingCreditors;
        private List<Notice6253> notice6253;
        private Receiver receiver;
        private Integer summaryCount;
        private List<SummaryLine> summaryLine;
        private List<VolArrangement> volArrangement;
        private WindUp windUp;



        /**
         * Setter for administrators.
         * @param  administrators  Administrators value for administrators.
         * @return Builder
         */
        public Builder administrators(Administrators administrators) {
            this.administrators = administrators;
            return this;
        }

        /**
         * Setter for liquidators.
         * @param  liquidators  List of Liquidators value for liquidators.
         * @return Builder
         */
        public Builder liquidators(List<Liquidators> liquidators) {
            this.liquidators = liquidators;
            return this;
        }

        /**
         * Setter for meetingCreditors.
         * @param  meetingCreditors  List of MeetingCreditors value for meetingCreditors.
         * @return Builder
         */
        public Builder meetingCreditors(List<MeetingCreditors> meetingCreditors) {
            this.meetingCreditors = meetingCreditors;
            return this;
        }

        /**
         * Setter for notice6253.
         * @param  notice6253  List of Notice6253 value for notice6253.
         * @return Builder
         */
        public Builder notice6253(List<Notice6253> notice6253) {
            this.notice6253 = notice6253;
            return this;
        }

        /**
         * Setter for receiver.
         * @param  receiver  Receiver value for receiver.
         * @return Builder
         */
        public Builder receiver(Receiver receiver) {
            this.receiver = receiver;
            return this;
        }

        /**
         * Setter for summaryCount.
         * @param  summaryCount  Integer value for summaryCount.
         * @return Builder
         */
        public Builder summaryCount(Integer summaryCount) {
            this.summaryCount = summaryCount;
            return this;
        }

        /**
         * Setter for summaryLine.
         * @param  summaryLine  List of SummaryLine value for summaryLine.
         * @return Builder
         */
        public Builder summaryLine(List<SummaryLine> summaryLine) {
            this.summaryLine = summaryLine;
            return this;
        }

        /**
         * Setter for volArrangement.
         * @param  volArrangement  List of VolArrangement value for volArrangement.
         * @return Builder
         */
        public Builder volArrangement(List<VolArrangement> volArrangement) {
            this.volArrangement = volArrangement;
            return this;
        }

        /**
         * Setter for windUp.
         * @param  windUp  WindUp value for windUp.
         * @return Builder
         */
        public Builder windUp(WindUp windUp) {
            this.windUp = windUp;
            return this;
        }

        /**
         * Builds a new {@link LegalNotices} object using the set fields.
         * @return {@link LegalNotices}
         */
        public LegalNotices build() {
            return new LegalNotices(administrators, liquidators, meetingCreditors, notice6253,
                    receiver, summaryCount, summaryLine, volArrangement, windUp);
        }
    }
}
