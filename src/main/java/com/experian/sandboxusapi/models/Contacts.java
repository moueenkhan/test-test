/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for Contacts type.
 */
public class Contacts {
    private String contactTitle;
    private String contactForename;
    private String contactSurname;
    private String contactPosition;

    /**
     * Default constructor.
     */
    public Contacts() {
    }

    /**
     * Initialization constructor.
     * @param  contactTitle  String value for contactTitle.
     * @param  contactForename  String value for contactForename.
     * @param  contactSurname  String value for contactSurname.
     * @param  contactPosition  String value for contactPosition.
     */
    public Contacts(
            String contactTitle,
            String contactForename,
            String contactSurname,
            String contactPosition) {
        this.contactTitle = contactTitle;
        this.contactForename = contactForename;
        this.contactSurname = contactSurname;
        this.contactPosition = contactPosition;
    }

    /**
     * Getter for ContactTitle.
     * Non-limited business contact name prefix (Mr, Mrs, Dr, Sir, Prof. etc.)
     * @return Returns the String
     */
    @JsonGetter("ContactTitle")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getContactTitle() {
        return contactTitle;
    }

    /**
     * Setter for ContactTitle.
     * Non-limited business contact name prefix (Mr, Mrs, Dr, Sir, Prof. etc.)
     * @param contactTitle Value for String
     */
    @JsonSetter("ContactTitle")
    public void setContactTitle(String contactTitle) {
        this.contactTitle = contactTitle;
    }

    /**
     * Getter for ContactForename.
     * Non-limited business contact forename
     * @return Returns the String
     */
    @JsonGetter("ContactForename")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getContactForename() {
        return contactForename;
    }

    /**
     * Setter for ContactForename.
     * Non-limited business contact forename
     * @param contactForename Value for String
     */
    @JsonSetter("ContactForename")
    public void setContactForename(String contactForename) {
        this.contactForename = contactForename;
    }

    /**
     * Getter for ContactSurname.
     * Non-limited business contact surname
     * @return Returns the String
     */
    @JsonGetter("ContactSurname")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getContactSurname() {
        return contactSurname;
    }

    /**
     * Setter for ContactSurname.
     * Non-limited business contact surname
     * @param contactSurname Value for String
     */
    @JsonSetter("ContactSurname")
    public void setContactSurname(String contactSurname) {
        this.contactSurname = contactSurname;
    }

    /**
     * Getter for ContactPosition.
     * Non-limited business contact position within the business
     * @return Returns the String
     */
    @JsonGetter("ContactPosition")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getContactPosition() {
        return contactPosition;
    }

    /**
     * Setter for ContactPosition.
     * Non-limited business contact position within the business
     * @param contactPosition Value for String
     */
    @JsonSetter("ContactPosition")
    public void setContactPosition(String contactPosition) {
        this.contactPosition = contactPosition;
    }

    /**
     * Converts this Contacts into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Contacts [" + "contactTitle=" + contactTitle + ", contactForename="
                + contactForename + ", contactSurname=" + contactSurname + ", contactPosition="
                + contactPosition + "]";
    }

    /**
     * Builds a new {@link Contacts.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Contacts.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .contactTitle(getContactTitle())
                .contactForename(getContactForename())
                .contactSurname(getContactSurname())
                .contactPosition(getContactPosition());
        return builder;
    }

    /**
     * Class to build instances of {@link Contacts}.
     */
    public static class Builder {
        private String contactTitle;
        private String contactForename;
        private String contactSurname;
        private String contactPosition;



        /**
         * Setter for contactTitle.
         * @param  contactTitle  String value for contactTitle.
         * @return Builder
         */
        public Builder contactTitle(String contactTitle) {
            this.contactTitle = contactTitle;
            return this;
        }

        /**
         * Setter for contactForename.
         * @param  contactForename  String value for contactForename.
         * @return Builder
         */
        public Builder contactForename(String contactForename) {
            this.contactForename = contactForename;
            return this;
        }

        /**
         * Setter for contactSurname.
         * @param  contactSurname  String value for contactSurname.
         * @return Builder
         */
        public Builder contactSurname(String contactSurname) {
            this.contactSurname = contactSurname;
            return this;
        }

        /**
         * Setter for contactPosition.
         * @param  contactPosition  String value for contactPosition.
         * @return Builder
         */
        public Builder contactPosition(String contactPosition) {
            this.contactPosition = contactPosition;
            return this;
        }

        /**
         * Builds a new {@link Contacts} object using the set fields.
         * @return {@link Contacts}
         */
        public Contacts build() {
            return new Contacts(contactTitle, contactForename, contactSurname, contactPosition);
        }
    }
}
