/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for GoneAwaySegment type.
 */
public class GoneAwaySegment {
    private String applicantIndicator;
    private String informationSource;
    private LocationDetail location;
    private String locationIndicator;
    private MatchDetail matchDetails;
    private List<Member> members;
    private int membersCount;
    private InputNameDetail name;
    private String nameID;
    private String searchType;

    /**
     * Default constructor.
     */
    public GoneAwaySegment() {
    }

    /**
     * Initialization constructor.
     * @param  membersCount  int value for membersCount.
     * @param  applicantIndicator  String value for applicantIndicator.
     * @param  informationSource  String value for informationSource.
     * @param  location  LocationDetail value for location.
     * @param  locationIndicator  String value for locationIndicator.
     * @param  matchDetails  MatchDetail value for matchDetails.
     * @param  members  List of Member value for members.
     * @param  name  InputNameDetail value for name.
     * @param  nameID  String value for nameID.
     * @param  searchType  String value for searchType.
     */
    public GoneAwaySegment(
            int membersCount,
            String applicantIndicator,
            String informationSource,
            LocationDetail location,
            String locationIndicator,
            MatchDetail matchDetails,
            List<Member> members,
            InputNameDetail name,
            String nameID,
            String searchType) {
        this.applicantIndicator = applicantIndicator;
        this.informationSource = informationSource;
        this.location = location;
        this.locationIndicator = locationIndicator;
        this.matchDetails = matchDetails;
        this.members = members;
        this.membersCount = membersCount;
        this.name = name;
        this.nameID = nameID;
        this.searchType = searchType;
    }

    /**
     * Getter for ApplicantIndicator.
     * @return Returns the String
     */
    @JsonGetter("ApplicantIndicator")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getApplicantIndicator() {
        return applicantIndicator;
    }

    /**
     * Setter for ApplicantIndicator.
     * @param applicantIndicator Value for String
     */
    @JsonSetter("ApplicantIndicator")
    public void setApplicantIndicator(String applicantIndicator) {
        this.applicantIndicator = applicantIndicator;
    }

    /**
     * Getter for InformationSource.
     * @return Returns the String
     */
    @JsonGetter("InformationSource")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getInformationSource() {
        return informationSource;
    }

    /**
     * Setter for InformationSource.
     * @param informationSource Value for String
     */
    @JsonSetter("InformationSource")
    public void setInformationSource(String informationSource) {
        this.informationSource = informationSource;
    }

    /**
     * Getter for Location.
     * @return Returns the LocationDetail
     */
    @JsonGetter("Location")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public LocationDetail getLocation() {
        return location;
    }

    /**
     * Setter for Location.
     * @param location Value for LocationDetail
     */
    @JsonSetter("Location")
    public void setLocation(LocationDetail location) {
        this.location = location;
    }

    /**
     * Getter for LocationIndicator.
     * @return Returns the String
     */
    @JsonGetter("LocationIndicator")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLocationIndicator() {
        return locationIndicator;
    }

    /**
     * Setter for LocationIndicator.
     * @param locationIndicator Value for String
     */
    @JsonSetter("LocationIndicator")
    public void setLocationIndicator(String locationIndicator) {
        this.locationIndicator = locationIndicator;
    }

    /**
     * Getter for MatchDetails.
     * @return Returns the MatchDetail
     */
    @JsonGetter("MatchDetails")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public MatchDetail getMatchDetails() {
        return matchDetails;
    }

    /**
     * Setter for MatchDetails.
     * @param matchDetails Value for MatchDetail
     */
    @JsonSetter("MatchDetails")
    public void setMatchDetails(MatchDetail matchDetails) {
        this.matchDetails = matchDetails;
    }

    /**
     * Getter for Members.
     * @return Returns the List of Member
     */
    @JsonGetter("Members")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Member> getMembers() {
        return members;
    }

    /**
     * Setter for Members.
     * @param members Value for List of Member
     */
    @JsonSetter("Members")
    public void setMembers(List<Member> members) {
        this.members = members;
    }

    /**
     * Getter for MembersCount.
     * @return Returns the int
     */
    @JsonGetter("MembersCount")
    public int getMembersCount() {
        return membersCount;
    }

    /**
     * Setter for MembersCount.
     * @param membersCount Value for int
     */
    @JsonSetter("MembersCount")
    public void setMembersCount(int membersCount) {
        this.membersCount = membersCount;
    }

    /**
     * Getter for Name.
     * @return Returns the InputNameDetail
     */
    @JsonGetter("Name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public InputNameDetail getName() {
        return name;
    }

    /**
     * Setter for Name.
     * @param name Value for InputNameDetail
     */
    @JsonSetter("Name")
    public void setName(InputNameDetail name) {
        this.name = name;
    }

    /**
     * Getter for NameID.
     * @return Returns the String
     */
    @JsonGetter("NameID")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getNameID() {
        return nameID;
    }

    /**
     * Setter for NameID.
     * @param nameID Value for String
     */
    @JsonSetter("NameID")
    public void setNameID(String nameID) {
        this.nameID = nameID;
    }

    /**
     * Getter for SearchType.
     * @return Returns the String
     */
    @JsonGetter("SearchType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSearchType() {
        return searchType;
    }

    /**
     * Setter for SearchType.
     * @param searchType Value for String
     */
    @JsonSetter("SearchType")
    public void setSearchType(String searchType) {
        this.searchType = searchType;
    }

    /**
     * Converts this GoneAwaySegment into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "GoneAwaySegment [" + "membersCount=" + membersCount + ", applicantIndicator="
                + applicantIndicator + ", informationSource=" + informationSource + ", location="
                + location + ", locationIndicator=" + locationIndicator + ", matchDetails="
                + matchDetails + ", members=" + members + ", name=" + name + ", nameID=" + nameID
                + ", searchType=" + searchType + "]";
    }

    /**
     * Builds a new {@link GoneAwaySegment.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link GoneAwaySegment.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(membersCount)
                .applicantIndicator(getApplicantIndicator())
                .informationSource(getInformationSource())
                .location(getLocation())
                .locationIndicator(getLocationIndicator())
                .matchDetails(getMatchDetails())
                .members(getMembers())
                .name(getName())
                .nameID(getNameID())
                .searchType(getSearchType());
        return builder;
    }

    /**
     * Class to build instances of {@link GoneAwaySegment}.
     */
    public static class Builder {
        private int membersCount;
        private String applicantIndicator;
        private String informationSource;
        private LocationDetail location;
        private String locationIndicator;
        private MatchDetail matchDetails;
        private List<Member> members;
        private InputNameDetail name;
        private String nameID;
        private String searchType;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  membersCount  int value for membersCount.
         */
        public Builder(int membersCount) {
            this.membersCount = membersCount;
        }

        /**
         * Setter for membersCount.
         * @param  membersCount  int value for membersCount.
         * @return Builder
         */
        public Builder membersCount(int membersCount) {
            this.membersCount = membersCount;
            return this;
        }

        /**
         * Setter for applicantIndicator.
         * @param  applicantIndicator  String value for applicantIndicator.
         * @return Builder
         */
        public Builder applicantIndicator(String applicantIndicator) {
            this.applicantIndicator = applicantIndicator;
            return this;
        }

        /**
         * Setter for informationSource.
         * @param  informationSource  String value for informationSource.
         * @return Builder
         */
        public Builder informationSource(String informationSource) {
            this.informationSource = informationSource;
            return this;
        }

        /**
         * Setter for location.
         * @param  location  LocationDetail value for location.
         * @return Builder
         */
        public Builder location(LocationDetail location) {
            this.location = location;
            return this;
        }

        /**
         * Setter for locationIndicator.
         * @param  locationIndicator  String value for locationIndicator.
         * @return Builder
         */
        public Builder locationIndicator(String locationIndicator) {
            this.locationIndicator = locationIndicator;
            return this;
        }

        /**
         * Setter for matchDetails.
         * @param  matchDetails  MatchDetail value for matchDetails.
         * @return Builder
         */
        public Builder matchDetails(MatchDetail matchDetails) {
            this.matchDetails = matchDetails;
            return this;
        }

        /**
         * Setter for members.
         * @param  members  List of Member value for members.
         * @return Builder
         */
        public Builder members(List<Member> members) {
            this.members = members;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  InputNameDetail value for name.
         * @return Builder
         */
        public Builder name(InputNameDetail name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for nameID.
         * @param  nameID  String value for nameID.
         * @return Builder
         */
        public Builder nameID(String nameID) {
            this.nameID = nameID;
            return this;
        }

        /**
         * Setter for searchType.
         * @param  searchType  String value for searchType.
         * @return Builder
         */
        public Builder searchType(String searchType) {
            this.searchType = searchType;
            return this;
        }

        /**
         * Builds a new {@link GoneAwaySegment} object using the set fields.
         * @return {@link GoneAwaySegment}
         */
        public GoneAwaySegment build() {
            return new GoneAwaySegment(membersCount, applicantIndicator, informationSource,
                    location, locationIndicator, matchDetails, members, name, nameID, searchType);
        }
    }
}
