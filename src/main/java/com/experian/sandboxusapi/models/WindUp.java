/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for WindUp type.
 */
public class WindUp {
    private List<Dimissal> dismissal;
    private List<Order> order;
    private List<Petition> petition;
    private List<Resolution> resolution;

    /**
     * Default constructor.
     */
    public WindUp() {
    }

    /**
     * Initialization constructor.
     * @param  dismissal  List of Dimissal value for dismissal.
     * @param  order  List of Order value for order.
     * @param  petition  List of Petition value for petition.
     * @param  resolution  List of Resolution value for resolution.
     */
    public WindUp(
            List<Dimissal> dismissal,
            List<Order> order,
            List<Petition> petition,
            List<Resolution> resolution) {
        this.dismissal = dismissal;
        this.order = order;
        this.petition = petition;
        this.resolution = resolution;
    }

    /**
     * Getter for Dismissal.
     * @return Returns the List of Dimissal
     */
    @JsonGetter("Dismissal")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Dimissal> getDismissal() {
        return dismissal;
    }

    /**
     * Setter for Dismissal.
     * @param dismissal Value for List of Dimissal
     */
    @JsonSetter("Dismissal")
    public void setDismissal(List<Dimissal> dismissal) {
        this.dismissal = dismissal;
    }

    /**
     * Getter for Order.
     * @return Returns the List of Order
     */
    @JsonGetter("Order")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Order> getOrder() {
        return order;
    }

    /**
     * Setter for Order.
     * @param order Value for List of Order
     */
    @JsonSetter("Order")
    public void setOrder(List<Order> order) {
        this.order = order;
    }

    /**
     * Getter for Petition.
     * @return Returns the List of Petition
     */
    @JsonGetter("Petition")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Petition> getPetition() {
        return petition;
    }

    /**
     * Setter for Petition.
     * @param petition Value for List of Petition
     */
    @JsonSetter("Petition")
    public void setPetition(List<Petition> petition) {
        this.petition = petition;
    }

    /**
     * Getter for Resolution.
     * @return Returns the List of Resolution
     */
    @JsonGetter("Resolution")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Resolution> getResolution() {
        return resolution;
    }

    /**
     * Setter for Resolution.
     * @param resolution Value for List of Resolution
     */
    @JsonSetter("Resolution")
    public void setResolution(List<Resolution> resolution) {
        this.resolution = resolution;
    }

    /**
     * Converts this WindUp into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "WindUp [" + "dismissal=" + dismissal + ", order=" + order + ", petition=" + petition
                + ", resolution=" + resolution + "]";
    }

    /**
     * Builds a new {@link WindUp.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link WindUp.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .dismissal(getDismissal())
                .order(getOrder())
                .petition(getPetition())
                .resolution(getResolution());
        return builder;
    }

    /**
     * Class to build instances of {@link WindUp}.
     */
    public static class Builder {
        private List<Dimissal> dismissal;
        private List<Order> order;
        private List<Petition> petition;
        private List<Resolution> resolution;



        /**
         * Setter for dismissal.
         * @param  dismissal  List of Dimissal value for dismissal.
         * @return Builder
         */
        public Builder dismissal(List<Dimissal> dismissal) {
            this.dismissal = dismissal;
            return this;
        }

        /**
         * Setter for order.
         * @param  order  List of Order value for order.
         * @return Builder
         */
        public Builder order(List<Order> order) {
            this.order = order;
            return this;
        }

        /**
         * Setter for petition.
         * @param  petition  List of Petition value for petition.
         * @return Builder
         */
        public Builder petition(List<Petition> petition) {
            this.petition = petition;
            return this;
        }

        /**
         * Setter for resolution.
         * @param  resolution  List of Resolution value for resolution.
         * @return Builder
         */
        public Builder resolution(List<Resolution> resolution) {
            this.resolution = resolution;
            return this;
        }

        /**
         * Builds a new {@link WindUp} object using the set fields.
         * @return {@link WindUp}
         */
        public WindUp build() {
            return new WindUp(dismissal, order, petition, resolution);
        }
    }
}
