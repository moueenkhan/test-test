/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for InvestmentAssetsDetails type.
 */
public class InvestmentAssetsDetails {
    private Double investmentAssets;
    private Double property;
    private Double subsidiaryAssociateJoint;
    private Double otherInvestments;

    /**
     * Default constructor.
     */
    public InvestmentAssetsDetails() {
    }

    /**
     * Initialization constructor.
     * @param  investmentAssets  Double value for investmentAssets.
     * @param  property  Double value for property.
     * @param  subsidiaryAssociateJoint  Double value for subsidiaryAssociateJoint.
     * @param  otherInvestments  Double value for otherInvestments.
     */
    public InvestmentAssetsDetails(
            Double investmentAssets,
            Double property,
            Double subsidiaryAssociateJoint,
            Double otherInvestments) {
        this.investmentAssets = investmentAssets;
        this.property = property;
        this.subsidiaryAssociateJoint = subsidiaryAssociateJoint;
        this.otherInvestments = otherInvestments;
    }

    /**
     * Getter for InvestmentAssets.
     * Value for Balance Sheet - Intangible Assets - Investment Assets for these accounts
     * @return Returns the Double
     */
    @JsonGetter("InvestmentAssets")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getInvestmentAssets() {
        return investmentAssets;
    }

    /**
     * Setter for InvestmentAssets.
     * Value for Balance Sheet - Intangible Assets - Investment Assets for these accounts
     * @param investmentAssets Value for Double
     */
    @JsonSetter("InvestmentAssets")
    public void setInvestmentAssets(Double investmentAssets) {
        this.investmentAssets = investmentAssets;
    }

    /**
     * Getter for Property.
     * Value for Balance Sheet - Intangible Assets - Property for these accounts
     * @return Returns the Double
     */
    @JsonGetter("Property")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getProperty() {
        return property;
    }

    /**
     * Setter for Property.
     * Value for Balance Sheet - Intangible Assets - Property for these accounts
     * @param property Value for Double
     */
    @JsonSetter("Property")
    public void setProperty(Double property) {
        this.property = property;
    }

    /**
     * Getter for SubsidiaryAssociateJoint.
     * Value for Balance Sheet - Intangible Assets - Subsidiary / Associate / Joint assets for these
     * account
     * @return Returns the Double
     */
    @JsonGetter("SubsidiaryAssociateJoint")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getSubsidiaryAssociateJoint() {
        return subsidiaryAssociateJoint;
    }

    /**
     * Setter for SubsidiaryAssociateJoint.
     * Value for Balance Sheet - Intangible Assets - Subsidiary / Associate / Joint assets for these
     * account
     * @param subsidiaryAssociateJoint Value for Double
     */
    @JsonSetter("SubsidiaryAssociateJoint")
    public void setSubsidiaryAssociateJoint(Double subsidiaryAssociateJoint) {
        this.subsidiaryAssociateJoint = subsidiaryAssociateJoint;
    }

    /**
     * Getter for OtherInvestments.
     * Value for Balance Sheet - Intangible Assets - Other Investments for these accounts
     * @return Returns the Double
     */
    @JsonGetter("OtherInvestments")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getOtherInvestments() {
        return otherInvestments;
    }

    /**
     * Setter for OtherInvestments.
     * Value for Balance Sheet - Intangible Assets - Other Investments for these accounts
     * @param otherInvestments Value for Double
     */
    @JsonSetter("OtherInvestments")
    public void setOtherInvestments(Double otherInvestments) {
        this.otherInvestments = otherInvestments;
    }

    /**
     * Converts this InvestmentAssetsDetails into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "InvestmentAssetsDetails [" + "investmentAssets=" + investmentAssets + ", property="
                + property + ", subsidiaryAssociateJoint=" + subsidiaryAssociateJoint
                + ", otherInvestments=" + otherInvestments + "]";
    }

    /**
     * Builds a new {@link InvestmentAssetsDetails.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link InvestmentAssetsDetails.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .investmentAssets(getInvestmentAssets())
                .property(getProperty())
                .subsidiaryAssociateJoint(getSubsidiaryAssociateJoint())
                .otherInvestments(getOtherInvestments());
        return builder;
    }

    /**
     * Class to build instances of {@link InvestmentAssetsDetails}.
     */
    public static class Builder {
        private Double investmentAssets;
        private Double property;
        private Double subsidiaryAssociateJoint;
        private Double otherInvestments;



        /**
         * Setter for investmentAssets.
         * @param  investmentAssets  Double value for investmentAssets.
         * @return Builder
         */
        public Builder investmentAssets(Double investmentAssets) {
            this.investmentAssets = investmentAssets;
            return this;
        }

        /**
         * Setter for property.
         * @param  property  Double value for property.
         * @return Builder
         */
        public Builder property(Double property) {
            this.property = property;
            return this;
        }

        /**
         * Setter for subsidiaryAssociateJoint.
         * @param  subsidiaryAssociateJoint  Double value for subsidiaryAssociateJoint.
         * @return Builder
         */
        public Builder subsidiaryAssociateJoint(Double subsidiaryAssociateJoint) {
            this.subsidiaryAssociateJoint = subsidiaryAssociateJoint;
            return this;
        }

        /**
         * Setter for otherInvestments.
         * @param  otherInvestments  Double value for otherInvestments.
         * @return Builder
         */
        public Builder otherInvestments(Double otherInvestments) {
            this.otherInvestments = otherInvestments;
            return this;
        }

        /**
         * Builds a new {@link InvestmentAssetsDetails} object using the set fields.
         * @return {@link InvestmentAssetsDetails}
         */
        public InvestmentAssetsDetails build() {
            return new InvestmentAssetsDetails(investmentAssets, property, subsidiaryAssociateJoint,
                    otherInvestments);
        }
    }
}
