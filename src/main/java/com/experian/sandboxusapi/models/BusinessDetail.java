/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for BusinessDetail type.
 */
public class BusinessDetail {
    private String businessName;
    private InputLocationDetail location;
    private String phoneNumber;

    /**
     * Default constructor.
     */
    public BusinessDetail() {
    }

    /**
     * Initialization constructor.
     * @param  businessName  String value for businessName.
     * @param  location  InputLocationDetail value for location.
     * @param  phoneNumber  String value for phoneNumber.
     */
    public BusinessDetail(
            String businessName,
            InputLocationDetail location,
            String phoneNumber) {
        this.businessName = businessName;
        this.location = location;
        this.phoneNumber = phoneNumber;
    }

    /**
     * Getter for BusinessName.
     * Name of the non-registered company
     * @return Returns the String
     */
    @JsonGetter("BusinessName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBusinessName() {
        return businessName;
    }

    /**
     * Setter for BusinessName.
     * Name of the non-registered company
     * @param businessName Value for String
     */
    @JsonSetter("BusinessName")
    public void setBusinessName(String businessName) {
        this.businessName = businessName;
    }

    /**
     * Getter for Location.
     * @return Returns the InputLocationDetail
     */
    @JsonGetter("Location")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public InputLocationDetail getLocation() {
        return location;
    }

    /**
     * Setter for Location.
     * @param location Value for InputLocationDetail
     */
    @JsonSetter("Location")
    public void setLocation(InputLocationDetail location) {
        this.location = location;
    }

    /**
     * Getter for PhoneNumber.
     * Phone number of the non-registered company
     * @return Returns the String
     */
    @JsonGetter("PhoneNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPhoneNumber() {
        return phoneNumber;
    }

    /**
     * Setter for PhoneNumber.
     * Phone number of the non-registered company
     * @param phoneNumber Value for String
     */
    @JsonSetter("PhoneNumber")
    public void setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
    }

    /**
     * Converts this BusinessDetail into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "BusinessDetail [" + "businessName=" + businessName + ", location=" + location
                + ", phoneNumber=" + phoneNumber + "]";
    }

    /**
     * Builds a new {@link BusinessDetail.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link BusinessDetail.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .businessName(getBusinessName())
                .location(getLocation())
                .phoneNumber(getPhoneNumber());
        return builder;
    }

    /**
     * Class to build instances of {@link BusinessDetail}.
     */
    public static class Builder {
        private String businessName;
        private InputLocationDetail location;
        private String phoneNumber;



        /**
         * Setter for businessName.
         * @param  businessName  String value for businessName.
         * @return Builder
         */
        public Builder businessName(String businessName) {
            this.businessName = businessName;
            return this;
        }

        /**
         * Setter for location.
         * @param  location  InputLocationDetail value for location.
         * @return Builder
         */
        public Builder location(InputLocationDetail location) {
            this.location = location;
            return this;
        }

        /**
         * Setter for phoneNumber.
         * @param  phoneNumber  String value for phoneNumber.
         * @return Builder
         */
        public Builder phoneNumber(String phoneNumber) {
            this.phoneNumber = phoneNumber;
            return this;
        }

        /**
         * Builds a new {@link BusinessDetail} object using the set fields.
         * @return {@link BusinessDetail}
         */
        public BusinessDetail build() {
            return new BusinessDetail(businessName, location, phoneNumber);
        }
    }
}
