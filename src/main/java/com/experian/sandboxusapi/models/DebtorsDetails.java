/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for DebtorsDetails type.
 */
public class DebtorsDetails {
    private Double debtors;
    private Double accountsReceivableTradeDebtors;
    private Double debtorsSubsidiaryAssociateJoint;
    private Double prepaymentsAccruals;
    private Double debtorsGroupLoans;
    private Double debtorsDirectorLoans;
    private Double otherDebtors;

    /**
     * Default constructor.
     */
    public DebtorsDetails() {
    }

    /**
     * Initialization constructor.
     * @param  debtors  Double value for debtors.
     * @param  accountsReceivableTradeDebtors  Double value for accountsReceivableTradeDebtors.
     * @param  debtorsSubsidiaryAssociateJoint  Double value for debtorsSubsidiaryAssociateJoint.
     * @param  prepaymentsAccruals  Double value for prepaymentsAccruals.
     * @param  debtorsGroupLoans  Double value for debtorsGroupLoans.
     * @param  debtorsDirectorLoans  Double value for debtorsDirectorLoans.
     * @param  otherDebtors  Double value for otherDebtors.
     */
    public DebtorsDetails(
            Double debtors,
            Double accountsReceivableTradeDebtors,
            Double debtorsSubsidiaryAssociateJoint,
            Double prepaymentsAccruals,
            Double debtorsGroupLoans,
            Double debtorsDirectorLoans,
            Double otherDebtors) {
        this.debtors = debtors;
        this.accountsReceivableTradeDebtors = accountsReceivableTradeDebtors;
        this.debtorsSubsidiaryAssociateJoint = debtorsSubsidiaryAssociateJoint;
        this.prepaymentsAccruals = prepaymentsAccruals;
        this.debtorsGroupLoans = debtorsGroupLoans;
        this.debtorsDirectorLoans = debtorsDirectorLoans;
        this.otherDebtors = otherDebtors;
    }

    /**
     * Getter for Debtors.
     * Value for Balance Sheet - Debtors for these accounts
     * @return Returns the Double
     */
    @JsonGetter("Debtors")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getDebtors() {
        return debtors;
    }

    /**
     * Setter for Debtors.
     * Value for Balance Sheet - Debtors for these accounts
     * @param debtors Value for Double
     */
    @JsonSetter("Debtors")
    public void setDebtors(Double debtors) {
        this.debtors = debtors;
    }

    /**
     * Getter for AccountsReceivableTradeDebtors.
     * Value for Balance Sheet - Debtors - Accounts Receivable Trade debtors for these accounts
     * @return Returns the Double
     */
    @JsonGetter("AccountsReceivableTradeDebtors")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getAccountsReceivableTradeDebtors() {
        return accountsReceivableTradeDebtors;
    }

    /**
     * Setter for AccountsReceivableTradeDebtors.
     * Value for Balance Sheet - Debtors - Accounts Receivable Trade debtors for these accounts
     * @param accountsReceivableTradeDebtors Value for Double
     */
    @JsonSetter("AccountsReceivableTradeDebtors")
    public void setAccountsReceivableTradeDebtors(Double accountsReceivableTradeDebtors) {
        this.accountsReceivableTradeDebtors = accountsReceivableTradeDebtors;
    }

    /**
     * Getter for DebtorsSubsidiaryAssociateJoint.
     * Value for Balance Sheet - Debtors - Subsidiary / Associate / Joint debtors for these accounts
     * @return Returns the Double
     */
    @JsonGetter("DebtorsSubsidiaryAssociateJoint")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getDebtorsSubsidiaryAssociateJoint() {
        return debtorsSubsidiaryAssociateJoint;
    }

    /**
     * Setter for DebtorsSubsidiaryAssociateJoint.
     * Value for Balance Sheet - Debtors - Subsidiary / Associate / Joint debtors for these accounts
     * @param debtorsSubsidiaryAssociateJoint Value for Double
     */
    @JsonSetter("DebtorsSubsidiaryAssociateJoint")
    public void setDebtorsSubsidiaryAssociateJoint(Double debtorsSubsidiaryAssociateJoint) {
        this.debtorsSubsidiaryAssociateJoint = debtorsSubsidiaryAssociateJoint;
    }

    /**
     * Getter for PrepaymentsAccruals.
     * Value for Balance Sheet - Debtors - Prepayments Accruals for these accounts
     * @return Returns the Double
     */
    @JsonGetter("PrepaymentsAccruals")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPrepaymentsAccruals() {
        return prepaymentsAccruals;
    }

    /**
     * Setter for PrepaymentsAccruals.
     * Value for Balance Sheet - Debtors - Prepayments Accruals for these accounts
     * @param prepaymentsAccruals Value for Double
     */
    @JsonSetter("PrepaymentsAccruals")
    public void setPrepaymentsAccruals(Double prepaymentsAccruals) {
        this.prepaymentsAccruals = prepaymentsAccruals;
    }

    /**
     * Getter for DebtorsGroupLoans.
     * Value for Balance Sheet - Debtors - Debtors Group Loans for these accounts (applicable to UK
     * GAAP only)
     * @return Returns the Double
     */
    @JsonGetter("DebtorsGroupLoans")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getDebtorsGroupLoans() {
        return debtorsGroupLoans;
    }

    /**
     * Setter for DebtorsGroupLoans.
     * Value for Balance Sheet - Debtors - Debtors Group Loans for these accounts (applicable to UK
     * GAAP only)
     * @param debtorsGroupLoans Value for Double
     */
    @JsonSetter("DebtorsGroupLoans")
    public void setDebtorsGroupLoans(Double debtorsGroupLoans) {
        this.debtorsGroupLoans = debtorsGroupLoans;
    }

    /**
     * Getter for DebtorsDirectorLoans.
     * Value for Balance Sheet - Debtors - Debtors Director's Loans for these accounts (applicable
     * to UK GAAP only)
     * @return Returns the Double
     */
    @JsonGetter("DebtorsDirectorLoans")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getDebtorsDirectorLoans() {
        return debtorsDirectorLoans;
    }

    /**
     * Setter for DebtorsDirectorLoans.
     * Value for Balance Sheet - Debtors - Debtors Director's Loans for these accounts (applicable
     * to UK GAAP only)
     * @param debtorsDirectorLoans Value for Double
     */
    @JsonSetter("DebtorsDirectorLoans")
    public void setDebtorsDirectorLoans(Double debtorsDirectorLoans) {
        this.debtorsDirectorLoans = debtorsDirectorLoans;
    }

    /**
     * Getter for OtherDebtors.
     * Value for Balance Sheet - Debtors - Other Debtors for these accounts
     * @return Returns the Double
     */
    @JsonGetter("OtherDebtors")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getOtherDebtors() {
        return otherDebtors;
    }

    /**
     * Setter for OtherDebtors.
     * Value for Balance Sheet - Debtors - Other Debtors for these accounts
     * @param otherDebtors Value for Double
     */
    @JsonSetter("OtherDebtors")
    public void setOtherDebtors(Double otherDebtors) {
        this.otherDebtors = otherDebtors;
    }

    /**
     * Converts this DebtorsDetails into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DebtorsDetails [" + "debtors=" + debtors + ", accountsReceivableTradeDebtors="
                + accountsReceivableTradeDebtors + ", debtorsSubsidiaryAssociateJoint="
                + debtorsSubsidiaryAssociateJoint + ", prepaymentsAccruals=" + prepaymentsAccruals
                + ", debtorsGroupLoans=" + debtorsGroupLoans + ", debtorsDirectorLoans="
                + debtorsDirectorLoans + ", otherDebtors=" + otherDebtors + "]";
    }

    /**
     * Builds a new {@link DebtorsDetails.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DebtorsDetails.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .debtors(getDebtors())
                .accountsReceivableTradeDebtors(getAccountsReceivableTradeDebtors())
                .debtorsSubsidiaryAssociateJoint(getDebtorsSubsidiaryAssociateJoint())
                .prepaymentsAccruals(getPrepaymentsAccruals())
                .debtorsGroupLoans(getDebtorsGroupLoans())
                .debtorsDirectorLoans(getDebtorsDirectorLoans())
                .otherDebtors(getOtherDebtors());
        return builder;
    }

    /**
     * Class to build instances of {@link DebtorsDetails}.
     */
    public static class Builder {
        private Double debtors;
        private Double accountsReceivableTradeDebtors;
        private Double debtorsSubsidiaryAssociateJoint;
        private Double prepaymentsAccruals;
        private Double debtorsGroupLoans;
        private Double debtorsDirectorLoans;
        private Double otherDebtors;



        /**
         * Setter for debtors.
         * @param  debtors  Double value for debtors.
         * @return Builder
         */
        public Builder debtors(Double debtors) {
            this.debtors = debtors;
            return this;
        }

        /**
         * Setter for accountsReceivableTradeDebtors.
         * @param  accountsReceivableTradeDebtors  Double value for accountsReceivableTradeDebtors.
         * @return Builder
         */
        public Builder accountsReceivableTradeDebtors(Double accountsReceivableTradeDebtors) {
            this.accountsReceivableTradeDebtors = accountsReceivableTradeDebtors;
            return this;
        }

        /**
         * Setter for debtorsSubsidiaryAssociateJoint.
         * @param  debtorsSubsidiaryAssociateJoint  Double value for
         *         debtorsSubsidiaryAssociateJoint.
         * @return Builder
         */
        public Builder debtorsSubsidiaryAssociateJoint(Double debtorsSubsidiaryAssociateJoint) {
            this.debtorsSubsidiaryAssociateJoint = debtorsSubsidiaryAssociateJoint;
            return this;
        }

        /**
         * Setter for prepaymentsAccruals.
         * @param  prepaymentsAccruals  Double value for prepaymentsAccruals.
         * @return Builder
         */
        public Builder prepaymentsAccruals(Double prepaymentsAccruals) {
            this.prepaymentsAccruals = prepaymentsAccruals;
            return this;
        }

        /**
         * Setter for debtorsGroupLoans.
         * @param  debtorsGroupLoans  Double value for debtorsGroupLoans.
         * @return Builder
         */
        public Builder debtorsGroupLoans(Double debtorsGroupLoans) {
            this.debtorsGroupLoans = debtorsGroupLoans;
            return this;
        }

        /**
         * Setter for debtorsDirectorLoans.
         * @param  debtorsDirectorLoans  Double value for debtorsDirectorLoans.
         * @return Builder
         */
        public Builder debtorsDirectorLoans(Double debtorsDirectorLoans) {
            this.debtorsDirectorLoans = debtorsDirectorLoans;
            return this;
        }

        /**
         * Setter for otherDebtors.
         * @param  otherDebtors  Double value for otherDebtors.
         * @return Builder
         */
        public Builder otherDebtors(Double otherDebtors) {
            this.otherDebtors = otherDebtors;
            return this;
        }

        /**
         * Builds a new {@link DebtorsDetails} object using the set fields.
         * @return {@link DebtorsDetails}
         */
        public DebtorsDetails build() {
            return new DebtorsDetails(debtors, accountsReceivableTradeDebtors,
                    debtorsSubsidiaryAssociateJoint, prepaymentsAccruals, debtorsGroupLoans,
                    debtorsDirectorLoans, otherDebtors);
        }
    }
}
