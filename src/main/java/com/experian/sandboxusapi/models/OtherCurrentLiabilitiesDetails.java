/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for OtherCurrentLiabilitiesDetails type.
 */
public class OtherCurrentLiabilitiesDetails {
    private Double otherCurrentLiabilities;
    private Double assetsHeldForResale;
    private Double other;
    private Double dividends;

    /**
     * Default constructor.
     */
    public OtherCurrentLiabilitiesDetails() {
    }

    /**
     * Initialization constructor.
     * @param  otherCurrentLiabilities  Double value for otherCurrentLiabilities.
     * @param  assetsHeldForResale  Double value for assetsHeldForResale.
     * @param  other  Double value for other.
     * @param  dividends  Double value for dividends.
     */
    public OtherCurrentLiabilitiesDetails(
            Double otherCurrentLiabilities,
            Double assetsHeldForResale,
            Double other,
            Double dividends) {
        this.otherCurrentLiabilities = otherCurrentLiabilities;
        this.assetsHeldForResale = assetsHeldForResale;
        this.other = other;
        this.dividends = dividends;
    }

    /**
     * Getter for OtherCurrentLiabilities.
     * Value for Balance Sheet - Other Current Liabilities Details - Other Current Liabilities for
     * these accounts
     * @return Returns the Double
     */
    @JsonGetter("OtherCurrentLiabilities")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getOtherCurrentLiabilities() {
        return otherCurrentLiabilities;
    }

    /**
     * Setter for OtherCurrentLiabilities.
     * Value for Balance Sheet - Other Current Liabilities Details - Other Current Liabilities for
     * these accounts
     * @param otherCurrentLiabilities Value for Double
     */
    @JsonSetter("OtherCurrentLiabilities")
    public void setOtherCurrentLiabilities(Double otherCurrentLiabilities) {
        this.otherCurrentLiabilities = otherCurrentLiabilities;
    }

    /**
     * Getter for AssetsHeldForResale.
     * Value for Balance Sheet - Other Current Liabilities Details - Assets Held for Resale for
     * these accounts
     * @return Returns the Double
     */
    @JsonGetter("AssetsHeldForResale")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getAssetsHeldForResale() {
        return assetsHeldForResale;
    }

    /**
     * Setter for AssetsHeldForResale.
     * Value for Balance Sheet - Other Current Liabilities Details - Assets Held for Resale for
     * these accounts
     * @param assetsHeldForResale Value for Double
     */
    @JsonSetter("AssetsHeldForResale")
    public void setAssetsHeldForResale(Double assetsHeldForResale) {
        this.assetsHeldForResale = assetsHeldForResale;
    }

    /**
     * Getter for Other.
     * Value for Balance Sheet - Other Current Liabilities Details - Other for these accounts
     * @return Returns the Double
     */
    @JsonGetter("Other")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getOther() {
        return other;
    }

    /**
     * Setter for Other.
     * Value for Balance Sheet - Other Current Liabilities Details - Other for these accounts
     * @param other Value for Double
     */
    @JsonSetter("Other")
    public void setOther(Double other) {
        this.other = other;
    }

    /**
     * Getter for Dividends.
     * Value for Balance Sheet - Other Current Liabilities Details - Dividends for these accounts
     * (applicable to UK GAAP only)
     * @return Returns the Double
     */
    @JsonGetter("Dividends")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getDividends() {
        return dividends;
    }

    /**
     * Setter for Dividends.
     * Value for Balance Sheet - Other Current Liabilities Details - Dividends for these accounts
     * (applicable to UK GAAP only)
     * @param dividends Value for Double
     */
    @JsonSetter("Dividends")
    public void setDividends(Double dividends) {
        this.dividends = dividends;
    }

    /**
     * Converts this OtherCurrentLiabilitiesDetails into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "OtherCurrentLiabilitiesDetails [" + "otherCurrentLiabilities="
                + otherCurrentLiabilities + ", assetsHeldForResale=" + assetsHeldForResale
                + ", other=" + other + ", dividends=" + dividends + "]";
    }

    /**
     * Builds a new {@link OtherCurrentLiabilitiesDetails.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link OtherCurrentLiabilitiesDetails.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .otherCurrentLiabilities(getOtherCurrentLiabilities())
                .assetsHeldForResale(getAssetsHeldForResale())
                .other(getOther())
                .dividends(getDividends());
        return builder;
    }

    /**
     * Class to build instances of {@link OtherCurrentLiabilitiesDetails}.
     */
    public static class Builder {
        private Double otherCurrentLiabilities;
        private Double assetsHeldForResale;
        private Double other;
        private Double dividends;



        /**
         * Setter for otherCurrentLiabilities.
         * @param  otherCurrentLiabilities  Double value for otherCurrentLiabilities.
         * @return Builder
         */
        public Builder otherCurrentLiabilities(Double otherCurrentLiabilities) {
            this.otherCurrentLiabilities = otherCurrentLiabilities;
            return this;
        }

        /**
         * Setter for assetsHeldForResale.
         * @param  assetsHeldForResale  Double value for assetsHeldForResale.
         * @return Builder
         */
        public Builder assetsHeldForResale(Double assetsHeldForResale) {
            this.assetsHeldForResale = assetsHeldForResale;
            return this;
        }

        /**
         * Setter for other.
         * @param  other  Double value for other.
         * @return Builder
         */
        public Builder other(Double other) {
            this.other = other;
            return this;
        }

        /**
         * Setter for dividends.
         * @param  dividends  Double value for dividends.
         * @return Builder
         */
        public Builder dividends(Double dividends) {
            this.dividends = dividends;
            return this;
        }

        /**
         * Builds a new {@link OtherCurrentLiabilitiesDetails} object using the set fields.
         * @return {@link OtherCurrentLiabilitiesDetails}
         */
        public OtherCurrentLiabilitiesDetails build() {
            return new OtherCurrentLiabilitiesDetails(otherCurrentLiabilities, assetsHeldForResale,
                    other, dividends);
        }
    }
}
