/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for EmployeeRemunerationDetails type.
 */
public class EmployeeRemunerationDetails {
    private Double employeeRemuneration;
    private Double wages;
    private Double socialSecurityCosts;
    private Double pensionCosts;
    private Double otherCosts;

    /**
     * Default constructor.
     */
    public EmployeeRemunerationDetails() {
    }

    /**
     * Initialization constructor.
     * @param  employeeRemuneration  Double value for employeeRemuneration.
     * @param  wages  Double value for wages.
     * @param  socialSecurityCosts  Double value for socialSecurityCosts.
     * @param  pensionCosts  Double value for pensionCosts.
     * @param  otherCosts  Double value for otherCosts.
     */
    public EmployeeRemunerationDetails(
            Double employeeRemuneration,
            Double wages,
            Double socialSecurityCosts,
            Double pensionCosts,
            Double otherCosts) {
        this.employeeRemuneration = employeeRemuneration;
        this.wages = wages;
        this.socialSecurityCosts = socialSecurityCosts;
        this.pensionCosts = pensionCosts;
        this.otherCosts = otherCosts;
    }

    /**
     * Getter for EmployeeRemuneration.
     * Value for Disclosure Items - Employee Remuneration for these accounts
     * @return Returns the Double
     */
    @JsonGetter("EmployeeRemuneration")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getEmployeeRemuneration() {
        return employeeRemuneration;
    }

    /**
     * Setter for EmployeeRemuneration.
     * Value for Disclosure Items - Employee Remuneration for these accounts
     * @param employeeRemuneration Value for Double
     */
    @JsonSetter("EmployeeRemuneration")
    public void setEmployeeRemuneration(Double employeeRemuneration) {
        this.employeeRemuneration = employeeRemuneration;
    }

    /**
     * Getter for Wages.
     * Value for Disclosure Items - Employee Remuneration - Wages for these accounts
     * @return Returns the Double
     */
    @JsonGetter("Wages")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getWages() {
        return wages;
    }

    /**
     * Setter for Wages.
     * Value for Disclosure Items - Employee Remuneration - Wages for these accounts
     * @param wages Value for Double
     */
    @JsonSetter("Wages")
    public void setWages(Double wages) {
        this.wages = wages;
    }

    /**
     * Getter for SocialSecurityCosts.
     * Value for Disclosure Items - Employee Remuneration - Social Security Costs for these accounts
     * @return Returns the Double
     */
    @JsonGetter("SocialSecurityCosts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getSocialSecurityCosts() {
        return socialSecurityCosts;
    }

    /**
     * Setter for SocialSecurityCosts.
     * Value for Disclosure Items - Employee Remuneration - Social Security Costs for these accounts
     * @param socialSecurityCosts Value for Double
     */
    @JsonSetter("SocialSecurityCosts")
    public void setSocialSecurityCosts(Double socialSecurityCosts) {
        this.socialSecurityCosts = socialSecurityCosts;
    }

    /**
     * Getter for PensionCosts.
     * Value for Disclosure Items - Employee Remuneration - Pension Costs for these accounts
     * @return Returns the Double
     */
    @JsonGetter("PensionCosts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPensionCosts() {
        return pensionCosts;
    }

    /**
     * Setter for PensionCosts.
     * Value for Disclosure Items - Employee Remuneration - Pension Costs for these accounts
     * @param pensionCosts Value for Double
     */
    @JsonSetter("PensionCosts")
    public void setPensionCosts(Double pensionCosts) {
        this.pensionCosts = pensionCosts;
    }

    /**
     * Getter for OtherCosts.
     * Value for Disclosure Items - Employee Remuneration - Other Costs for these accounts
     * @return Returns the Double
     */
    @JsonGetter("OtherCosts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getOtherCosts() {
        return otherCosts;
    }

    /**
     * Setter for OtherCosts.
     * Value for Disclosure Items - Employee Remuneration - Other Costs for these accounts
     * @param otherCosts Value for Double
     */
    @JsonSetter("OtherCosts")
    public void setOtherCosts(Double otherCosts) {
        this.otherCosts = otherCosts;
    }

    /**
     * Converts this EmployeeRemunerationDetails into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "EmployeeRemunerationDetails [" + "employeeRemuneration=" + employeeRemuneration
                + ", wages=" + wages + ", socialSecurityCosts=" + socialSecurityCosts
                + ", pensionCosts=" + pensionCosts + ", otherCosts=" + otherCosts + "]";
    }

    /**
     * Builds a new {@link EmployeeRemunerationDetails.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link EmployeeRemunerationDetails.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .employeeRemuneration(getEmployeeRemuneration())
                .wages(getWages())
                .socialSecurityCosts(getSocialSecurityCosts())
                .pensionCosts(getPensionCosts())
                .otherCosts(getOtherCosts());
        return builder;
    }

    /**
     * Class to build instances of {@link EmployeeRemunerationDetails}.
     */
    public static class Builder {
        private Double employeeRemuneration;
        private Double wages;
        private Double socialSecurityCosts;
        private Double pensionCosts;
        private Double otherCosts;



        /**
         * Setter for employeeRemuneration.
         * @param  employeeRemuneration  Double value for employeeRemuneration.
         * @return Builder
         */
        public Builder employeeRemuneration(Double employeeRemuneration) {
            this.employeeRemuneration = employeeRemuneration;
            return this;
        }

        /**
         * Setter for wages.
         * @param  wages  Double value for wages.
         * @return Builder
         */
        public Builder wages(Double wages) {
            this.wages = wages;
            return this;
        }

        /**
         * Setter for socialSecurityCosts.
         * @param  socialSecurityCosts  Double value for socialSecurityCosts.
         * @return Builder
         */
        public Builder socialSecurityCosts(Double socialSecurityCosts) {
            this.socialSecurityCosts = socialSecurityCosts;
            return this;
        }

        /**
         * Setter for pensionCosts.
         * @param  pensionCosts  Double value for pensionCosts.
         * @return Builder
         */
        public Builder pensionCosts(Double pensionCosts) {
            this.pensionCosts = pensionCosts;
            return this;
        }

        /**
         * Setter for otherCosts.
         * @param  otherCosts  Double value for otherCosts.
         * @return Builder
         */
        public Builder otherCosts(Double otherCosts) {
            this.otherCosts = otherCosts;
            return this;
        }

        /**
         * Builds a new {@link EmployeeRemunerationDetails} object using the set fields.
         * @return {@link EmployeeRemunerationDetails}
         */
        public EmployeeRemunerationDetails build() {
            return new EmployeeRemunerationDetails(employeeRemuneration, wages, socialSecurityCosts,
                    pensionCosts, otherCosts);
        }
    }
}
