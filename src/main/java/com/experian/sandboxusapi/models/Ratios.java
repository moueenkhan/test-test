/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for Ratios type.
 */
public class Ratios {
    private String dateOfAccounts;
    private String currency;
    private String companyClass;
    private String consAccounts;
    private Double currentRatio;
    private Double acidTest;
    private Double stockTurnover;
    private Double creditPeriod;
    private Double workingCapSales;
    private Double tradeCredrsDebtrs;
    private Double returnOnCapital;
    private Double returnOnAssets;
    private Double preTaxProfitMargin;
    private Double returnOnShareholdersFunds;
    private Double borrowingRatio;
    private Double equityGearing;
    private Double debtGearing;
    private Double interestCover;
    private Double salesTangAssets;
    private Double avgRemPerEmp;
    private Double profitPerEmp;
    private Double turnoverPerEmp;
    private Double capEmployedPerEmp;
    private Double tangAssetsPerEmp;
    private Double totAssetsPerEmp;
    private Double empRemuneration;
    private Double numEmployees;
    private Double empRemunerationSales;
    private Double dirRemuneration;

    /**
     * Default constructor.
     */
    public Ratios() {
    }

    /**
     * Initialization constructor.
     * @param  dateOfAccounts  String value for dateOfAccounts.
     * @param  currency  String value for currency.
     * @param  companyClass  String value for companyClass.
     * @param  consAccounts  String value for consAccounts.
     * @param  currentRatio  Double value for currentRatio.
     * @param  acidTest  Double value for acidTest.
     * @param  stockTurnover  Double value for stockTurnover.
     * @param  creditPeriod  Double value for creditPeriod.
     * @param  workingCapSales  Double value for workingCapSales.
     * @param  tradeCredrsDebtrs  Double value for tradeCredrsDebtrs.
     * @param  returnOnCapital  Double value for returnOnCapital.
     * @param  returnOnAssets  Double value for returnOnAssets.
     * @param  preTaxProfitMargin  Double value for preTaxProfitMargin.
     * @param  returnOnShareholdersFunds  Double value for returnOnShareholdersFunds.
     * @param  borrowingRatio  Double value for borrowingRatio.
     * @param  equityGearing  Double value for equityGearing.
     * @param  debtGearing  Double value for debtGearing.
     * @param  interestCover  Double value for interestCover.
     * @param  salesTangAssets  Double value for salesTangAssets.
     * @param  avgRemPerEmp  Double value for avgRemPerEmp.
     * @param  profitPerEmp  Double value for profitPerEmp.
     * @param  turnoverPerEmp  Double value for turnoverPerEmp.
     * @param  capEmployedPerEmp  Double value for capEmployedPerEmp.
     * @param  tangAssetsPerEmp  Double value for tangAssetsPerEmp.
     * @param  totAssetsPerEmp  Double value for totAssetsPerEmp.
     * @param  empRemuneration  Double value for empRemuneration.
     * @param  numEmployees  Double value for numEmployees.
     * @param  empRemunerationSales  Double value for empRemunerationSales.
     * @param  dirRemuneration  Double value for dirRemuneration.
     */
    public Ratios(
            String dateOfAccounts,
            String currency,
            String companyClass,
            String consAccounts,
            Double currentRatio,
            Double acidTest,
            Double stockTurnover,
            Double creditPeriod,
            Double workingCapSales,
            Double tradeCredrsDebtrs,
            Double returnOnCapital,
            Double returnOnAssets,
            Double preTaxProfitMargin,
            Double returnOnShareholdersFunds,
            Double borrowingRatio,
            Double equityGearing,
            Double debtGearing,
            Double interestCover,
            Double salesTangAssets,
            Double avgRemPerEmp,
            Double profitPerEmp,
            Double turnoverPerEmp,
            Double capEmployedPerEmp,
            Double tangAssetsPerEmp,
            Double totAssetsPerEmp,
            Double empRemuneration,
            Double numEmployees,
            Double empRemunerationSales,
            Double dirRemuneration) {
        this.dateOfAccounts = dateOfAccounts;
        this.currency = currency;
        this.companyClass = companyClass;
        this.consAccounts = consAccounts;
        this.currentRatio = currentRatio;
        this.acidTest = acidTest;
        this.stockTurnover = stockTurnover;
        this.creditPeriod = creditPeriod;
        this.workingCapSales = workingCapSales;
        this.tradeCredrsDebtrs = tradeCredrsDebtrs;
        this.returnOnCapital = returnOnCapital;
        this.returnOnAssets = returnOnAssets;
        this.preTaxProfitMargin = preTaxProfitMargin;
        this.returnOnShareholdersFunds = returnOnShareholdersFunds;
        this.borrowingRatio = borrowingRatio;
        this.equityGearing = equityGearing;
        this.debtGearing = debtGearing;
        this.interestCover = interestCover;
        this.salesTangAssets = salesTangAssets;
        this.avgRemPerEmp = avgRemPerEmp;
        this.profitPerEmp = profitPerEmp;
        this.turnoverPerEmp = turnoverPerEmp;
        this.capEmployedPerEmp = capEmployedPerEmp;
        this.tangAssetsPerEmp = tangAssetsPerEmp;
        this.totAssetsPerEmp = totAssetsPerEmp;
        this.empRemuneration = empRemuneration;
        this.numEmployees = numEmployees;
        this.empRemunerationSales = empRemunerationSales;
        this.dirRemuneration = dirRemuneration;
    }

    /**
     * Getter for DateOfAccounts.
     * Filing date for the limited company accounts (yyyy-mm-dd)
     * @return Returns the String
     */
    @JsonGetter("DateOfAccounts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDateOfAccounts() {
        return dateOfAccounts;
    }

    /**
     * Setter for DateOfAccounts.
     * Filing date for the limited company accounts (yyyy-mm-dd)
     * @param dateOfAccounts Value for String
     */
    @JsonSetter("DateOfAccounts")
    public void setDateOfAccounts(String dateOfAccounts) {
        this.dateOfAccounts = dateOfAccounts;
    }

    /**
     * Getter for Currency.
     * Currency under which the accounts have been reported - ISO currency code
     * @return Returns the String
     */
    @JsonGetter("Currency")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCurrency() {
        return currency;
    }

    /**
     * Setter for Currency.
     * Currency under which the accounts have been reported - ISO currency code
     * @param currency Value for String
     */
    @JsonSetter("Currency")
    public void setCurrency(String currency) {
        this.currency = currency;
    }

    /**
     * Getter for CompanyClass.
     * Size classification for the limited company - S = Small sized company; M= Medium sized
     * company; L = Large sized company
     * @return Returns the String
     */
    @JsonGetter("CompanyClass")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCompanyClass() {
        return companyClass;
    }

    /**
     * Setter for CompanyClass.
     * Size classification for the limited company - S = Small sized company; M= Medium sized
     * company; L = Large sized company
     * @param companyClass Value for String
     */
    @JsonSetter("CompanyClass")
    public void setCompanyClass(String companyClass) {
        this.companyClass = companyClass;
    }

    /**
     * Getter for ConsAccounts.
     * Indicator showing whether the accounts are consolidated - Y = Consolidated; N = Not
     * consolidated
     * @return Returns the String
     */
    @JsonGetter("ConsAccounts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getConsAccounts() {
        return consAccounts;
    }

    /**
     * Setter for ConsAccounts.
     * Indicator showing whether the accounts are consolidated - Y = Consolidated; N = Not
     * consolidated
     * @param consAccounts Value for String
     */
    @JsonSetter("ConsAccounts")
    public void setConsAccounts(String consAccounts) {
        this.consAccounts = consAccounts;
    }

    /**
     * Getter for CurrentRatio.
     * Value for Ratios - Current Ratios for these accounts (as percentage ZZZZZ.99 or ZZZZZ.9 where
     * least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("CurrentRatio")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getCurrentRatio() {
        return currentRatio;
    }

    /**
     * Setter for CurrentRatio.
     * Value for Ratios - Current Ratios for these accounts (as percentage ZZZZZ.99 or ZZZZZ.9 where
     * least significant is zero)
     * @param currentRatio Value for Double
     */
    @JsonSetter("CurrentRatio")
    public void setCurrentRatio(Double currentRatio) {
        this.currentRatio = currentRatio;
    }

    /**
     * Getter for AcidTest.
     * Value for Ratios - Acid Test for these accounts (as percentageZZZZZ.99 or ZZZZZ.9 where least
     * significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("AcidTest")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getAcidTest() {
        return acidTest;
    }

    /**
     * Setter for AcidTest.
     * Value for Ratios - Acid Test for these accounts (as percentageZZZZZ.99 or ZZZZZ.9 where least
     * significant is zero)
     * @param acidTest Value for Double
     */
    @JsonSetter("AcidTest")
    public void setAcidTest(Double acidTest) {
        this.acidTest = acidTest;
    }

    /**
     * Getter for StockTurnover.
     * Value for Ratios - Stock Turnover for these accounts (as percentage ZZZZZ.99 or ZZZZZ.9 where
     * least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("StockTurnover")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getStockTurnover() {
        return stockTurnover;
    }

    /**
     * Setter for StockTurnover.
     * Value for Ratios - Stock Turnover for these accounts (as percentage ZZZZZ.99 or ZZZZZ.9 where
     * least significant is zero)
     * @param stockTurnover Value for Double
     */
    @JsonSetter("StockTurnover")
    public void setStockTurnover(Double stockTurnover) {
        this.stockTurnover = stockTurnover;
    }

    /**
     * Getter for CreditPeriod.
     * Value for Ratios - Credit Period in days for these accounts (as ZZZZZ.99 or ZZZZZ.9 where
     * least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("CreditPeriod")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getCreditPeriod() {
        return creditPeriod;
    }

    /**
     * Setter for CreditPeriod.
     * Value for Ratios - Credit Period in days for these accounts (as ZZZZZ.99 or ZZZZZ.9 where
     * least significant is zero)
     * @param creditPeriod Value for Double
     */
    @JsonSetter("CreditPeriod")
    public void setCreditPeriod(Double creditPeriod) {
        this.creditPeriod = creditPeriod;
    }

    /**
     * Getter for WorkingCapSales.
     * Value for Ratios - Working Capital / Sales for these accounts (as percentage ZZZZZ.99 or
     * ZZZZZ.9 where least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("WorkingCapSales")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getWorkingCapSales() {
        return workingCapSales;
    }

    /**
     * Setter for WorkingCapSales.
     * Value for Ratios - Working Capital / Sales for these accounts (as percentage ZZZZZ.99 or
     * ZZZZZ.9 where least significant is zero)
     * @param workingCapSales Value for Double
     */
    @JsonSetter("WorkingCapSales")
    public void setWorkingCapSales(Double workingCapSales) {
        this.workingCapSales = workingCapSales;
    }

    /**
     * Getter for TradeCredrsDebtrs.
     * Value for Ratios - Trade Creditors / Debtors for these accounts (as ZZZZZ.99 or ZZZZZ.9 where
     * least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("TradeCredrsDebtrs")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTradeCredrsDebtrs() {
        return tradeCredrsDebtrs;
    }

    /**
     * Setter for TradeCredrsDebtrs.
     * Value for Ratios - Trade Creditors / Debtors for these accounts (as ZZZZZ.99 or ZZZZZ.9 where
     * least significant is zero)
     * @param tradeCredrsDebtrs Value for Double
     */
    @JsonSetter("TradeCredrsDebtrs")
    public void setTradeCredrsDebtrs(Double tradeCredrsDebtrs) {
        this.tradeCredrsDebtrs = tradeCredrsDebtrs;
    }

    /**
     * Getter for ReturnOnCapital.
     * Value for Ratios - Return On Capital for these accounts (as percentage ZZZZZ.99 or ZZZZZ.9
     * where least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("ReturnOnCapital")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getReturnOnCapital() {
        return returnOnCapital;
    }

    /**
     * Setter for ReturnOnCapital.
     * Value for Ratios - Return On Capital for these accounts (as percentage ZZZZZ.99 or ZZZZZ.9
     * where least significant is zero)
     * @param returnOnCapital Value for Double
     */
    @JsonSetter("ReturnOnCapital")
    public void setReturnOnCapital(Double returnOnCapital) {
        this.returnOnCapital = returnOnCapital;
    }

    /**
     * Getter for ReturnOnAssets.
     * Value for Ratios - Return On Assets for these accounts (as percentage ZZZZZ.99 or ZZZZZ.9
     * where least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("ReturnOnAssets")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getReturnOnAssets() {
        return returnOnAssets;
    }

    /**
     * Setter for ReturnOnAssets.
     * Value for Ratios - Return On Assets for these accounts (as percentage ZZZZZ.99 or ZZZZZ.9
     * where least significant is zero)
     * @param returnOnAssets Value for Double
     */
    @JsonSetter("ReturnOnAssets")
    public void setReturnOnAssets(Double returnOnAssets) {
        this.returnOnAssets = returnOnAssets;
    }

    /**
     * Getter for PreTaxProfitMargin.
     * Value for Ratios - Pre-Tax Profit Margin for these accounts (as percentage ZZZZZ.99 or
     * ZZZZZ.9 where least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("PreTaxProfitMargin")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPreTaxProfitMargin() {
        return preTaxProfitMargin;
    }

    /**
     * Setter for PreTaxProfitMargin.
     * Value for Ratios - Pre-Tax Profit Margin for these accounts (as percentage ZZZZZ.99 or
     * ZZZZZ.9 where least significant is zero)
     * @param preTaxProfitMargin Value for Double
     */
    @JsonSetter("PreTaxProfitMargin")
    public void setPreTaxProfitMargin(Double preTaxProfitMargin) {
        this.preTaxProfitMargin = preTaxProfitMargin;
    }

    /**
     * Getter for ReturnOnShareholdersFunds.
     * Value for Ratios - Return On Shareholders Funds for these accounts (as percentage ZZZZZ.99 or
     * ZZZZZ.9 where least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("ReturnOnShareholdersFunds")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getReturnOnShareholdersFunds() {
        return returnOnShareholdersFunds;
    }

    /**
     * Setter for ReturnOnShareholdersFunds.
     * Value for Ratios - Return On Shareholders Funds for these accounts (as percentage ZZZZZ.99 or
     * ZZZZZ.9 where least significant is zero)
     * @param returnOnShareholdersFunds Value for Double
     */
    @JsonSetter("ReturnOnShareholdersFunds")
    public void setReturnOnShareholdersFunds(Double returnOnShareholdersFunds) {
        this.returnOnShareholdersFunds = returnOnShareholdersFunds;
    }

    /**
     * Getter for BorrowingRatio.
     * Value for Ratios - Borrowing Ratio for these accounts (as percentage ZZZZZ.99 or ZZZZZ.9
     * where least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("BorrowingRatio")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getBorrowingRatio() {
        return borrowingRatio;
    }

    /**
     * Setter for BorrowingRatio.
     * Value for Ratios - Borrowing Ratio for these accounts (as percentage ZZZZZ.99 or ZZZZZ.9
     * where least significant is zero)
     * @param borrowingRatio Value for Double
     */
    @JsonSetter("BorrowingRatio")
    public void setBorrowingRatio(Double borrowingRatio) {
        this.borrowingRatio = borrowingRatio;
    }

    /**
     * Getter for EquityGearing.
     * Value for Ratios - Debt Gearing for these accounts (as percentage ZZZZZ.99 or ZZZZZ.9 where
     * least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("EquityGearing")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getEquityGearing() {
        return equityGearing;
    }

    /**
     * Setter for EquityGearing.
     * Value for Ratios - Debt Gearing for these accounts (as percentage ZZZZZ.99 or ZZZZZ.9 where
     * least significant is zero)
     * @param equityGearing Value for Double
     */
    @JsonSetter("EquityGearing")
    public void setEquityGearing(Double equityGearing) {
        this.equityGearing = equityGearing;
    }

    /**
     * Getter for DebtGearing.
     * Value for Ratios - Equity Gearing for these accounts (as percentage ZZZZZ.99 or ZZZZZ.9 where
     * least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("DebtGearing")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getDebtGearing() {
        return debtGearing;
    }

    /**
     * Setter for DebtGearing.
     * Value for Ratios - Equity Gearing for these accounts (as percentage ZZZZZ.99 or ZZZZZ.9 where
     * least significant is zero)
     * @param debtGearing Value for Double
     */
    @JsonSetter("DebtGearing")
    public void setDebtGearing(Double debtGearing) {
        this.debtGearing = debtGearing;
    }

    /**
     * Getter for InterestCover.
     * Value for Ratios - Interest Cover for these accounts (as ZZZZZ.99 or ZZZZZ.9 where least
     * significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("InterestCover")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getInterestCover() {
        return interestCover;
    }

    /**
     * Setter for InterestCover.
     * Value for Ratios - Interest Cover for these accounts (as ZZZZZ.99 or ZZZZZ.9 where least
     * significant is zero)
     * @param interestCover Value for Double
     */
    @JsonSetter("InterestCover")
    public void setInterestCover(Double interestCover) {
        this.interestCover = interestCover;
    }

    /**
     * Getter for SalesTangAssets.
     * Value for Ratios - Sales / Tangible Assets for these accounts (as ZZZZZ.99 or ZZZZZ.9 where
     * least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("SalesTangAssets")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getSalesTangAssets() {
        return salesTangAssets;
    }

    /**
     * Setter for SalesTangAssets.
     * Value for Ratios - Sales / Tangible Assets for these accounts (as ZZZZZ.99 or ZZZZZ.9 where
     * least significant is zero)
     * @param salesTangAssets Value for Double
     */
    @JsonSetter("SalesTangAssets")
    public void setSalesTangAssets(Double salesTangAssets) {
        this.salesTangAssets = salesTangAssets;
    }

    /**
     * Getter for AvgRemPerEmp.
     * Value for Ratios - Average Remuneration per Employee for these accounts
     * @return Returns the Double
     */
    @JsonGetter("AvgRemPerEmp")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getAvgRemPerEmp() {
        return avgRemPerEmp;
    }

    /**
     * Setter for AvgRemPerEmp.
     * Value for Ratios - Average Remuneration per Employee for these accounts
     * @param avgRemPerEmp Value for Double
     */
    @JsonSetter("AvgRemPerEmp")
    public void setAvgRemPerEmp(Double avgRemPerEmp) {
        this.avgRemPerEmp = avgRemPerEmp;
    }

    /**
     * Getter for ProfitPerEmp.
     * Value for Ratios - Profit per Employee for these accounts
     * @return Returns the Double
     */
    @JsonGetter("ProfitPerEmp")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getProfitPerEmp() {
        return profitPerEmp;
    }

    /**
     * Setter for ProfitPerEmp.
     * Value for Ratios - Profit per Employee for these accounts
     * @param profitPerEmp Value for Double
     */
    @JsonSetter("ProfitPerEmp")
    public void setProfitPerEmp(Double profitPerEmp) {
        this.profitPerEmp = profitPerEmp;
    }

    /**
     * Getter for TurnoverPerEmp.
     * Value for Ratios - Turnover per Employee for these accounts
     * @return Returns the Double
     */
    @JsonGetter("TurnoverPerEmp")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTurnoverPerEmp() {
        return turnoverPerEmp;
    }

    /**
     * Setter for TurnoverPerEmp.
     * Value for Ratios - Turnover per Employee for these accounts
     * @param turnoverPerEmp Value for Double
     */
    @JsonSetter("TurnoverPerEmp")
    public void setTurnoverPerEmp(Double turnoverPerEmp) {
        this.turnoverPerEmp = turnoverPerEmp;
    }

    /**
     * Getter for CapEmployedPerEmp.
     * Value for Ratios - Capital Employed per Employee for these accounts
     * @return Returns the Double
     */
    @JsonGetter("CapEmployedPerEmp")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getCapEmployedPerEmp() {
        return capEmployedPerEmp;
    }

    /**
     * Setter for CapEmployedPerEmp.
     * Value for Ratios - Capital Employed per Employee for these accounts
     * @param capEmployedPerEmp Value for Double
     */
    @JsonSetter("CapEmployedPerEmp")
    public void setCapEmployedPerEmp(Double capEmployedPerEmp) {
        this.capEmployedPerEmp = capEmployedPerEmp;
    }

    /**
     * Getter for TangAssetsPerEmp.
     * Value for Ratios - Tangible Assets per Employee for these accounts
     * @return Returns the Double
     */
    @JsonGetter("TangAssetsPerEmp")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTangAssetsPerEmp() {
        return tangAssetsPerEmp;
    }

    /**
     * Setter for TangAssetsPerEmp.
     * Value for Ratios - Tangible Assets per Employee for these accounts
     * @param tangAssetsPerEmp Value for Double
     */
    @JsonSetter("TangAssetsPerEmp")
    public void setTangAssetsPerEmp(Double tangAssetsPerEmp) {
        this.tangAssetsPerEmp = tangAssetsPerEmp;
    }

    /**
     * Getter for TotAssetsPerEmp.
     * Value for Ratios - Total Assets per Employee for these accounts
     * @return Returns the Double
     */
    @JsonGetter("TotAssetsPerEmp")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTotAssetsPerEmp() {
        return totAssetsPerEmp;
    }

    /**
     * Setter for TotAssetsPerEmp.
     * Value for Ratios - Total Assets per Employee for these accounts
     * @param totAssetsPerEmp Value for Double
     */
    @JsonSetter("TotAssetsPerEmp")
    public void setTotAssetsPerEmp(Double totAssetsPerEmp) {
        this.totAssetsPerEmp = totAssetsPerEmp;
    }

    /**
     * Getter for EmpRemuneration.
     * Value for Ratios - Employee Remuneration for these accounts
     * @return Returns the Double
     */
    @JsonGetter("EmpRemuneration")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getEmpRemuneration() {
        return empRemuneration;
    }

    /**
     * Setter for EmpRemuneration.
     * Value for Ratios - Employee Remuneration for these accounts
     * @param empRemuneration Value for Double
     */
    @JsonSetter("EmpRemuneration")
    public void setEmpRemuneration(Double empRemuneration) {
        this.empRemuneration = empRemuneration;
    }

    /**
     * Getter for NumEmployees.
     * Value for Ratios - Number of Employees for these accounts
     * @return Returns the Double
     */
    @JsonGetter("NumEmployees")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getNumEmployees() {
        return numEmployees;
    }

    /**
     * Setter for NumEmployees.
     * Value for Ratios - Number of Employees for these accounts
     * @param numEmployees Value for Double
     */
    @JsonSetter("NumEmployees")
    public void setNumEmployees(Double numEmployees) {
        this.numEmployees = numEmployees;
    }

    /**
     * Getter for EmpRemunerationSales.
     * Value for Ratios - Employee Remuneration / Sales for these accounts (as percentage ZZZZZ.99
     * or ZZZZZ.9 where least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("EmpRemunerationSales")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getEmpRemunerationSales() {
        return empRemunerationSales;
    }

    /**
     * Setter for EmpRemunerationSales.
     * Value for Ratios - Employee Remuneration / Sales for these accounts (as percentage ZZZZZ.99
     * or ZZZZZ.9 where least significant is zero)
     * @param empRemunerationSales Value for Double
     */
    @JsonSetter("EmpRemunerationSales")
    public void setEmpRemunerationSales(Double empRemunerationSales) {
        this.empRemunerationSales = empRemunerationSales;
    }

    /**
     * Getter for DirRemuneration.
     * Value for Ratios - Director Remuneration for these accounts
     * @return Returns the Double
     */
    @JsonGetter("DirRemuneration")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getDirRemuneration() {
        return dirRemuneration;
    }

    /**
     * Setter for DirRemuneration.
     * Value for Ratios - Director Remuneration for these accounts
     * @param dirRemuneration Value for Double
     */
    @JsonSetter("DirRemuneration")
    public void setDirRemuneration(Double dirRemuneration) {
        this.dirRemuneration = dirRemuneration;
    }

    /**
     * Converts this Ratios into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Ratios [" + "dateOfAccounts=" + dateOfAccounts + ", currency=" + currency
                + ", companyClass=" + companyClass + ", consAccounts=" + consAccounts
                + ", currentRatio=" + currentRatio + ", acidTest=" + acidTest + ", stockTurnover="
                + stockTurnover + ", creditPeriod=" + creditPeriod + ", workingCapSales="
                + workingCapSales + ", tradeCredrsDebtrs=" + tradeCredrsDebtrs
                + ", returnOnCapital=" + returnOnCapital + ", returnOnAssets=" + returnOnAssets
                + ", preTaxProfitMargin=" + preTaxProfitMargin + ", returnOnShareholdersFunds="
                + returnOnShareholdersFunds + ", borrowingRatio=" + borrowingRatio
                + ", equityGearing=" + equityGearing + ", debtGearing=" + debtGearing
                + ", interestCover=" + interestCover + ", salesTangAssets=" + salesTangAssets
                + ", avgRemPerEmp=" + avgRemPerEmp + ", profitPerEmp=" + profitPerEmp
                + ", turnoverPerEmp=" + turnoverPerEmp + ", capEmployedPerEmp=" + capEmployedPerEmp
                + ", tangAssetsPerEmp=" + tangAssetsPerEmp + ", totAssetsPerEmp=" + totAssetsPerEmp
                + ", empRemuneration=" + empRemuneration + ", numEmployees=" + numEmployees
                + ", empRemunerationSales=" + empRemunerationSales + ", dirRemuneration="
                + dirRemuneration + "]";
    }

    /**
     * Builds a new {@link Ratios.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Ratios.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .dateOfAccounts(getDateOfAccounts())
                .currency(getCurrency())
                .companyClass(getCompanyClass())
                .consAccounts(getConsAccounts())
                .currentRatio(getCurrentRatio())
                .acidTest(getAcidTest())
                .stockTurnover(getStockTurnover())
                .creditPeriod(getCreditPeriod())
                .workingCapSales(getWorkingCapSales())
                .tradeCredrsDebtrs(getTradeCredrsDebtrs())
                .returnOnCapital(getReturnOnCapital())
                .returnOnAssets(getReturnOnAssets())
                .preTaxProfitMargin(getPreTaxProfitMargin())
                .returnOnShareholdersFunds(getReturnOnShareholdersFunds())
                .borrowingRatio(getBorrowingRatio())
                .equityGearing(getEquityGearing())
                .debtGearing(getDebtGearing())
                .interestCover(getInterestCover())
                .salesTangAssets(getSalesTangAssets())
                .avgRemPerEmp(getAvgRemPerEmp())
                .profitPerEmp(getProfitPerEmp())
                .turnoverPerEmp(getTurnoverPerEmp())
                .capEmployedPerEmp(getCapEmployedPerEmp())
                .tangAssetsPerEmp(getTangAssetsPerEmp())
                .totAssetsPerEmp(getTotAssetsPerEmp())
                .empRemuneration(getEmpRemuneration())
                .numEmployees(getNumEmployees())
                .empRemunerationSales(getEmpRemunerationSales())
                .dirRemuneration(getDirRemuneration());
        return builder;
    }

    /**
     * Class to build instances of {@link Ratios}.
     */
    public static class Builder {
        private String dateOfAccounts;
        private String currency;
        private String companyClass;
        private String consAccounts;
        private Double currentRatio;
        private Double acidTest;
        private Double stockTurnover;
        private Double creditPeriod;
        private Double workingCapSales;
        private Double tradeCredrsDebtrs;
        private Double returnOnCapital;
        private Double returnOnAssets;
        private Double preTaxProfitMargin;
        private Double returnOnShareholdersFunds;
        private Double borrowingRatio;
        private Double equityGearing;
        private Double debtGearing;
        private Double interestCover;
        private Double salesTangAssets;
        private Double avgRemPerEmp;
        private Double profitPerEmp;
        private Double turnoverPerEmp;
        private Double capEmployedPerEmp;
        private Double tangAssetsPerEmp;
        private Double totAssetsPerEmp;
        private Double empRemuneration;
        private Double numEmployees;
        private Double empRemunerationSales;
        private Double dirRemuneration;



        /**
         * Setter for dateOfAccounts.
         * @param  dateOfAccounts  String value for dateOfAccounts.
         * @return Builder
         */
        public Builder dateOfAccounts(String dateOfAccounts) {
            this.dateOfAccounts = dateOfAccounts;
            return this;
        }

        /**
         * Setter for currency.
         * @param  currency  String value for currency.
         * @return Builder
         */
        public Builder currency(String currency) {
            this.currency = currency;
            return this;
        }

        /**
         * Setter for companyClass.
         * @param  companyClass  String value for companyClass.
         * @return Builder
         */
        public Builder companyClass(String companyClass) {
            this.companyClass = companyClass;
            return this;
        }

        /**
         * Setter for consAccounts.
         * @param  consAccounts  String value for consAccounts.
         * @return Builder
         */
        public Builder consAccounts(String consAccounts) {
            this.consAccounts = consAccounts;
            return this;
        }

        /**
         * Setter for currentRatio.
         * @param  currentRatio  Double value for currentRatio.
         * @return Builder
         */
        public Builder currentRatio(Double currentRatio) {
            this.currentRatio = currentRatio;
            return this;
        }

        /**
         * Setter for acidTest.
         * @param  acidTest  Double value for acidTest.
         * @return Builder
         */
        public Builder acidTest(Double acidTest) {
            this.acidTest = acidTest;
            return this;
        }

        /**
         * Setter for stockTurnover.
         * @param  stockTurnover  Double value for stockTurnover.
         * @return Builder
         */
        public Builder stockTurnover(Double stockTurnover) {
            this.stockTurnover = stockTurnover;
            return this;
        }

        /**
         * Setter for creditPeriod.
         * @param  creditPeriod  Double value for creditPeriod.
         * @return Builder
         */
        public Builder creditPeriod(Double creditPeriod) {
            this.creditPeriod = creditPeriod;
            return this;
        }

        /**
         * Setter for workingCapSales.
         * @param  workingCapSales  Double value for workingCapSales.
         * @return Builder
         */
        public Builder workingCapSales(Double workingCapSales) {
            this.workingCapSales = workingCapSales;
            return this;
        }

        /**
         * Setter for tradeCredrsDebtrs.
         * @param  tradeCredrsDebtrs  Double value for tradeCredrsDebtrs.
         * @return Builder
         */
        public Builder tradeCredrsDebtrs(Double tradeCredrsDebtrs) {
            this.tradeCredrsDebtrs = tradeCredrsDebtrs;
            return this;
        }

        /**
         * Setter for returnOnCapital.
         * @param  returnOnCapital  Double value for returnOnCapital.
         * @return Builder
         */
        public Builder returnOnCapital(Double returnOnCapital) {
            this.returnOnCapital = returnOnCapital;
            return this;
        }

        /**
         * Setter for returnOnAssets.
         * @param  returnOnAssets  Double value for returnOnAssets.
         * @return Builder
         */
        public Builder returnOnAssets(Double returnOnAssets) {
            this.returnOnAssets = returnOnAssets;
            return this;
        }

        /**
         * Setter for preTaxProfitMargin.
         * @param  preTaxProfitMargin  Double value for preTaxProfitMargin.
         * @return Builder
         */
        public Builder preTaxProfitMargin(Double preTaxProfitMargin) {
            this.preTaxProfitMargin = preTaxProfitMargin;
            return this;
        }

        /**
         * Setter for returnOnShareholdersFunds.
         * @param  returnOnShareholdersFunds  Double value for returnOnShareholdersFunds.
         * @return Builder
         */
        public Builder returnOnShareholdersFunds(Double returnOnShareholdersFunds) {
            this.returnOnShareholdersFunds = returnOnShareholdersFunds;
            return this;
        }

        /**
         * Setter for borrowingRatio.
         * @param  borrowingRatio  Double value for borrowingRatio.
         * @return Builder
         */
        public Builder borrowingRatio(Double borrowingRatio) {
            this.borrowingRatio = borrowingRatio;
            return this;
        }

        /**
         * Setter for equityGearing.
         * @param  equityGearing  Double value for equityGearing.
         * @return Builder
         */
        public Builder equityGearing(Double equityGearing) {
            this.equityGearing = equityGearing;
            return this;
        }

        /**
         * Setter for debtGearing.
         * @param  debtGearing  Double value for debtGearing.
         * @return Builder
         */
        public Builder debtGearing(Double debtGearing) {
            this.debtGearing = debtGearing;
            return this;
        }

        /**
         * Setter for interestCover.
         * @param  interestCover  Double value for interestCover.
         * @return Builder
         */
        public Builder interestCover(Double interestCover) {
            this.interestCover = interestCover;
            return this;
        }

        /**
         * Setter for salesTangAssets.
         * @param  salesTangAssets  Double value for salesTangAssets.
         * @return Builder
         */
        public Builder salesTangAssets(Double salesTangAssets) {
            this.salesTangAssets = salesTangAssets;
            return this;
        }

        /**
         * Setter for avgRemPerEmp.
         * @param  avgRemPerEmp  Double value for avgRemPerEmp.
         * @return Builder
         */
        public Builder avgRemPerEmp(Double avgRemPerEmp) {
            this.avgRemPerEmp = avgRemPerEmp;
            return this;
        }

        /**
         * Setter for profitPerEmp.
         * @param  profitPerEmp  Double value for profitPerEmp.
         * @return Builder
         */
        public Builder profitPerEmp(Double profitPerEmp) {
            this.profitPerEmp = profitPerEmp;
            return this;
        }

        /**
         * Setter for turnoverPerEmp.
         * @param  turnoverPerEmp  Double value for turnoverPerEmp.
         * @return Builder
         */
        public Builder turnoverPerEmp(Double turnoverPerEmp) {
            this.turnoverPerEmp = turnoverPerEmp;
            return this;
        }

        /**
         * Setter for capEmployedPerEmp.
         * @param  capEmployedPerEmp  Double value for capEmployedPerEmp.
         * @return Builder
         */
        public Builder capEmployedPerEmp(Double capEmployedPerEmp) {
            this.capEmployedPerEmp = capEmployedPerEmp;
            return this;
        }

        /**
         * Setter for tangAssetsPerEmp.
         * @param  tangAssetsPerEmp  Double value for tangAssetsPerEmp.
         * @return Builder
         */
        public Builder tangAssetsPerEmp(Double tangAssetsPerEmp) {
            this.tangAssetsPerEmp = tangAssetsPerEmp;
            return this;
        }

        /**
         * Setter for totAssetsPerEmp.
         * @param  totAssetsPerEmp  Double value for totAssetsPerEmp.
         * @return Builder
         */
        public Builder totAssetsPerEmp(Double totAssetsPerEmp) {
            this.totAssetsPerEmp = totAssetsPerEmp;
            return this;
        }

        /**
         * Setter for empRemuneration.
         * @param  empRemuneration  Double value for empRemuneration.
         * @return Builder
         */
        public Builder empRemuneration(Double empRemuneration) {
            this.empRemuneration = empRemuneration;
            return this;
        }

        /**
         * Setter for numEmployees.
         * @param  numEmployees  Double value for numEmployees.
         * @return Builder
         */
        public Builder numEmployees(Double numEmployees) {
            this.numEmployees = numEmployees;
            return this;
        }

        /**
         * Setter for empRemunerationSales.
         * @param  empRemunerationSales  Double value for empRemunerationSales.
         * @return Builder
         */
        public Builder empRemunerationSales(Double empRemunerationSales) {
            this.empRemunerationSales = empRemunerationSales;
            return this;
        }

        /**
         * Setter for dirRemuneration.
         * @param  dirRemuneration  Double value for dirRemuneration.
         * @return Builder
         */
        public Builder dirRemuneration(Double dirRemuneration) {
            this.dirRemuneration = dirRemuneration;
            return this;
        }

        /**
         * Builds a new {@link Ratios} object using the set fields.
         * @return {@link Ratios}
         */
        public Ratios build() {
            return new Ratios(dateOfAccounts, currency, companyClass, consAccounts, currentRatio,
                    acidTest, stockTurnover, creditPeriod, workingCapSales, tradeCredrsDebtrs,
                    returnOnCapital, returnOnAssets, preTaxProfitMargin, returnOnShareholdersFunds,
                    borrowingRatio, equityGearing, debtGearing, interestCover, salesTangAssets,
                    avgRemPerEmp, profitPerEmp, turnoverPerEmp, capEmployedPerEmp, tangAssetsPerEmp,
                    totAssetsPerEmp, empRemuneration, numEmployees, empRemunerationSales,
                    dirRemuneration);
        }
    }
}
