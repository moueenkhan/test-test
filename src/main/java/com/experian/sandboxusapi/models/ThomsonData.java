/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for ThomsonData type.
 */
public class ThomsonData {
    private String createdDate;
    private String premiseTypeCode;
    private String premisETypeDesc;
    private String uRL;
    private String relocatedFlag;
    private Integer numContacts;
    private List<Contacts> contact;

    /**
     * Default constructor.
     */
    public ThomsonData() {
    }

    /**
     * Initialization constructor.
     * @param  createdDate  String value for createdDate.
     * @param  premiseTypeCode  String value for premiseTypeCode.
     * @param  premisETypeDesc  String value for premisETypeDesc.
     * @param  uRL  String value for uRL.
     * @param  relocatedFlag  String value for relocatedFlag.
     * @param  numContacts  Integer value for numContacts.
     * @param  contact  List of Contacts value for contact.
     */
    public ThomsonData(
            String createdDate,
            String premiseTypeCode,
            String premisETypeDesc,
            String uRL,
            String relocatedFlag,
            Integer numContacts,
            List<Contacts> contact) {
        this.createdDate = createdDate;
        this.premiseTypeCode = premiseTypeCode;
        this.premisETypeDesc = premisETypeDesc;
        this.uRL = uRL;
        this.relocatedFlag = relocatedFlag;
        this.numContacts = numContacts;
        this.contact = contact;
    }

    /**
     * Getter for CreatedDate.
     * The earliest date when this non-limited business became known to Thomson (yyyy-mm-dd)
     * @return Returns the String
     */
    @JsonGetter("CreatedDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCreatedDate() {
        return createdDate;
    }

    /**
     * Setter for CreatedDate.
     * The earliest date when this non-limited business became known to Thomson (yyyy-mm-dd)
     * @param createdDate Value for String
     */
    @JsonSetter("CreatedDate")
    public void setCreatedDate(String createdDate) {
        this.createdDate = createdDate;
    }

    /**
     * Getter for PremiseTypeCode.
     * Description of the type of premises for the non-limited business
     * @return Returns the String
     */
    @JsonGetter("PremiseTypeCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPremiseTypeCode() {
        return premiseTypeCode;
    }

    /**
     * Setter for PremiseTypeCode.
     * Description of the type of premises for the non-limited business
     * @param premiseTypeCode Value for String
     */
    @JsonSetter("PremiseTypeCode")
    public void setPremiseTypeCode(String premiseTypeCode) {
        this.premiseTypeCode = premiseTypeCode;
    }

    /**
     * Getter for PremisETypeDesc.
     * Code for the type of premises for the non-limited business
     * @return Returns the String
     */
    @JsonGetter("Premis:eTypeDesc")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPremisETypeDesc() {
        return premisETypeDesc;
    }

    /**
     * Setter for PremisETypeDesc.
     * Code for the type of premises for the non-limited business
     * @param premisETypeDesc Value for String
     */
    @JsonSetter("Premis:eTypeDesc")
    public void setPremisETypeDesc(String premisETypeDesc) {
        this.premisETypeDesc = premisETypeDesc;
    }

    /**
     * Getter for URL.
     * URL for the website of the non-limited business
     * @return Returns the String
     */
    @JsonGetter("URL")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getURL() {
        return uRL;
    }

    /**
     * Setter for URL.
     * URL for the website of the non-limited business
     * @param uRL Value for String
     */
    @JsonSetter("URL")
    public void setURL(String uRL) {
        this.uRL = uRL;
    }

    /**
     * Getter for RelocatedFlag.
     * @return Returns the String
     */
    @JsonGetter("RelocatedFlag")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getRelocatedFlag() {
        return relocatedFlag;
    }

    /**
     * Setter for RelocatedFlag.
     * @param relocatedFlag Value for String
     */
    @JsonSetter("RelocatedFlag")
    public void setRelocatedFlag(String relocatedFlag) {
        this.relocatedFlag = relocatedFlag;
    }

    /**
     * Getter for NumContacts.
     * @return Returns the Integer
     */
    @JsonGetter("NumContacts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumContacts() {
        return numContacts;
    }

    /**
     * Setter for NumContacts.
     * @param numContacts Value for Integer
     */
    @JsonSetter("NumContacts")
    public void setNumContacts(Integer numContacts) {
        this.numContacts = numContacts;
    }

    /**
     * Getter for Contact.
     * @return Returns the List of Contacts
     */
    @JsonGetter("Contact")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Contacts> getContact() {
        return contact;
    }

    /**
     * Setter for Contact.
     * @param contact Value for List of Contacts
     */
    @JsonSetter("Contact")
    public void setContact(List<Contacts> contact) {
        this.contact = contact;
    }

    /**
     * Converts this ThomsonData into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ThomsonData [" + "createdDate=" + createdDate + ", premiseTypeCode="
                + premiseTypeCode + ", premisETypeDesc=" + premisETypeDesc + ", uRL=" + uRL
                + ", relocatedFlag=" + relocatedFlag + ", numContacts=" + numContacts + ", contact="
                + contact + "]";
    }

    /**
     * Builds a new {@link ThomsonData.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ThomsonData.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .createdDate(getCreatedDate())
                .premiseTypeCode(getPremiseTypeCode())
                .premisETypeDesc(getPremisETypeDesc())
                .uRL(getURL())
                .relocatedFlag(getRelocatedFlag())
                .numContacts(getNumContacts())
                .contact(getContact());
        return builder;
    }

    /**
     * Class to build instances of {@link ThomsonData}.
     */
    public static class Builder {
        private String createdDate;
        private String premiseTypeCode;
        private String premisETypeDesc;
        private String uRL;
        private String relocatedFlag;
        private Integer numContacts;
        private List<Contacts> contact;



        /**
         * Setter for createdDate.
         * @param  createdDate  String value for createdDate.
         * @return Builder
         */
        public Builder createdDate(String createdDate) {
            this.createdDate = createdDate;
            return this;
        }

        /**
         * Setter for premiseTypeCode.
         * @param  premiseTypeCode  String value for premiseTypeCode.
         * @return Builder
         */
        public Builder premiseTypeCode(String premiseTypeCode) {
            this.premiseTypeCode = premiseTypeCode;
            return this;
        }

        /**
         * Setter for premisETypeDesc.
         * @param  premisETypeDesc  String value for premisETypeDesc.
         * @return Builder
         */
        public Builder premisETypeDesc(String premisETypeDesc) {
            this.premisETypeDesc = premisETypeDesc;
            return this;
        }

        /**
         * Setter for uRL.
         * @param  uRL  String value for uRL.
         * @return Builder
         */
        public Builder uRL(String uRL) {
            this.uRL = uRL;
            return this;
        }

        /**
         * Setter for relocatedFlag.
         * @param  relocatedFlag  String value for relocatedFlag.
         * @return Builder
         */
        public Builder relocatedFlag(String relocatedFlag) {
            this.relocatedFlag = relocatedFlag;
            return this;
        }

        /**
         * Setter for numContacts.
         * @param  numContacts  Integer value for numContacts.
         * @return Builder
         */
        public Builder numContacts(Integer numContacts) {
            this.numContacts = numContacts;
            return this;
        }

        /**
         * Setter for contact.
         * @param  contact  List of Contacts value for contact.
         * @return Builder
         */
        public Builder contact(List<Contacts> contact) {
            this.contact = contact;
            return this;
        }

        /**
         * Builds a new {@link ThomsonData} object using the set fields.
         * @return {@link ThomsonData}
         */
        public ThomsonData build() {
            return new ThomsonData(createdDate, premiseTypeCode, premisETypeDesc, uRL,
                    relocatedFlag, numContacts, contact);
        }
    }
}
