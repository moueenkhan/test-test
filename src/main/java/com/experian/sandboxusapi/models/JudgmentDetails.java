/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for JudgmentDetails type.
 */
public class JudgmentDetails {
    private ArrayOfString judgmentAgainst;
    private List<TradeNameDetail> tradingNameDetails;
    private NonLtdBusinessLocation tradingLocation;

    /**
     * Default constructor.
     */
    public JudgmentDetails() {
    }

    /**
     * Initialization constructor.
     * @param  judgmentAgainst  ArrayOfString value for judgmentAgainst.
     * @param  tradingNameDetails  List of TradeNameDetail value for tradingNameDetails.
     * @param  tradingLocation  NonLtdBusinessLocation value for tradingLocation.
     */
    public JudgmentDetails(
            ArrayOfString judgmentAgainst,
            List<TradeNameDetail> tradingNameDetails,
            NonLtdBusinessLocation tradingLocation) {
        this.judgmentAgainst = judgmentAgainst;
        this.tradingNameDetails = tradingNameDetails;
        this.tradingLocation = tradingLocation;
    }

    /**
     * Getter for JudgmentAgainst.
     * @return Returns the ArrayOfString
     */
    @JsonGetter("JudgmentAgainst")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ArrayOfString getJudgmentAgainst() {
        return judgmentAgainst;
    }

    /**
     * Setter for JudgmentAgainst.
     * @param judgmentAgainst Value for ArrayOfString
     */
    @JsonSetter("JudgmentAgainst")
    public void setJudgmentAgainst(ArrayOfString judgmentAgainst) {
        this.judgmentAgainst = judgmentAgainst;
    }

    /**
     * Getter for TradingNameDetails.
     * @return Returns the List of TradeNameDetail
     */
    @JsonGetter("TradingNameDetails")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<TradeNameDetail> getTradingNameDetails() {
        return tradingNameDetails;
    }

    /**
     * Setter for TradingNameDetails.
     * @param tradingNameDetails Value for List of TradeNameDetail
     */
    @JsonSetter("TradingNameDetails")
    public void setTradingNameDetails(List<TradeNameDetail> tradingNameDetails) {
        this.tradingNameDetails = tradingNameDetails;
    }

    /**
     * Getter for TradingLocation.
     * @return Returns the NonLtdBusinessLocation
     */
    @JsonGetter("TradingLocation")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public NonLtdBusinessLocation getTradingLocation() {
        return tradingLocation;
    }

    /**
     * Setter for TradingLocation.
     * @param tradingLocation Value for NonLtdBusinessLocation
     */
    @JsonSetter("TradingLocation")
    public void setTradingLocation(NonLtdBusinessLocation tradingLocation) {
        this.tradingLocation = tradingLocation;
    }

    /**
     * Converts this JudgmentDetails into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "JudgmentDetails [" + "judgmentAgainst=" + judgmentAgainst + ", tradingNameDetails="
                + tradingNameDetails + ", tradingLocation=" + tradingLocation + "]";
    }

    /**
     * Builds a new {@link JudgmentDetails.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link JudgmentDetails.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .judgmentAgainst(getJudgmentAgainst())
                .tradingNameDetails(getTradingNameDetails())
                .tradingLocation(getTradingLocation());
        return builder;
    }

    /**
     * Class to build instances of {@link JudgmentDetails}.
     */
    public static class Builder {
        private ArrayOfString judgmentAgainst;
        private List<TradeNameDetail> tradingNameDetails;
        private NonLtdBusinessLocation tradingLocation;



        /**
         * Setter for judgmentAgainst.
         * @param  judgmentAgainst  ArrayOfString value for judgmentAgainst.
         * @return Builder
         */
        public Builder judgmentAgainst(ArrayOfString judgmentAgainst) {
            this.judgmentAgainst = judgmentAgainst;
            return this;
        }

        /**
         * Setter for tradingNameDetails.
         * @param  tradingNameDetails  List of TradeNameDetail value for tradingNameDetails.
         * @return Builder
         */
        public Builder tradingNameDetails(List<TradeNameDetail> tradingNameDetails) {
            this.tradingNameDetails = tradingNameDetails;
            return this;
        }

        /**
         * Setter for tradingLocation.
         * @param  tradingLocation  NonLtdBusinessLocation value for tradingLocation.
         * @return Builder
         */
        public Builder tradingLocation(NonLtdBusinessLocation tradingLocation) {
            this.tradingLocation = tradingLocation;
            return this;
        }

        /**
         * Builds a new {@link JudgmentDetails} object using the set fields.
         * @return {@link JudgmentDetails}
         */
        public JudgmentDetails build() {
            return new JudgmentDetails(judgmentAgainst, tradingNameDetails, tradingLocation);
        }
    }
}
