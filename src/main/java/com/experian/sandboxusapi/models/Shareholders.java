/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for Shareholders type.
 */
public class Shareholders {
    private List<HeaderInfo> headerInfo;
    private List<ShareCapital> shareCapital;
    private List<Shareholdings> shareholdings;
    private List<Shareholder> shareholder;

    /**
     * Default constructor.
     */
    public Shareholders() {
    }

    /**
     * Initialization constructor.
     * @param  headerInfo  List of HeaderInfo value for headerInfo.
     * @param  shareCapital  List of ShareCapital value for shareCapital.
     * @param  shareholdings  List of Shareholdings value for shareholdings.
     * @param  shareholder  List of Shareholder value for shareholder.
     */
    public Shareholders(
            List<HeaderInfo> headerInfo,
            List<ShareCapital> shareCapital,
            List<Shareholdings> shareholdings,
            List<Shareholder> shareholder) {
        this.headerInfo = headerInfo;
        this.shareCapital = shareCapital;
        this.shareholdings = shareholdings;
        this.shareholder = shareholder;
    }

    /**
     * Getter for HeaderInfo.
     * @return Returns the List of HeaderInfo
     */
    @JsonGetter("HeaderInfo")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<HeaderInfo> getHeaderInfo() {
        return headerInfo;
    }

    /**
     * Setter for HeaderInfo.
     * @param headerInfo Value for List of HeaderInfo
     */
    @JsonSetter("HeaderInfo")
    public void setHeaderInfo(List<HeaderInfo> headerInfo) {
        this.headerInfo = headerInfo;
    }

    /**
     * Getter for ShareCapital.
     * @return Returns the List of ShareCapital
     */
    @JsonGetter("ShareCapital")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<ShareCapital> getShareCapital() {
        return shareCapital;
    }

    /**
     * Setter for ShareCapital.
     * @param shareCapital Value for List of ShareCapital
     */
    @JsonSetter("ShareCapital")
    public void setShareCapital(List<ShareCapital> shareCapital) {
        this.shareCapital = shareCapital;
    }

    /**
     * Getter for Shareholdings.
     * @return Returns the List of Shareholdings
     */
    @JsonGetter("Shareholdings")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Shareholdings> getShareholdings() {
        return shareholdings;
    }

    /**
     * Setter for Shareholdings.
     * @param shareholdings Value for List of Shareholdings
     */
    @JsonSetter("Shareholdings")
    public void setShareholdings(List<Shareholdings> shareholdings) {
        this.shareholdings = shareholdings;
    }

    /**
     * Getter for Shareholder.
     * @return Returns the List of Shareholder
     */
    @JsonGetter("Shareholder")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Shareholder> getShareholder() {
        return shareholder;
    }

    /**
     * Setter for Shareholder.
     * @param shareholder Value for List of Shareholder
     */
    @JsonSetter("Shareholder")
    public void setShareholder(List<Shareholder> shareholder) {
        this.shareholder = shareholder;
    }

    /**
     * Converts this Shareholders into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Shareholders [" + "headerInfo=" + headerInfo + ", shareCapital=" + shareCapital
                + ", shareholdings=" + shareholdings + ", shareholder=" + shareholder + "]";
    }

    /**
     * Builds a new {@link Shareholders.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Shareholders.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .headerInfo(getHeaderInfo())
                .shareCapital(getShareCapital())
                .shareholdings(getShareholdings())
                .shareholder(getShareholder());
        return builder;
    }

    /**
     * Class to build instances of {@link Shareholders}.
     */
    public static class Builder {
        private List<HeaderInfo> headerInfo;
        private List<ShareCapital> shareCapital;
        private List<Shareholdings> shareholdings;
        private List<Shareholder> shareholder;



        /**
         * Setter for headerInfo.
         * @param  headerInfo  List of HeaderInfo value for headerInfo.
         * @return Builder
         */
        public Builder headerInfo(List<HeaderInfo> headerInfo) {
            this.headerInfo = headerInfo;
            return this;
        }

        /**
         * Setter for shareCapital.
         * @param  shareCapital  List of ShareCapital value for shareCapital.
         * @return Builder
         */
        public Builder shareCapital(List<ShareCapital> shareCapital) {
            this.shareCapital = shareCapital;
            return this;
        }

        /**
         * Setter for shareholdings.
         * @param  shareholdings  List of Shareholdings value for shareholdings.
         * @return Builder
         */
        public Builder shareholdings(List<Shareholdings> shareholdings) {
            this.shareholdings = shareholdings;
            return this;
        }

        /**
         * Setter for shareholder.
         * @param  shareholder  List of Shareholder value for shareholder.
         * @return Builder
         */
        public Builder shareholder(List<Shareholder> shareholder) {
            this.shareholder = shareholder;
            return this;
        }

        /**
         * Builds a new {@link Shareholders} object using the set fields.
         * @return {@link Shareholders}
         */
        public Shareholders build() {
            return new Shareholders(headerInfo, shareCapital, shareholdings, shareholder);
        }
    }
}
