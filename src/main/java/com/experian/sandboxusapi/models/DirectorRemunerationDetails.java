/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for DirectorRemunerationDetails type.
 */
public class DirectorRemunerationDetails {
    private Double directorRemuneration;
    private Double emolumentFees;
    private Double pensionCosts;
    private Double otherCosts;

    /**
     * Default constructor.
     */
    public DirectorRemunerationDetails() {
    }

    /**
     * Initialization constructor.
     * @param  directorRemuneration  Double value for directorRemuneration.
     * @param  emolumentFees  Double value for emolumentFees.
     * @param  pensionCosts  Double value for pensionCosts.
     * @param  otherCosts  Double value for otherCosts.
     */
    public DirectorRemunerationDetails(
            Double directorRemuneration,
            Double emolumentFees,
            Double pensionCosts,
            Double otherCosts) {
        this.directorRemuneration = directorRemuneration;
        this.emolumentFees = emolumentFees;
        this.pensionCosts = pensionCosts;
        this.otherCosts = otherCosts;
    }

    /**
     * Getter for DirectorRemuneration.
     * Value for Disclosure Items - Director Remuneration for these accounts
     * @return Returns the Double
     */
    @JsonGetter("DirectorRemuneration")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getDirectorRemuneration() {
        return directorRemuneration;
    }

    /**
     * Setter for DirectorRemuneration.
     * Value for Disclosure Items - Director Remuneration for these accounts
     * @param directorRemuneration Value for Double
     */
    @JsonSetter("DirectorRemuneration")
    public void setDirectorRemuneration(Double directorRemuneration) {
        this.directorRemuneration = directorRemuneration;
    }

    /**
     * Getter for EmolumentFees.
     * Value for Disclosure Items - Director Remuneration - Emolument Fees for these accounts
     * @return Returns the Double
     */
    @JsonGetter("EmolumentFees")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getEmolumentFees() {
        return emolumentFees;
    }

    /**
     * Setter for EmolumentFees.
     * Value for Disclosure Items - Director Remuneration - Emolument Fees for these accounts
     * @param emolumentFees Value for Double
     */
    @JsonSetter("EmolumentFees")
    public void setEmolumentFees(Double emolumentFees) {
        this.emolumentFees = emolumentFees;
    }

    /**
     * Getter for PensionCosts.
     * Value for Disclosure Items - Director Remuneration - Pension Costs for these accounts
     * @return Returns the Double
     */
    @JsonGetter("PensionCosts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPensionCosts() {
        return pensionCosts;
    }

    /**
     * Setter for PensionCosts.
     * Value for Disclosure Items - Director Remuneration - Pension Costs for these accounts
     * @param pensionCosts Value for Double
     */
    @JsonSetter("PensionCosts")
    public void setPensionCosts(Double pensionCosts) {
        this.pensionCosts = pensionCosts;
    }

    /**
     * Getter for OtherCosts.
     * Value for Disclosure Items - Director Remuneration - Other Costs for these accounts
     * @return Returns the Double
     */
    @JsonGetter("OtherCosts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getOtherCosts() {
        return otherCosts;
    }

    /**
     * Setter for OtherCosts.
     * Value for Disclosure Items - Director Remuneration - Other Costs for these accounts
     * @param otherCosts Value for Double
     */
    @JsonSetter("OtherCosts")
    public void setOtherCosts(Double otherCosts) {
        this.otherCosts = otherCosts;
    }

    /**
     * Converts this DirectorRemunerationDetails into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DirectorRemunerationDetails [" + "directorRemuneration=" + directorRemuneration
                + ", emolumentFees=" + emolumentFees + ", pensionCosts=" + pensionCosts
                + ", otherCosts=" + otherCosts + "]";
    }

    /**
     * Builds a new {@link DirectorRemunerationDetails.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DirectorRemunerationDetails.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .directorRemuneration(getDirectorRemuneration())
                .emolumentFees(getEmolumentFees())
                .pensionCosts(getPensionCosts())
                .otherCosts(getOtherCosts());
        return builder;
    }

    /**
     * Class to build instances of {@link DirectorRemunerationDetails}.
     */
    public static class Builder {
        private Double directorRemuneration;
        private Double emolumentFees;
        private Double pensionCosts;
        private Double otherCosts;



        /**
         * Setter for directorRemuneration.
         * @param  directorRemuneration  Double value for directorRemuneration.
         * @return Builder
         */
        public Builder directorRemuneration(Double directorRemuneration) {
            this.directorRemuneration = directorRemuneration;
            return this;
        }

        /**
         * Setter for emolumentFees.
         * @param  emolumentFees  Double value for emolumentFees.
         * @return Builder
         */
        public Builder emolumentFees(Double emolumentFees) {
            this.emolumentFees = emolumentFees;
            return this;
        }

        /**
         * Setter for pensionCosts.
         * @param  pensionCosts  Double value for pensionCosts.
         * @return Builder
         */
        public Builder pensionCosts(Double pensionCosts) {
            this.pensionCosts = pensionCosts;
            return this;
        }

        /**
         * Setter for otherCosts.
         * @param  otherCosts  Double value for otherCosts.
         * @return Builder
         */
        public Builder otherCosts(Double otherCosts) {
            this.otherCosts = otherCosts;
            return this;
        }

        /**
         * Builds a new {@link DirectorRemunerationDetails} object using the set fields.
         * @return {@link DirectorRemunerationDetails}
         */
        public DirectorRemunerationDetails build() {
            return new DirectorRemunerationDetails(directorRemuneration, emolumentFees,
                    pensionCosts, otherCosts);
        }
    }
}
