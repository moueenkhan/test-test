/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for ParentDetail type.
 */
public class ParentDetail {
    private String commercialName;
    private LtdBusinessLocation businessLocation;
    private Integer commDelphiScore;
    private String commDelphiBand;
    private String stabilityOdds;
    private Double creditRating;
    private Double creditLimit;
    private String dateOfAccounts;
    private String currency;
    private String currencyMultiplier;
    private String consAccounts;
    private String latestAccountsType;
    private Integer accountingPeriod;
    private Double netWorth;
    private Double grossProfit;
    private Double turnoverSales;
    private Double turnoverHomeNation;
    private Double turnoverExport;
    private Double groupLiabilities;
    private Double groupLoans;
    private Double liquidityRatio;
    private Integer currentDBT;
    private String experienceMonth;
    private String commDelphiBandText;

    /**
     * Default constructor.
     */
    public ParentDetail() {
    }

    /**
     * Initialization constructor.
     * @param  commercialName  String value for commercialName.
     * @param  businessLocation  LtdBusinessLocation value for businessLocation.
     * @param  commDelphiScore  Integer value for commDelphiScore.
     * @param  commDelphiBand  String value for commDelphiBand.
     * @param  stabilityOdds  String value for stabilityOdds.
     * @param  creditRating  Double value for creditRating.
     * @param  creditLimit  Double value for creditLimit.
     * @param  dateOfAccounts  String value for dateOfAccounts.
     * @param  currency  String value for currency.
     * @param  currencyMultiplier  String value for currencyMultiplier.
     * @param  consAccounts  String value for consAccounts.
     * @param  latestAccountsType  String value for latestAccountsType.
     * @param  accountingPeriod  Integer value for accountingPeriod.
     * @param  netWorth  Double value for netWorth.
     * @param  grossProfit  Double value for grossProfit.
     * @param  turnoverSales  Double value for turnoverSales.
     * @param  turnoverHomeNation  Double value for turnoverHomeNation.
     * @param  turnoverExport  Double value for turnoverExport.
     * @param  groupLiabilities  Double value for groupLiabilities.
     * @param  groupLoans  Double value for groupLoans.
     * @param  liquidityRatio  Double value for liquidityRatio.
     * @param  currentDBT  Integer value for currentDBT.
     * @param  experienceMonth  String value for experienceMonth.
     * @param  commDelphiBandText  String value for commDelphiBandText.
     */
    public ParentDetail(
            String commercialName,
            LtdBusinessLocation businessLocation,
            Integer commDelphiScore,
            String commDelphiBand,
            String stabilityOdds,
            Double creditRating,
            Double creditLimit,
            String dateOfAccounts,
            String currency,
            String currencyMultiplier,
            String consAccounts,
            String latestAccountsType,
            Integer accountingPeriod,
            Double netWorth,
            Double grossProfit,
            Double turnoverSales,
            Double turnoverHomeNation,
            Double turnoverExport,
            Double groupLiabilities,
            Double groupLoans,
            Double liquidityRatio,
            Integer currentDBT,
            String experienceMonth,
            String commDelphiBandText) {
        this.commercialName = commercialName;
        this.businessLocation = businessLocation;
        this.commDelphiScore = commDelphiScore;
        this.commDelphiBand = commDelphiBand;
        this.stabilityOdds = stabilityOdds;
        this.creditRating = creditRating;
        this.creditLimit = creditLimit;
        this.dateOfAccounts = dateOfAccounts;
        this.currency = currency;
        this.currencyMultiplier = currencyMultiplier;
        this.consAccounts = consAccounts;
        this.latestAccountsType = latestAccountsType;
        this.accountingPeriod = accountingPeriod;
        this.netWorth = netWorth;
        this.grossProfit = grossProfit;
        this.turnoverSales = turnoverSales;
        this.turnoverHomeNation = turnoverHomeNation;
        this.turnoverExport = turnoverExport;
        this.groupLiabilities = groupLiabilities;
        this.groupLoans = groupLoans;
        this.liquidityRatio = liquidityRatio;
        this.currentDBT = currentDBT;
        this.experienceMonth = experienceMonth;
        this.commDelphiBandText = commDelphiBandText;
    }

    /**
     * Getter for CommercialName.
     * Parent/Ultimate Parent company name
     * @return Returns the String
     */
    @JsonGetter("CommercialName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCommercialName() {
        return commercialName;
    }

    /**
     * Setter for CommercialName.
     * Parent/Ultimate Parent company name
     * @param commercialName Value for String
     */
    @JsonSetter("CommercialName")
    public void setCommercialName(String commercialName) {
        this.commercialName = commercialName;
    }

    /**
     * Getter for BusinessLocation.
     * @return Returns the LtdBusinessLocation
     */
    @JsonGetter("BusinessLocation")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public LtdBusinessLocation getBusinessLocation() {
        return businessLocation;
    }

    /**
     * Setter for BusinessLocation.
     * @param businessLocation Value for LtdBusinessLocation
     */
    @JsonSetter("BusinessLocation")
    public void setBusinessLocation(LtdBusinessLocation businessLocation) {
        this.businessLocation = businessLocation;
    }

    /**
     * Getter for CommDelphiScore.
     * Current Commercial Delphi score for the Parent/Ultimate Parent company
     * @return Returns the Integer
     */
    @JsonGetter("CommDelphiScore")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getCommDelphiScore() {
        return commDelphiScore;
    }

    /**
     * Setter for CommDelphiScore.
     * Current Commercial Delphi score for the Parent/Ultimate Parent company
     * @param commDelphiScore Value for Integer
     */
    @JsonSetter("CommDelphiScore")
    public void setCommDelphiScore(Integer commDelphiScore) {
        this.commDelphiScore = commDelphiScore;
    }

    /**
     * Getter for CommDelphiBand.
     * Current Commercial Delphi band code for the Parent/Ultimate Parent company
     * @return Returns the String
     */
    @JsonGetter("CommDelphiBand")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCommDelphiBand() {
        return commDelphiBand;
    }

    /**
     * Setter for CommDelphiBand.
     * Current Commercial Delphi band code for the Parent/Ultimate Parent company
     * @param commDelphiBand Value for String
     */
    @JsonSetter("CommDelphiBand")
    public void setCommDelphiBand(String commDelphiBand) {
        this.commDelphiBand = commDelphiBand;
    }

    /**
     * Getter for StabilityOdds.
     * Current Stability odds for the Parent/Ultimate Parent company
     * @return Returns the String
     */
    @JsonGetter("StabilityOdds")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getStabilityOdds() {
        return stabilityOdds;
    }

    /**
     * Setter for StabilityOdds.
     * Current Stability odds for the Parent/Ultimate Parent company
     * @param stabilityOdds Value for String
     */
    @JsonSetter("StabilityOdds")
    public void setStabilityOdds(String stabilityOdds) {
        this.stabilityOdds = stabilityOdds;
    }

    /**
     * Getter for CreditRating.
     * Commercial Delphi Credit Rating for the Parent/Ultimate Parent company
     * @return Returns the Double
     */
    @JsonGetter("CreditRating")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getCreditRating() {
        return creditRating;
    }

    /**
     * Setter for CreditRating.
     * Commercial Delphi Credit Rating for the Parent/Ultimate Parent company
     * @param creditRating Value for Double
     */
    @JsonSetter("CreditRating")
    public void setCreditRating(Double creditRating) {
        this.creditRating = creditRating;
    }

    /**
     * Getter for CreditLimit.
     * Commercial Delphi Credit Limit for the Parent/Ultimate Parent company
     * @return Returns the Double
     */
    @JsonGetter("CreditLimit")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getCreditLimit() {
        return creditLimit;
    }

    /**
     * Setter for CreditLimit.
     * Commercial Delphi Credit Limit for the Parent/Ultimate Parent company
     * @param creditLimit Value for Double
     */
    @JsonSetter("CreditLimit")
    public void setCreditLimit(Double creditLimit) {
        this.creditLimit = creditLimit;
    }

    /**
     * Getter for DateOfAccounts.
     * Filing date for the Parent company latest accounts (yyyy-mm-dd)
     * @return Returns the String
     */
    @JsonGetter("DateOfAccounts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDateOfAccounts() {
        return dateOfAccounts;
    }

    /**
     * Setter for DateOfAccounts.
     * Filing date for the Parent company latest accounts (yyyy-mm-dd)
     * @param dateOfAccounts Value for String
     */
    @JsonSetter("DateOfAccounts")
    public void setDateOfAccounts(String dateOfAccounts) {
        this.dateOfAccounts = dateOfAccounts;
    }

    /**
     * Getter for Currency.
     * Currency under which the accounts for the Parent/Ultimate Parent company have been reported -
     * ISO currency code
     * @return Returns the String
     */
    @JsonGetter("Currency")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCurrency() {
        return currency;
    }

    /**
     * Setter for Currency.
     * Currency under which the accounts for the Parent/Ultimate Parent company have been reported -
     * ISO currency code
     * @param currency Value for String
     */
    @JsonSetter("Currency")
    public void setCurrency(String currency) {
        this.currency = currency;
    }

    /**
     * Getter for CurrencyMultiplier.
     * Currency multiplier applicable to the accounts for the Parent/Ultimate Parent company - N =
     * Financial fields in units; T = Financial fields in thousands
     * @return Returns the String
     */
    @JsonGetter("CurrencyMultiplier")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCurrencyMultiplier() {
        return currencyMultiplier;
    }

    /**
     * Setter for CurrencyMultiplier.
     * Currency multiplier applicable to the accounts for the Parent/Ultimate Parent company - N =
     * Financial fields in units; T = Financial fields in thousands
     * @param currencyMultiplier Value for String
     */
    @JsonSetter("CurrencyMultiplier")
    public void setCurrencyMultiplier(String currencyMultiplier) {
        this.currencyMultiplier = currencyMultiplier;
    }

    /**
     * Getter for ConsAccounts.
     * Indicator showing whether the accounts for the Parent/Ultimate Parent company are
     * consolidated - Y = Consolidated; N = Not consolidated
     * @return Returns the String
     */
    @JsonGetter("ConsAccounts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getConsAccounts() {
        return consAccounts;
    }

    /**
     * Setter for ConsAccounts.
     * Indicator showing whether the accounts for the Parent/Ultimate Parent company are
     * consolidated - Y = Consolidated; N = Not consolidated
     * @param consAccounts Value for String
     */
    @JsonSetter("ConsAccounts")
    public void setConsAccounts(String consAccounts) {
        this.consAccounts = consAccounts;
    }

    /**
     * Getter for LatestAccountsType.
     * Latest Accounts Type Indicator for the Parent/Ultimate Parent company - 0 = Type not
     * available; 1 = Full Accounts; 2 = Small Company; 3 = Medium Company; 4 = Group; 5 = Dormant;
     * 6 = Interim; 7 = Initial; 8 = Total exemption Full; 9 = Total exemption Small; A = Partial
     * Exemption
     * @return Returns the String
     */
    @JsonGetter("LatestAccountsType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLatestAccountsType() {
        return latestAccountsType;
    }

    /**
     * Setter for LatestAccountsType.
     * Latest Accounts Type Indicator for the Parent/Ultimate Parent company - 0 = Type not
     * available; 1 = Full Accounts; 2 = Small Company; 3 = Medium Company; 4 = Group; 5 = Dormant;
     * 6 = Interim; 7 = Initial; 8 = Total exemption Full; 9 = Total exemption Small; A = Partial
     * Exemption
     * @param latestAccountsType Value for String
     */
    @JsonSetter("LatestAccountsType")
    public void setLatestAccountsType(String latestAccountsType) {
        this.latestAccountsType = latestAccountsType;
    }

    /**
     * Getter for AccountingPeriod.
     * Number of weeks covered by the accounts for the Parent/Ultimate Parent company
     * @return Returns the Integer
     */
    @JsonGetter("AccountingPeriod")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getAccountingPeriod() {
        return accountingPeriod;
    }

    /**
     * Setter for AccountingPeriod.
     * Number of weeks covered by the accounts for the Parent/Ultimate Parent company
     * @param accountingPeriod Value for Integer
     */
    @JsonSetter("AccountingPeriod")
    public void setAccountingPeriod(Integer accountingPeriod) {
        this.accountingPeriod = accountingPeriod;
    }

    /**
     * Getter for NetWorth.
     * Net Worth for the Parent/Ultimate Parent company accounts
     * @return Returns the Double
     */
    @JsonGetter("NetWorth")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getNetWorth() {
        return netWorth;
    }

    /**
     * Setter for NetWorth.
     * Net Worth for the Parent/Ultimate Parent company accounts
     * @param netWorth Value for Double
     */
    @JsonSetter("NetWorth")
    public void setNetWorth(Double netWorth) {
        this.netWorth = netWorth;
    }

    /**
     * Getter for GrossProfit.
     * Gross Profit for the Parent/Ultimate Parent company accounts
     * @return Returns the Double
     */
    @JsonGetter("GrossProfit")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getGrossProfit() {
        return grossProfit;
    }

    /**
     * Setter for GrossProfit.
     * Gross Profit for the Parent/Ultimate Parent company accounts
     * @param grossProfit Value for Double
     */
    @JsonSetter("GrossProfit")
    public void setGrossProfit(Double grossProfit) {
        this.grossProfit = grossProfit;
    }

    /**
     * Getter for TurnoverSales.
     * Turnover Sales for the Parent/Ultimate Parent company accounts
     * @return Returns the Double
     */
    @JsonGetter("TurnoverSales")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTurnoverSales() {
        return turnoverSales;
    }

    /**
     * Setter for TurnoverSales.
     * Turnover Sales for the Parent/Ultimate Parent company accounts
     * @param turnoverSales Value for Double
     */
    @JsonSetter("TurnoverSales")
    public void setTurnoverSales(Double turnoverSales) {
        this.turnoverSales = turnoverSales;
    }

    /**
     * Getter for TurnoverHomeNation.
     * Turnover Sales - Home Nation for the Parent/Ultimate Parent company accounts
     * @return Returns the Double
     */
    @JsonGetter("TurnoverHomeNation")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTurnoverHomeNation() {
        return turnoverHomeNation;
    }

    /**
     * Setter for TurnoverHomeNation.
     * Turnover Sales - Home Nation for the Parent/Ultimate Parent company accounts
     * @param turnoverHomeNation Value for Double
     */
    @JsonSetter("TurnoverHomeNation")
    public void setTurnoverHomeNation(Double turnoverHomeNation) {
        this.turnoverHomeNation = turnoverHomeNation;
    }

    /**
     * Getter for TurnoverExport.
     * Turnover Sales - Export for the Parent/Ultimate Parent company accounts
     * @return Returns the Double
     */
    @JsonGetter("TurnoverExport")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTurnoverExport() {
        return turnoverExport;
    }

    /**
     * Setter for TurnoverExport.
     * Turnover Sales - Export for the Parent/Ultimate Parent company accounts
     * @param turnoverExport Value for Double
     */
    @JsonSetter("TurnoverExport")
    public void setTurnoverExport(Double turnoverExport) {
        this.turnoverExport = turnoverExport;
    }

    /**
     * Getter for GroupLiabilities.
     * Group Liabilities for the Parent/Ultimate Parent company accounts
     * @return Returns the Double
     */
    @JsonGetter("GroupLiabilities")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getGroupLiabilities() {
        return groupLiabilities;
    }

    /**
     * Setter for GroupLiabilities.
     * Group Liabilities for the Parent/Ultimate Parent company accounts
     * @param groupLiabilities Value for Double
     */
    @JsonSetter("GroupLiabilities")
    public void setGroupLiabilities(Double groupLiabilities) {
        this.groupLiabilities = groupLiabilities;
    }

    /**
     * Getter for GroupLoans.
     * Group Loans for the Parent/Ultimate Parent company accounts
     * @return Returns the Double
     */
    @JsonGetter("GroupLoans")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getGroupLoans() {
        return groupLoans;
    }

    /**
     * Setter for GroupLoans.
     * Group Loans for the Parent/Ultimate Parent company accounts
     * @param groupLoans Value for Double
     */
    @JsonSetter("GroupLoans")
    public void setGroupLoans(Double groupLoans) {
        this.groupLoans = groupLoans;
    }

    /**
     * Getter for LiquidityRatio.
     * Liquidity Ratio for the Parent/Ultimate Parent company (to 1dp)
     * @return Returns the Double
     */
    @JsonGetter("LiquidityRatio")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getLiquidityRatio() {
        return liquidityRatio;
    }

    /**
     * Setter for LiquidityRatio.
     * Liquidity Ratio for the Parent/Ultimate Parent company (to 1dp)
     * @param liquidityRatio Value for Double
     */
    @JsonSetter("LiquidityRatio")
    public void setLiquidityRatio(Double liquidityRatio) {
        this.liquidityRatio = liquidityRatio;
    }

    /**
     * Getter for CurrentDBT.
     * Current number of days beyond terms for payment or the Parent/Ultimate Parent company
     * @return Returns the Integer
     */
    @JsonGetter("CurrentDBT")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getCurrentDBT() {
        return currentDBT;
    }

    /**
     * Setter for CurrentDBT.
     * Current number of days beyond terms for payment or the Parent/Ultimate Parent company
     * @param currentDBT Value for Integer
     */
    @JsonSetter("CurrentDBT")
    public void setCurrentDBT(Integer currentDBT) {
        this.currentDBT = currentDBT;
    }

    /**
     * Getter for ExperienceMonth.
     * Days beyond terms for payment experience for the Parent company (yyyy-mm)
     * @return Returns the String
     */
    @JsonGetter("ExperienceMonth")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getExperienceMonth() {
        return experienceMonth;
    }

    /**
     * Setter for ExperienceMonth.
     * Days beyond terms for payment experience for the Parent company (yyyy-mm)
     * @param experienceMonth Value for String
     */
    @JsonSetter("ExperienceMonth")
    public void setExperienceMonth(String experienceMonth) {
        this.experienceMonth = experienceMonth;
    }

    /**
     * Getter for CommDelphiBandText.
     * Current Commercial Delphi band text for the Parent/Ultimate Parent company
     * @return Returns the String
     */
    @JsonGetter("CommDelphiBandText")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCommDelphiBandText() {
        return commDelphiBandText;
    }

    /**
     * Setter for CommDelphiBandText.
     * Current Commercial Delphi band text for the Parent/Ultimate Parent company
     * @param commDelphiBandText Value for String
     */
    @JsonSetter("CommDelphiBandText")
    public void setCommDelphiBandText(String commDelphiBandText) {
        this.commDelphiBandText = commDelphiBandText;
    }

    /**
     * Converts this ParentDetail into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ParentDetail [" + "commercialName=" + commercialName + ", businessLocation="
                + businessLocation + ", commDelphiScore=" + commDelphiScore + ", commDelphiBand="
                + commDelphiBand + ", stabilityOdds=" + stabilityOdds + ", creditRating="
                + creditRating + ", creditLimit=" + creditLimit + ", dateOfAccounts="
                + dateOfAccounts + ", currency=" + currency + ", currencyMultiplier="
                + currencyMultiplier + ", consAccounts=" + consAccounts + ", latestAccountsType="
                + latestAccountsType + ", accountingPeriod=" + accountingPeriod + ", netWorth="
                + netWorth + ", grossProfit=" + grossProfit + ", turnoverSales=" + turnoverSales
                + ", turnoverHomeNation=" + turnoverHomeNation + ", turnoverExport="
                + turnoverExport + ", groupLiabilities=" + groupLiabilities + ", groupLoans="
                + groupLoans + ", liquidityRatio=" + liquidityRatio + ", currentDBT=" + currentDBT
                + ", experienceMonth=" + experienceMonth + ", commDelphiBandText="
                + commDelphiBandText + "]";
    }

    /**
     * Builds a new {@link ParentDetail.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ParentDetail.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .commercialName(getCommercialName())
                .businessLocation(getBusinessLocation())
                .commDelphiScore(getCommDelphiScore())
                .commDelphiBand(getCommDelphiBand())
                .stabilityOdds(getStabilityOdds())
                .creditRating(getCreditRating())
                .creditLimit(getCreditLimit())
                .dateOfAccounts(getDateOfAccounts())
                .currency(getCurrency())
                .currencyMultiplier(getCurrencyMultiplier())
                .consAccounts(getConsAccounts())
                .latestAccountsType(getLatestAccountsType())
                .accountingPeriod(getAccountingPeriod())
                .netWorth(getNetWorth())
                .grossProfit(getGrossProfit())
                .turnoverSales(getTurnoverSales())
                .turnoverHomeNation(getTurnoverHomeNation())
                .turnoverExport(getTurnoverExport())
                .groupLiabilities(getGroupLiabilities())
                .groupLoans(getGroupLoans())
                .liquidityRatio(getLiquidityRatio())
                .currentDBT(getCurrentDBT())
                .experienceMonth(getExperienceMonth())
                .commDelphiBandText(getCommDelphiBandText());
        return builder;
    }

    /**
     * Class to build instances of {@link ParentDetail}.
     */
    public static class Builder {
        private String commercialName;
        private LtdBusinessLocation businessLocation;
        private Integer commDelphiScore;
        private String commDelphiBand;
        private String stabilityOdds;
        private Double creditRating;
        private Double creditLimit;
        private String dateOfAccounts;
        private String currency;
        private String currencyMultiplier;
        private String consAccounts;
        private String latestAccountsType;
        private Integer accountingPeriod;
        private Double netWorth;
        private Double grossProfit;
        private Double turnoverSales;
        private Double turnoverHomeNation;
        private Double turnoverExport;
        private Double groupLiabilities;
        private Double groupLoans;
        private Double liquidityRatio;
        private Integer currentDBT;
        private String experienceMonth;
        private String commDelphiBandText;



        /**
         * Setter for commercialName.
         * @param  commercialName  String value for commercialName.
         * @return Builder
         */
        public Builder commercialName(String commercialName) {
            this.commercialName = commercialName;
            return this;
        }

        /**
         * Setter for businessLocation.
         * @param  businessLocation  LtdBusinessLocation value for businessLocation.
         * @return Builder
         */
        public Builder businessLocation(LtdBusinessLocation businessLocation) {
            this.businessLocation = businessLocation;
            return this;
        }

        /**
         * Setter for commDelphiScore.
         * @param  commDelphiScore  Integer value for commDelphiScore.
         * @return Builder
         */
        public Builder commDelphiScore(Integer commDelphiScore) {
            this.commDelphiScore = commDelphiScore;
            return this;
        }

        /**
         * Setter for commDelphiBand.
         * @param  commDelphiBand  String value for commDelphiBand.
         * @return Builder
         */
        public Builder commDelphiBand(String commDelphiBand) {
            this.commDelphiBand = commDelphiBand;
            return this;
        }

        /**
         * Setter for stabilityOdds.
         * @param  stabilityOdds  String value for stabilityOdds.
         * @return Builder
         */
        public Builder stabilityOdds(String stabilityOdds) {
            this.stabilityOdds = stabilityOdds;
            return this;
        }

        /**
         * Setter for creditRating.
         * @param  creditRating  Double value for creditRating.
         * @return Builder
         */
        public Builder creditRating(Double creditRating) {
            this.creditRating = creditRating;
            return this;
        }

        /**
         * Setter for creditLimit.
         * @param  creditLimit  Double value for creditLimit.
         * @return Builder
         */
        public Builder creditLimit(Double creditLimit) {
            this.creditLimit = creditLimit;
            return this;
        }

        /**
         * Setter for dateOfAccounts.
         * @param  dateOfAccounts  String value for dateOfAccounts.
         * @return Builder
         */
        public Builder dateOfAccounts(String dateOfAccounts) {
            this.dateOfAccounts = dateOfAccounts;
            return this;
        }

        /**
         * Setter for currency.
         * @param  currency  String value for currency.
         * @return Builder
         */
        public Builder currency(String currency) {
            this.currency = currency;
            return this;
        }

        /**
         * Setter for currencyMultiplier.
         * @param  currencyMultiplier  String value for currencyMultiplier.
         * @return Builder
         */
        public Builder currencyMultiplier(String currencyMultiplier) {
            this.currencyMultiplier = currencyMultiplier;
            return this;
        }

        /**
         * Setter for consAccounts.
         * @param  consAccounts  String value for consAccounts.
         * @return Builder
         */
        public Builder consAccounts(String consAccounts) {
            this.consAccounts = consAccounts;
            return this;
        }

        /**
         * Setter for latestAccountsType.
         * @param  latestAccountsType  String value for latestAccountsType.
         * @return Builder
         */
        public Builder latestAccountsType(String latestAccountsType) {
            this.latestAccountsType = latestAccountsType;
            return this;
        }

        /**
         * Setter for accountingPeriod.
         * @param  accountingPeriod  Integer value for accountingPeriod.
         * @return Builder
         */
        public Builder accountingPeriod(Integer accountingPeriod) {
            this.accountingPeriod = accountingPeriod;
            return this;
        }

        /**
         * Setter for netWorth.
         * @param  netWorth  Double value for netWorth.
         * @return Builder
         */
        public Builder netWorth(Double netWorth) {
            this.netWorth = netWorth;
            return this;
        }

        /**
         * Setter for grossProfit.
         * @param  grossProfit  Double value for grossProfit.
         * @return Builder
         */
        public Builder grossProfit(Double grossProfit) {
            this.grossProfit = grossProfit;
            return this;
        }

        /**
         * Setter for turnoverSales.
         * @param  turnoverSales  Double value for turnoverSales.
         * @return Builder
         */
        public Builder turnoverSales(Double turnoverSales) {
            this.turnoverSales = turnoverSales;
            return this;
        }

        /**
         * Setter for turnoverHomeNation.
         * @param  turnoverHomeNation  Double value for turnoverHomeNation.
         * @return Builder
         */
        public Builder turnoverHomeNation(Double turnoverHomeNation) {
            this.turnoverHomeNation = turnoverHomeNation;
            return this;
        }

        /**
         * Setter for turnoverExport.
         * @param  turnoverExport  Double value for turnoverExport.
         * @return Builder
         */
        public Builder turnoverExport(Double turnoverExport) {
            this.turnoverExport = turnoverExport;
            return this;
        }

        /**
         * Setter for groupLiabilities.
         * @param  groupLiabilities  Double value for groupLiabilities.
         * @return Builder
         */
        public Builder groupLiabilities(Double groupLiabilities) {
            this.groupLiabilities = groupLiabilities;
            return this;
        }

        /**
         * Setter for groupLoans.
         * @param  groupLoans  Double value for groupLoans.
         * @return Builder
         */
        public Builder groupLoans(Double groupLoans) {
            this.groupLoans = groupLoans;
            return this;
        }

        /**
         * Setter for liquidityRatio.
         * @param  liquidityRatio  Double value for liquidityRatio.
         * @return Builder
         */
        public Builder liquidityRatio(Double liquidityRatio) {
            this.liquidityRatio = liquidityRatio;
            return this;
        }

        /**
         * Setter for currentDBT.
         * @param  currentDBT  Integer value for currentDBT.
         * @return Builder
         */
        public Builder currentDBT(Integer currentDBT) {
            this.currentDBT = currentDBT;
            return this;
        }

        /**
         * Setter for experienceMonth.
         * @param  experienceMonth  String value for experienceMonth.
         * @return Builder
         */
        public Builder experienceMonth(String experienceMonth) {
            this.experienceMonth = experienceMonth;
            return this;
        }

        /**
         * Setter for commDelphiBandText.
         * @param  commDelphiBandText  String value for commDelphiBandText.
         * @return Builder
         */
        public Builder commDelphiBandText(String commDelphiBandText) {
            this.commDelphiBandText = commDelphiBandText;
            return this;
        }

        /**
         * Builds a new {@link ParentDetail} object using the set fields.
         * @return {@link ParentDetail}
         */
        public ParentDetail build() {
            return new ParentDetail(commercialName, businessLocation, commDelphiScore,
                    commDelphiBand, stabilityOdds, creditRating, creditLimit, dateOfAccounts,
                    currency, currencyMultiplier, consAccounts, latestAccountsType,
                    accountingPeriod, netWorth, grossProfit, turnoverSales, turnoverHomeNation,
                    turnoverExport, groupLiabilities, groupLoans, liquidityRatio, currentDBT,
                    experienceMonth, commDelphiBandText);
        }
    }
}
