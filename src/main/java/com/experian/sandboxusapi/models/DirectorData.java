/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for DirectorData type.
 */
public class DirectorData {
    private String directorNumber;
    private String directorSecretaryFlag;
    private String foreignAddressFlag;
    private String directorCompanyFlag;
    private DirDetail directorDetails;
    private List<DirPreviousAddr> previousAddresses;
    private List<IndvDirPrevName> previousNames;
    private Directorships directorships;
    private Secretaryships secretaryships;
    private String disqualStartDate;
    private String disqualEndDate;
    private List<IndvDirConvData> convictions;
    private List<SummaryDirectorCIFAS> summaryDirectorCIFAS;
    private List<DetailDirectorCIFAS> detailDirectorCIFAS;
    private NoticeOfCorrection noticeOfCorrection;
    private Error error;

    /**
     * Default constructor.
     */
    public DirectorData() {
    }

    /**
     * Initialization constructor.
     * @param  directorNumber  String value for directorNumber.
     * @param  directorSecretaryFlag  String value for directorSecretaryFlag.
     * @param  foreignAddressFlag  String value for foreignAddressFlag.
     * @param  directorCompanyFlag  String value for directorCompanyFlag.
     * @param  directorDetails  DirDetail value for directorDetails.
     * @param  previousAddresses  List of DirPreviousAddr value for previousAddresses.
     * @param  previousNames  List of IndvDirPrevName value for previousNames.
     * @param  directorships  Directorships value for directorships.
     * @param  secretaryships  Secretaryships value for secretaryships.
     * @param  disqualStartDate  String value for disqualStartDate.
     * @param  disqualEndDate  String value for disqualEndDate.
     * @param  convictions  List of IndvDirConvData value for convictions.
     * @param  summaryDirectorCIFAS  List of SummaryDirectorCIFAS value for summaryDirectorCIFAS.
     * @param  detailDirectorCIFAS  List of DetailDirectorCIFAS value for detailDirectorCIFAS.
     * @param  noticeOfCorrection  NoticeOfCorrection value for noticeOfCorrection.
     * @param  error  Error value for error.
     */
    public DirectorData(
            String directorNumber,
            String directorSecretaryFlag,
            String foreignAddressFlag,
            String directorCompanyFlag,
            DirDetail directorDetails,
            List<DirPreviousAddr> previousAddresses,
            List<IndvDirPrevName> previousNames,
            Directorships directorships,
            Secretaryships secretaryships,
            String disqualStartDate,
            String disqualEndDate,
            List<IndvDirConvData> convictions,
            List<SummaryDirectorCIFAS> summaryDirectorCIFAS,
            List<DetailDirectorCIFAS> detailDirectorCIFAS,
            NoticeOfCorrection noticeOfCorrection,
            Error error) {
        this.directorNumber = directorNumber;
        this.directorSecretaryFlag = directorSecretaryFlag;
        this.foreignAddressFlag = foreignAddressFlag;
        this.directorCompanyFlag = directorCompanyFlag;
        this.directorDetails = directorDetails;
        this.previousAddresses = previousAddresses;
        this.previousNames = previousNames;
        this.directorships = directorships;
        this.secretaryships = secretaryships;
        this.disqualStartDate = disqualStartDate;
        this.disqualEndDate = disqualEndDate;
        this.convictions = convictions;
        this.summaryDirectorCIFAS = summaryDirectorCIFAS;
        this.detailDirectorCIFAS = detailDirectorCIFAS;
        this.noticeOfCorrection = noticeOfCorrection;
        this.error = error;
    }

    /**
     * Getter for DirectorNumber.
     * Experian Director reference number
     * @return Returns the String
     */
    @JsonGetter("DirectorNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDirectorNumber() {
        return directorNumber;
    }

    /**
     * Setter for DirectorNumber.
     * Experian Director reference number
     * @param directorNumber Value for String
     */
    @JsonSetter("DirectorNumber")
    public void setDirectorNumber(String directorNumber) {
        this.directorNumber = directorNumber;
    }

    /**
     * Getter for DirectorSecretaryFlag.
     * Indicator showing whether the person is a Director, Secretary or both - D=Director only,
     * S=Secretary only, B=Both
     * @return Returns the String
     */
    @JsonGetter("DirectorSecretaryFlag")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDirectorSecretaryFlag() {
        return directorSecretaryFlag;
    }

    /**
     * Setter for DirectorSecretaryFlag.
     * Indicator showing whether the person is a Director, Secretary or both - D=Director only,
     * S=Secretary only, B=Both
     * @param directorSecretaryFlag Value for String
     */
    @JsonSetter("DirectorSecretaryFlag")
    public void setDirectorSecretaryFlag(String directorSecretaryFlag) {
        this.directorSecretaryFlag = directorSecretaryFlag;
    }

    /**
     * Getter for ForeignAddressFlag.
     * Indicator showing whether the person's address is foreign - N=UK address, Y=Foreign Address,
     * M=Unknown address
     * @return Returns the String
     */
    @JsonGetter("ForeignAddressFlag")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getForeignAddressFlag() {
        return foreignAddressFlag;
    }

    /**
     * Setter for ForeignAddressFlag.
     * Indicator showing whether the person's address is foreign - N=UK address, Y=Foreign Address,
     * M=Unknown address
     * @param foreignAddressFlag Value for String
     */
    @JsonSetter("ForeignAddressFlag")
    public void setForeignAddressFlag(String foreignAddressFlag) {
        this.foreignAddressFlag = foreignAddressFlag;
    }

    /**
     * Getter for DirectorCompanyFlag.
     * Indicator showing whether the director / secretary is a company - Y=director is a company,
     * N=director is not a company
     * @return Returns the String
     */
    @JsonGetter("DirectorCompanyFlag")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDirectorCompanyFlag() {
        return directorCompanyFlag;
    }

    /**
     * Setter for DirectorCompanyFlag.
     * Indicator showing whether the director / secretary is a company - Y=director is a company,
     * N=director is not a company
     * @param directorCompanyFlag Value for String
     */
    @JsonSetter("DirectorCompanyFlag")
    public void setDirectorCompanyFlag(String directorCompanyFlag) {
        this.directorCompanyFlag = directorCompanyFlag;
    }

    /**
     * Getter for DirectorDetails.
     * @return Returns the DirDetail
     */
    @JsonGetter("DirectorDetails")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public DirDetail getDirectorDetails() {
        return directorDetails;
    }

    /**
     * Setter for DirectorDetails.
     * @param directorDetails Value for DirDetail
     */
    @JsonSetter("DirectorDetails")
    public void setDirectorDetails(DirDetail directorDetails) {
        this.directorDetails = directorDetails;
    }

    /**
     * Getter for PreviousAddresses.
     * @return Returns the List of DirPreviousAddr
     */
    @JsonGetter("PreviousAddresses")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<DirPreviousAddr> getPreviousAddresses() {
        return previousAddresses;
    }

    /**
     * Setter for PreviousAddresses.
     * @param previousAddresses Value for List of DirPreviousAddr
     */
    @JsonSetter("PreviousAddresses")
    public void setPreviousAddresses(List<DirPreviousAddr> previousAddresses) {
        this.previousAddresses = previousAddresses;
    }

    /**
     * Getter for PreviousNames.
     * @return Returns the List of IndvDirPrevName
     */
    @JsonGetter("PreviousNames")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<IndvDirPrevName> getPreviousNames() {
        return previousNames;
    }

    /**
     * Setter for PreviousNames.
     * @param previousNames Value for List of IndvDirPrevName
     */
    @JsonSetter("PreviousNames")
    public void setPreviousNames(List<IndvDirPrevName> previousNames) {
        this.previousNames = previousNames;
    }

    /**
     * Getter for Directorships.
     * @return Returns the Directorships
     */
    @JsonGetter("Directorships")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Directorships getDirectorships() {
        return directorships;
    }

    /**
     * Setter for Directorships.
     * @param directorships Value for Directorships
     */
    @JsonSetter("Directorships")
    public void setDirectorships(Directorships directorships) {
        this.directorships = directorships;
    }

    /**
     * Getter for Secretaryships.
     * @return Returns the Secretaryships
     */
    @JsonGetter("Secretaryships")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Secretaryships getSecretaryships() {
        return secretaryships;
    }

    /**
     * Setter for Secretaryships.
     * @param secretaryships Value for Secretaryships
     */
    @JsonSetter("Secretaryships")
    public void setSecretaryships(Secretaryships secretaryships) {
        this.secretaryships = secretaryships;
    }

    /**
     * Getter for DisqualStartDate.
     * Disqualification Start Date (yyyy-mm-dd)
     * @return Returns the String
     */
    @JsonGetter("DisqualStartDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDisqualStartDate() {
        return disqualStartDate;
    }

    /**
     * Setter for DisqualStartDate.
     * Disqualification Start Date (yyyy-mm-dd)
     * @param disqualStartDate Value for String
     */
    @JsonSetter("DisqualStartDate")
    public void setDisqualStartDate(String disqualStartDate) {
        this.disqualStartDate = disqualStartDate;
    }

    /**
     * Getter for DisqualEndDate.
     * Disqualification End Date (yyyy-mm-dd)
     * @return Returns the String
     */
    @JsonGetter("DisqualEndDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDisqualEndDate() {
        return disqualEndDate;
    }

    /**
     * Setter for DisqualEndDate.
     * Disqualification End Date (yyyy-mm-dd)
     * @param disqualEndDate Value for String
     */
    @JsonSetter("DisqualEndDate")
    public void setDisqualEndDate(String disqualEndDate) {
        this.disqualEndDate = disqualEndDate;
    }

    /**
     * Getter for Convictions.
     * @return Returns the List of IndvDirConvData
     */
    @JsonGetter("Convictions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<IndvDirConvData> getConvictions() {
        return convictions;
    }

    /**
     * Setter for Convictions.
     * @param convictions Value for List of IndvDirConvData
     */
    @JsonSetter("Convictions")
    public void setConvictions(List<IndvDirConvData> convictions) {
        this.convictions = convictions;
    }

    /**
     * Getter for SummaryDirectorCIFAS.
     * @return Returns the List of SummaryDirectorCIFAS
     */
    @JsonGetter("SummaryDirectorCIFAS")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<SummaryDirectorCIFAS> getSummaryDirectorCIFAS() {
        return summaryDirectorCIFAS;
    }

    /**
     * Setter for SummaryDirectorCIFAS.
     * @param summaryDirectorCIFAS Value for List of SummaryDirectorCIFAS
     */
    @JsonSetter("SummaryDirectorCIFAS")
    public void setSummaryDirectorCIFAS(List<SummaryDirectorCIFAS> summaryDirectorCIFAS) {
        this.summaryDirectorCIFAS = summaryDirectorCIFAS;
    }

    /**
     * Getter for DetailDirectorCIFAS.
     * @return Returns the List of DetailDirectorCIFAS
     */
    @JsonGetter("DetailDirectorCIFAS")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<DetailDirectorCIFAS> getDetailDirectorCIFAS() {
        return detailDirectorCIFAS;
    }

    /**
     * Setter for DetailDirectorCIFAS.
     * @param detailDirectorCIFAS Value for List of DetailDirectorCIFAS
     */
    @JsonSetter("DetailDirectorCIFAS")
    public void setDetailDirectorCIFAS(List<DetailDirectorCIFAS> detailDirectorCIFAS) {
        this.detailDirectorCIFAS = detailDirectorCIFAS;
    }

    /**
     * Getter for NoticeOfCorrection.
     * @return Returns the NoticeOfCorrection
     */
    @JsonGetter("NoticeOfCorrection")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public NoticeOfCorrection getNoticeOfCorrection() {
        return noticeOfCorrection;
    }

    /**
     * Setter for NoticeOfCorrection.
     * @param noticeOfCorrection Value for NoticeOfCorrection
     */
    @JsonSetter("NoticeOfCorrection")
    public void setNoticeOfCorrection(NoticeOfCorrection noticeOfCorrection) {
        this.noticeOfCorrection = noticeOfCorrection;
    }

    /**
     * Getter for Error.
     * @return Returns the Error
     */
    @JsonGetter("Error")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Error getError() {
        return error;
    }

    /**
     * Setter for Error.
     * @param error Value for Error
     */
    @JsonSetter("Error")
    public void setError(Error error) {
        this.error = error;
    }

    /**
     * Converts this DirectorData into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DirectorData [" + "directorNumber=" + directorNumber + ", directorSecretaryFlag="
                + directorSecretaryFlag + ", foreignAddressFlag=" + foreignAddressFlag
                + ", directorCompanyFlag=" + directorCompanyFlag + ", directorDetails="
                + directorDetails + ", previousAddresses=" + previousAddresses + ", previousNames="
                + previousNames + ", directorships=" + directorships + ", secretaryships="
                + secretaryships + ", disqualStartDate=" + disqualStartDate + ", disqualEndDate="
                + disqualEndDate + ", convictions=" + convictions + ", summaryDirectorCIFAS="
                + summaryDirectorCIFAS + ", detailDirectorCIFAS=" + detailDirectorCIFAS
                + ", noticeOfCorrection=" + noticeOfCorrection + ", error=" + error + "]";
    }

    /**
     * Builds a new {@link DirectorData.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DirectorData.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .directorNumber(getDirectorNumber())
                .directorSecretaryFlag(getDirectorSecretaryFlag())
                .foreignAddressFlag(getForeignAddressFlag())
                .directorCompanyFlag(getDirectorCompanyFlag())
                .directorDetails(getDirectorDetails())
                .previousAddresses(getPreviousAddresses())
                .previousNames(getPreviousNames())
                .directorships(getDirectorships())
                .secretaryships(getSecretaryships())
                .disqualStartDate(getDisqualStartDate())
                .disqualEndDate(getDisqualEndDate())
                .convictions(getConvictions())
                .summaryDirectorCIFAS(getSummaryDirectorCIFAS())
                .detailDirectorCIFAS(getDetailDirectorCIFAS())
                .noticeOfCorrection(getNoticeOfCorrection())
                .error(getError());
        return builder;
    }

    /**
     * Class to build instances of {@link DirectorData}.
     */
    public static class Builder {
        private String directorNumber;
        private String directorSecretaryFlag;
        private String foreignAddressFlag;
        private String directorCompanyFlag;
        private DirDetail directorDetails;
        private List<DirPreviousAddr> previousAddresses;
        private List<IndvDirPrevName> previousNames;
        private Directorships directorships;
        private Secretaryships secretaryships;
        private String disqualStartDate;
        private String disqualEndDate;
        private List<IndvDirConvData> convictions;
        private List<SummaryDirectorCIFAS> summaryDirectorCIFAS;
        private List<DetailDirectorCIFAS> detailDirectorCIFAS;
        private NoticeOfCorrection noticeOfCorrection;
        private Error error;



        /**
         * Setter for directorNumber.
         * @param  directorNumber  String value for directorNumber.
         * @return Builder
         */
        public Builder directorNumber(String directorNumber) {
            this.directorNumber = directorNumber;
            return this;
        }

        /**
         * Setter for directorSecretaryFlag.
         * @param  directorSecretaryFlag  String value for directorSecretaryFlag.
         * @return Builder
         */
        public Builder directorSecretaryFlag(String directorSecretaryFlag) {
            this.directorSecretaryFlag = directorSecretaryFlag;
            return this;
        }

        /**
         * Setter for foreignAddressFlag.
         * @param  foreignAddressFlag  String value for foreignAddressFlag.
         * @return Builder
         */
        public Builder foreignAddressFlag(String foreignAddressFlag) {
            this.foreignAddressFlag = foreignAddressFlag;
            return this;
        }

        /**
         * Setter for directorCompanyFlag.
         * @param  directorCompanyFlag  String value for directorCompanyFlag.
         * @return Builder
         */
        public Builder directorCompanyFlag(String directorCompanyFlag) {
            this.directorCompanyFlag = directorCompanyFlag;
            return this;
        }

        /**
         * Setter for directorDetails.
         * @param  directorDetails  DirDetail value for directorDetails.
         * @return Builder
         */
        public Builder directorDetails(DirDetail directorDetails) {
            this.directorDetails = directorDetails;
            return this;
        }

        /**
         * Setter for previousAddresses.
         * @param  previousAddresses  List of DirPreviousAddr value for previousAddresses.
         * @return Builder
         */
        public Builder previousAddresses(List<DirPreviousAddr> previousAddresses) {
            this.previousAddresses = previousAddresses;
            return this;
        }

        /**
         * Setter for previousNames.
         * @param  previousNames  List of IndvDirPrevName value for previousNames.
         * @return Builder
         */
        public Builder previousNames(List<IndvDirPrevName> previousNames) {
            this.previousNames = previousNames;
            return this;
        }

        /**
         * Setter for directorships.
         * @param  directorships  Directorships value for directorships.
         * @return Builder
         */
        public Builder directorships(Directorships directorships) {
            this.directorships = directorships;
            return this;
        }

        /**
         * Setter for secretaryships.
         * @param  secretaryships  Secretaryships value for secretaryships.
         * @return Builder
         */
        public Builder secretaryships(Secretaryships secretaryships) {
            this.secretaryships = secretaryships;
            return this;
        }

        /**
         * Setter for disqualStartDate.
         * @param  disqualStartDate  String value for disqualStartDate.
         * @return Builder
         */
        public Builder disqualStartDate(String disqualStartDate) {
            this.disqualStartDate = disqualStartDate;
            return this;
        }

        /**
         * Setter for disqualEndDate.
         * @param  disqualEndDate  String value for disqualEndDate.
         * @return Builder
         */
        public Builder disqualEndDate(String disqualEndDate) {
            this.disqualEndDate = disqualEndDate;
            return this;
        }

        /**
         * Setter for convictions.
         * @param  convictions  List of IndvDirConvData value for convictions.
         * @return Builder
         */
        public Builder convictions(List<IndvDirConvData> convictions) {
            this.convictions = convictions;
            return this;
        }

        /**
         * Setter for summaryDirectorCIFAS.
         * @param  summaryDirectorCIFAS  List of SummaryDirectorCIFAS value for
         *         summaryDirectorCIFAS.
         * @return Builder
         */
        public Builder summaryDirectorCIFAS(List<SummaryDirectorCIFAS> summaryDirectorCIFAS) {
            this.summaryDirectorCIFAS = summaryDirectorCIFAS;
            return this;
        }

        /**
         * Setter for detailDirectorCIFAS.
         * @param  detailDirectorCIFAS  List of DetailDirectorCIFAS value for detailDirectorCIFAS.
         * @return Builder
         */
        public Builder detailDirectorCIFAS(List<DetailDirectorCIFAS> detailDirectorCIFAS) {
            this.detailDirectorCIFAS = detailDirectorCIFAS;
            return this;
        }

        /**
         * Setter for noticeOfCorrection.
         * @param  noticeOfCorrection  NoticeOfCorrection value for noticeOfCorrection.
         * @return Builder
         */
        public Builder noticeOfCorrection(NoticeOfCorrection noticeOfCorrection) {
            this.noticeOfCorrection = noticeOfCorrection;
            return this;
        }

        /**
         * Setter for error.
         * @param  error  Error value for error.
         * @return Builder
         */
        public Builder error(Error error) {
            this.error = error;
            return this;
        }

        /**
         * Builds a new {@link DirectorData} object using the set fields.
         * @return {@link DirectorData}
         */
        public DirectorData build() {
            return new DirectorData(directorNumber, directorSecretaryFlag, foreignAddressFlag,
                    directorCompanyFlag, directorDetails, previousAddresses, previousNames,
                    directorships, secretaryships, disqualStartDate, disqualEndDate, convictions,
                    summaryDirectorCIFAS, detailDirectorCIFAS, noticeOfCorrection, error);
        }
    }
}
