/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for DiscontinuedOperations type.
 */
public class DiscontinuedOperations {
    private Double turnover;
    private Double grossProfit;
    private Double operatingProfit;
    private Double preTaxProfits;

    /**
     * Default constructor.
     */
    public DiscontinuedOperations() {
    }

    /**
     * Initialization constructor.
     * @param  turnover  Double value for turnover.
     * @param  grossProfit  Double value for grossProfit.
     * @param  operatingProfit  Double value for operatingProfit.
     * @param  preTaxProfits  Double value for preTaxProfits.
     */
    public DiscontinuedOperations(
            Double turnover,
            Double grossProfit,
            Double operatingProfit,
            Double preTaxProfits) {
        this.turnover = turnover;
        this.grossProfit = grossProfit;
        this.operatingProfit = operatingProfit;
        this.preTaxProfits = preTaxProfits;
    }

    /**
     * Getter for Turnover.
     * Value for Discontinued Operations - Turnover for these accounts
     * @return Returns the Double
     */
    @JsonGetter("Turnover")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTurnover() {
        return turnover;
    }

    /**
     * Setter for Turnover.
     * Value for Discontinued Operations - Turnover for these accounts
     * @param turnover Value for Double
     */
    @JsonSetter("Turnover")
    public void setTurnover(Double turnover) {
        this.turnover = turnover;
    }

    /**
     * Getter for GrossProfit.
     * Value for Discontinued Operations - Gross Profit for these accounts
     * @return Returns the Double
     */
    @JsonGetter("GrossProfit")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getGrossProfit() {
        return grossProfit;
    }

    /**
     * Setter for GrossProfit.
     * Value for Discontinued Operations - Gross Profit for these accounts
     * @param grossProfit Value for Double
     */
    @JsonSetter("GrossProfit")
    public void setGrossProfit(Double grossProfit) {
        this.grossProfit = grossProfit;
    }

    /**
     * Getter for OperatingProfit.
     * Value for Discontinued Operations - Operating Profit for these accounts
     * @return Returns the Double
     */
    @JsonGetter("OperatingProfit")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getOperatingProfit() {
        return operatingProfit;
    }

    /**
     * Setter for OperatingProfit.
     * Value for Discontinued Operations - Operating Profit for these accounts
     * @param operatingProfit Value for Double
     */
    @JsonSetter("OperatingProfit")
    public void setOperatingProfit(Double operatingProfit) {
        this.operatingProfit = operatingProfit;
    }

    /**
     * Getter for PreTaxProfits.
     * Value for Discontinued Operations - Pre-Tax Profit for these accounts
     * @return Returns the Double
     */
    @JsonGetter("PreTaxProfits")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPreTaxProfits() {
        return preTaxProfits;
    }

    /**
     * Setter for PreTaxProfits.
     * Value for Discontinued Operations - Pre-Tax Profit for these accounts
     * @param preTaxProfits Value for Double
     */
    @JsonSetter("PreTaxProfits")
    public void setPreTaxProfits(Double preTaxProfits) {
        this.preTaxProfits = preTaxProfits;
    }

    /**
     * Converts this DiscontinuedOperations into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DiscontinuedOperations [" + "turnover=" + turnover + ", grossProfit=" + grossProfit
                + ", operatingProfit=" + operatingProfit + ", preTaxProfits=" + preTaxProfits + "]";
    }

    /**
     * Builds a new {@link DiscontinuedOperations.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DiscontinuedOperations.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .turnover(getTurnover())
                .grossProfit(getGrossProfit())
                .operatingProfit(getOperatingProfit())
                .preTaxProfits(getPreTaxProfits());
        return builder;
    }

    /**
     * Class to build instances of {@link DiscontinuedOperations}.
     */
    public static class Builder {
        private Double turnover;
        private Double grossProfit;
        private Double operatingProfit;
        private Double preTaxProfits;



        /**
         * Setter for turnover.
         * @param  turnover  Double value for turnover.
         * @return Builder
         */
        public Builder turnover(Double turnover) {
            this.turnover = turnover;
            return this;
        }

        /**
         * Setter for grossProfit.
         * @param  grossProfit  Double value for grossProfit.
         * @return Builder
         */
        public Builder grossProfit(Double grossProfit) {
            this.grossProfit = grossProfit;
            return this;
        }

        /**
         * Setter for operatingProfit.
         * @param  operatingProfit  Double value for operatingProfit.
         * @return Builder
         */
        public Builder operatingProfit(Double operatingProfit) {
            this.operatingProfit = operatingProfit;
            return this;
        }

        /**
         * Setter for preTaxProfits.
         * @param  preTaxProfits  Double value for preTaxProfits.
         * @return Builder
         */
        public Builder preTaxProfits(Double preTaxProfits) {
            this.preTaxProfits = preTaxProfits;
            return this;
        }

        /**
         * Builds a new {@link DiscontinuedOperations} object using the set fields.
         * @return {@link DiscontinuedOperations}
         */
        public DiscontinuedOperations build() {
            return new DiscontinuedOperations(turnover, grossProfit, operatingProfit,
                    preTaxProfits);
        }
    }
}
