/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for PreviousApplication type.
 */
public class PreviousApplication {
    private String aMEXCard;
    private String accessCard;
    private String accommodationType;
    private String accountNumber;
    private String amount;
    private String applicantIndicator;
    private String applicationDate;
    private String applicationType;
    private String bankAccountNumber;
    private String bankSortCode;
    private String chequeCard;
    private String companyType;
    private String currentAccount;
    private String dateOfBirth;
    private String debitCard;
    private String dependants;
    private String dinersCard;
    private String employmentStatus;
    private String employmentType;
    private String enquiryType;
    private String fraudScore;
    private String grossIncome;
    private HomeTelephoneNumber homeTelephoneNumber;
    private String jointApplicant;
    private LocationDetail location;
    private String locationIndicator;
    private String maritalStatus;
    private MatchDetail matchDetails;
    private InputNameDetail name;
    private String noCReference;
    private String numInconsistencies;
    private String numberOfCards;
    private String otherCard;
    private String ownAccountID;
    private LocationDetail previousLocation;
    private String scoreCard;
    private String storeCard;
    private TimeAt timeAtLocation;
    private TimeInEmployment timeAtPrevLocation;
    private TimeInEmploymentDetails timeInEmployment;
    private TimeInEmployment timeWithBank;
    private String visaCard;
    private HomeTelephoneNumber workTelephoneNum;

    /**
     * Default constructor.
     */
    public PreviousApplication() {
    }

    /**
     * Initialization constructor.
     * @param  aMEXCard  String value for aMEXCard.
     * @param  accessCard  String value for accessCard.
     * @param  accommodationType  String value for accommodationType.
     * @param  accountNumber  String value for accountNumber.
     * @param  amount  String value for amount.
     * @param  applicantIndicator  String value for applicantIndicator.
     * @param  applicationDate  String value for applicationDate.
     * @param  applicationType  String value for applicationType.
     * @param  bankAccountNumber  String value for bankAccountNumber.
     * @param  bankSortCode  String value for bankSortCode.
     * @param  chequeCard  String value for chequeCard.
     * @param  companyType  String value for companyType.
     * @param  currentAccount  String value for currentAccount.
     * @param  dateOfBirth  String value for dateOfBirth.
     * @param  debitCard  String value for debitCard.
     * @param  dependants  String value for dependants.
     * @param  dinersCard  String value for dinersCard.
     * @param  employmentStatus  String value for employmentStatus.
     * @param  employmentType  String value for employmentType.
     * @param  enquiryType  String value for enquiryType.
     * @param  fraudScore  String value for fraudScore.
     * @param  grossIncome  String value for grossIncome.
     * @param  homeTelephoneNumber  HomeTelephoneNumber value for homeTelephoneNumber.
     * @param  jointApplicant  String value for jointApplicant.
     * @param  location  LocationDetail value for location.
     * @param  locationIndicator  String value for locationIndicator.
     * @param  maritalStatus  String value for maritalStatus.
     * @param  matchDetails  MatchDetail value for matchDetails.
     * @param  name  InputNameDetail value for name.
     * @param  noCReference  String value for noCReference.
     * @param  numInconsistencies  String value for numInconsistencies.
     * @param  numberOfCards  String value for numberOfCards.
     * @param  otherCard  String value for otherCard.
     * @param  ownAccountID  String value for ownAccountID.
     * @param  previousLocation  LocationDetail value for previousLocation.
     * @param  scoreCard  String value for scoreCard.
     * @param  storeCard  String value for storeCard.
     * @param  timeAtLocation  TimeAt value for timeAtLocation.
     * @param  timeAtPrevLocation  TimeInEmployment value for timeAtPrevLocation.
     * @param  timeInEmployment  TimeInEmploymentDetails value for timeInEmployment.
     * @param  timeWithBank  TimeInEmployment value for timeWithBank.
     * @param  visaCard  String value for visaCard.
     * @param  workTelephoneNum  HomeTelephoneNumber value for workTelephoneNum.
     */
    public PreviousApplication(
            String aMEXCard,
            String accessCard,
            String accommodationType,
            String accountNumber,
            String amount,
            String applicantIndicator,
            String applicationDate,
            String applicationType,
            String bankAccountNumber,
            String bankSortCode,
            String chequeCard,
            String companyType,
            String currentAccount,
            String dateOfBirth,
            String debitCard,
            String dependants,
            String dinersCard,
            String employmentStatus,
            String employmentType,
            String enquiryType,
            String fraudScore,
            String grossIncome,
            HomeTelephoneNumber homeTelephoneNumber,
            String jointApplicant,
            LocationDetail location,
            String locationIndicator,
            String maritalStatus,
            MatchDetail matchDetails,
            InputNameDetail name,
            String noCReference,
            String numInconsistencies,
            String numberOfCards,
            String otherCard,
            String ownAccountID,
            LocationDetail previousLocation,
            String scoreCard,
            String storeCard,
            TimeAt timeAtLocation,
            TimeInEmployment timeAtPrevLocation,
            TimeInEmploymentDetails timeInEmployment,
            TimeInEmployment timeWithBank,
            String visaCard,
            HomeTelephoneNumber workTelephoneNum) {
        this.aMEXCard = aMEXCard;
        this.accessCard = accessCard;
        this.accommodationType = accommodationType;
        this.accountNumber = accountNumber;
        this.amount = amount;
        this.applicantIndicator = applicantIndicator;
        this.applicationDate = applicationDate;
        this.applicationType = applicationType;
        this.bankAccountNumber = bankAccountNumber;
        this.bankSortCode = bankSortCode;
        this.chequeCard = chequeCard;
        this.companyType = companyType;
        this.currentAccount = currentAccount;
        this.dateOfBirth = dateOfBirth;
        this.debitCard = debitCard;
        this.dependants = dependants;
        this.dinersCard = dinersCard;
        this.employmentStatus = employmentStatus;
        this.employmentType = employmentType;
        this.enquiryType = enquiryType;
        this.fraudScore = fraudScore;
        this.grossIncome = grossIncome;
        this.homeTelephoneNumber = homeTelephoneNumber;
        this.jointApplicant = jointApplicant;
        this.location = location;
        this.locationIndicator = locationIndicator;
        this.maritalStatus = maritalStatus;
        this.matchDetails = matchDetails;
        this.name = name;
        this.noCReference = noCReference;
        this.numInconsistencies = numInconsistencies;
        this.numberOfCards = numberOfCards;
        this.otherCard = otherCard;
        this.ownAccountID = ownAccountID;
        this.previousLocation = previousLocation;
        this.scoreCard = scoreCard;
        this.storeCard = storeCard;
        this.timeAtLocation = timeAtLocation;
        this.timeAtPrevLocation = timeAtPrevLocation;
        this.timeInEmployment = timeInEmployment;
        this.timeWithBank = timeWithBank;
        this.visaCard = visaCard;
        this.workTelephoneNum = workTelephoneNum;
    }

    /**
     * Getter for AMEXCard.
     * @return Returns the String
     */
    @JsonGetter("AMEXCard")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAMEXCard() {
        return aMEXCard;
    }

    /**
     * Setter for AMEXCard.
     * @param aMEXCard Value for String
     */
    @JsonSetter("AMEXCard")
    public void setAMEXCard(String aMEXCard) {
        this.aMEXCard = aMEXCard;
    }

    /**
     * Getter for AccessCard.
     * @return Returns the String
     */
    @JsonGetter("AccessCard")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccessCard() {
        return accessCard;
    }

    /**
     * Setter for AccessCard.
     * @param accessCard Value for String
     */
    @JsonSetter("AccessCard")
    public void setAccessCard(String accessCard) {
        this.accessCard = accessCard;
    }

    /**
     * Getter for AccommodationType.
     * @return Returns the String
     */
    @JsonGetter("AccommodationType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccommodationType() {
        return accommodationType;
    }

    /**
     * Setter for AccommodationType.
     * @param accommodationType Value for String
     */
    @JsonSetter("AccommodationType")
    public void setAccommodationType(String accommodationType) {
        this.accommodationType = accommodationType;
    }

    /**
     * Getter for AccountNumber.
     * @return Returns the String
     */
    @JsonGetter("AccountNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountNumber() {
        return accountNumber;
    }

    /**
     * Setter for AccountNumber.
     * @param accountNumber Value for String
     */
    @JsonSetter("AccountNumber")
    public void setAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;
    }

    /**
     * Getter for Amount.
     * @return Returns the String
     */
    @JsonGetter("Amount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAmount() {
        return amount;
    }

    /**
     * Setter for Amount.
     * @param amount Value for String
     */
    @JsonSetter("Amount")
    public void setAmount(String amount) {
        this.amount = amount;
    }

    /**
     * Getter for ApplicantIndicator.
     * @return Returns the String
     */
    @JsonGetter("ApplicantIndicator")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getApplicantIndicator() {
        return applicantIndicator;
    }

    /**
     * Setter for ApplicantIndicator.
     * @param applicantIndicator Value for String
     */
    @JsonSetter("ApplicantIndicator")
    public void setApplicantIndicator(String applicantIndicator) {
        this.applicantIndicator = applicantIndicator;
    }

    /**
     * Getter for ApplicationDate.
     * Application Date (yyyy-mm-dd)
     * @return Returns the String
     */
    @JsonGetter("ApplicationDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getApplicationDate() {
        return applicationDate;
    }

    /**
     * Setter for ApplicationDate.
     * Application Date (yyyy-mm-dd)
     * @param applicationDate Value for String
     */
    @JsonSetter("ApplicationDate")
    public void setApplicationDate(String applicationDate) {
        this.applicationDate = applicationDate;
    }

    /**
     * Getter for ApplicationType.
     * @return Returns the String
     */
    @JsonGetter("ApplicationType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getApplicationType() {
        return applicationType;
    }

    /**
     * Setter for ApplicationType.
     * @param applicationType Value for String
     */
    @JsonSetter("ApplicationType")
    public void setApplicationType(String applicationType) {
        this.applicationType = applicationType;
    }

    /**
     * Getter for BankAccountNumber.
     * @return Returns the String
     */
    @JsonGetter("BankAccountNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBankAccountNumber() {
        return bankAccountNumber;
    }

    /**
     * Setter for BankAccountNumber.
     * @param bankAccountNumber Value for String
     */
    @JsonSetter("BankAccountNumber")
    public void setBankAccountNumber(String bankAccountNumber) {
        this.bankAccountNumber = bankAccountNumber;
    }

    /**
     * Getter for BankSortCode.
     * @return Returns the String
     */
    @JsonGetter("BankSortCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBankSortCode() {
        return bankSortCode;
    }

    /**
     * Setter for BankSortCode.
     * @param bankSortCode Value for String
     */
    @JsonSetter("BankSortCode")
    public void setBankSortCode(String bankSortCode) {
        this.bankSortCode = bankSortCode;
    }

    /**
     * Getter for ChequeCard.
     * @return Returns the String
     */
    @JsonGetter("ChequeCard")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getChequeCard() {
        return chequeCard;
    }

    /**
     * Setter for ChequeCard.
     * @param chequeCard Value for String
     */
    @JsonSetter("ChequeCard")
    public void setChequeCard(String chequeCard) {
        this.chequeCard = chequeCard;
    }

    /**
     * Getter for CompanyType.
     * @return Returns the String
     */
    @JsonGetter("CompanyType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCompanyType() {
        return companyType;
    }

    /**
     * Setter for CompanyType.
     * @param companyType Value for String
     */
    @JsonSetter("CompanyType")
    public void setCompanyType(String companyType) {
        this.companyType = companyType;
    }

    /**
     * Getter for CurrentAccount.
     * @return Returns the String
     */
    @JsonGetter("CurrentAccount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCurrentAccount() {
        return currentAccount;
    }

    /**
     * Setter for CurrentAccount.
     * @param currentAccount Value for String
     */
    @JsonSetter("CurrentAccount")
    public void setCurrentAccount(String currentAccount) {
        this.currentAccount = currentAccount;
    }

    /**
     * Getter for DateOfBirth.
     * Date of birth (yyyy-mm-dd)
     * @return Returns the String
     */
    @JsonGetter("DateOfBirth")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDateOfBirth() {
        return dateOfBirth;
    }

    /**
     * Setter for DateOfBirth.
     * Date of birth (yyyy-mm-dd)
     * @param dateOfBirth Value for String
     */
    @JsonSetter("DateOfBirth")
    public void setDateOfBirth(String dateOfBirth) {
        this.dateOfBirth = dateOfBirth;
    }

    /**
     * Getter for DebitCard.
     * @return Returns the String
     */
    @JsonGetter("DebitCard")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDebitCard() {
        return debitCard;
    }

    /**
     * Setter for DebitCard.
     * @param debitCard Value for String
     */
    @JsonSetter("DebitCard")
    public void setDebitCard(String debitCard) {
        this.debitCard = debitCard;
    }

    /**
     * Getter for Dependants.
     * @return Returns the String
     */
    @JsonGetter("Dependants")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDependants() {
        return dependants;
    }

    /**
     * Setter for Dependants.
     * @param dependants Value for String
     */
    @JsonSetter("Dependants")
    public void setDependants(String dependants) {
        this.dependants = dependants;
    }

    /**
     * Getter for DinersCard.
     * @return Returns the String
     */
    @JsonGetter("DinersCard")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDinersCard() {
        return dinersCard;
    }

    /**
     * Setter for DinersCard.
     * @param dinersCard Value for String
     */
    @JsonSetter("DinersCard")
    public void setDinersCard(String dinersCard) {
        this.dinersCard = dinersCard;
    }

    /**
     * Getter for EmploymentStatus.
     * @return Returns the String
     */
    @JsonGetter("EmploymentStatus")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getEmploymentStatus() {
        return employmentStatus;
    }

    /**
     * Setter for EmploymentStatus.
     * @param employmentStatus Value for String
     */
    @JsonSetter("EmploymentStatus")
    public void setEmploymentStatus(String employmentStatus) {
        this.employmentStatus = employmentStatus;
    }

    /**
     * Getter for EmploymentType.
     * @return Returns the String
     */
    @JsonGetter("EmploymentType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getEmploymentType() {
        return employmentType;
    }

    /**
     * Setter for EmploymentType.
     * @param employmentType Value for String
     */
    @JsonSetter("EmploymentType")
    public void setEmploymentType(String employmentType) {
        this.employmentType = employmentType;
    }

    /**
     * Getter for EnquiryType.
     * @return Returns the String
     */
    @JsonGetter("EnquiryType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getEnquiryType() {
        return enquiryType;
    }

    /**
     * Setter for EnquiryType.
     * @param enquiryType Value for String
     */
    @JsonSetter("EnquiryType")
    public void setEnquiryType(String enquiryType) {
        this.enquiryType = enquiryType;
    }

    /**
     * Getter for FraudScore.
     * @return Returns the String
     */
    @JsonGetter("FraudScore")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getFraudScore() {
        return fraudScore;
    }

    /**
     * Setter for FraudScore.
     * @param fraudScore Value for String
     */
    @JsonSetter("FraudScore")
    public void setFraudScore(String fraudScore) {
        this.fraudScore = fraudScore;
    }

    /**
     * Getter for GrossIncome.
     * @return Returns the String
     */
    @JsonGetter("GrossIncome")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getGrossIncome() {
        return grossIncome;
    }

    /**
     * Setter for GrossIncome.
     * @param grossIncome Value for String
     */
    @JsonSetter("GrossIncome")
    public void setGrossIncome(String grossIncome) {
        this.grossIncome = grossIncome;
    }

    /**
     * Getter for HomeTelephoneNumber.
     * @return Returns the HomeTelephoneNumber
     */
    @JsonGetter("HomeTelephoneNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public HomeTelephoneNumber getHomeTelephoneNumber() {
        return homeTelephoneNumber;
    }

    /**
     * Setter for HomeTelephoneNumber.
     * @param homeTelephoneNumber Value for HomeTelephoneNumber
     */
    @JsonSetter("HomeTelephoneNumber")
    public void setHomeTelephoneNumber(HomeTelephoneNumber homeTelephoneNumber) {
        this.homeTelephoneNumber = homeTelephoneNumber;
    }

    /**
     * Getter for JointApplicant.
     * @return Returns the String
     */
    @JsonGetter("JointApplicant")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getJointApplicant() {
        return jointApplicant;
    }

    /**
     * Setter for JointApplicant.
     * @param jointApplicant Value for String
     */
    @JsonSetter("JointApplicant")
    public void setJointApplicant(String jointApplicant) {
        this.jointApplicant = jointApplicant;
    }

    /**
     * Getter for Location.
     * @return Returns the LocationDetail
     */
    @JsonGetter("Location")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public LocationDetail getLocation() {
        return location;
    }

    /**
     * Setter for Location.
     * @param location Value for LocationDetail
     */
    @JsonSetter("Location")
    public void setLocation(LocationDetail location) {
        this.location = location;
    }

    /**
     * Getter for LocationIndicator.
     * @return Returns the String
     */
    @JsonGetter("LocationIndicator")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLocationIndicator() {
        return locationIndicator;
    }

    /**
     * Setter for LocationIndicator.
     * @param locationIndicator Value for String
     */
    @JsonSetter("LocationIndicator")
    public void setLocationIndicator(String locationIndicator) {
        this.locationIndicator = locationIndicator;
    }

    /**
     * Getter for MaritalStatus.
     * @return Returns the String
     */
    @JsonGetter("MaritalStatus")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMaritalStatus() {
        return maritalStatus;
    }

    /**
     * Setter for MaritalStatus.
     * @param maritalStatus Value for String
     */
    @JsonSetter("MaritalStatus")
    public void setMaritalStatus(String maritalStatus) {
        this.maritalStatus = maritalStatus;
    }

    /**
     * Getter for MatchDetails.
     * @return Returns the MatchDetail
     */
    @JsonGetter("MatchDetails")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public MatchDetail getMatchDetails() {
        return matchDetails;
    }

    /**
     * Setter for MatchDetails.
     * @param matchDetails Value for MatchDetail
     */
    @JsonSetter("MatchDetails")
    public void setMatchDetails(MatchDetail matchDetails) {
        this.matchDetails = matchDetails;
    }

    /**
     * Getter for Name.
     * @return Returns the InputNameDetail
     */
    @JsonGetter("Name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public InputNameDetail getName() {
        return name;
    }

    /**
     * Setter for Name.
     * @param name Value for InputNameDetail
     */
    @JsonSetter("Name")
    public void setName(InputNameDetail name) {
        this.name = name;
    }

    /**
     * Getter for NoCReference.
     * @return Returns the String
     */
    @JsonGetter("NoCReference")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getNoCReference() {
        return noCReference;
    }

    /**
     * Setter for NoCReference.
     * @param noCReference Value for String
     */
    @JsonSetter("NoCReference")
    public void setNoCReference(String noCReference) {
        this.noCReference = noCReference;
    }

    /**
     * Getter for NumInconsistencies.
     * @return Returns the String
     */
    @JsonGetter("NumInconsistencies")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getNumInconsistencies() {
        return numInconsistencies;
    }

    /**
     * Setter for NumInconsistencies.
     * @param numInconsistencies Value for String
     */
    @JsonSetter("NumInconsistencies")
    public void setNumInconsistencies(String numInconsistencies) {
        this.numInconsistencies = numInconsistencies;
    }

    /**
     * Getter for NumberOfCards.
     * @return Returns the String
     */
    @JsonGetter("NumberOfCards")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getNumberOfCards() {
        return numberOfCards;
    }

    /**
     * Setter for NumberOfCards.
     * @param numberOfCards Value for String
     */
    @JsonSetter("NumberOfCards")
    public void setNumberOfCards(String numberOfCards) {
        this.numberOfCards = numberOfCards;
    }

    /**
     * Getter for OtherCard.
     * @return Returns the String
     */
    @JsonGetter("OtherCard")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getOtherCard() {
        return otherCard;
    }

    /**
     * Setter for OtherCard.
     * @param otherCard Value for String
     */
    @JsonSetter("OtherCard")
    public void setOtherCard(String otherCard) {
        this.otherCard = otherCard;
    }

    /**
     * Getter for OwnAccountID.
     * @return Returns the String
     */
    @JsonGetter("OwnAccountID")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getOwnAccountID() {
        return ownAccountID;
    }

    /**
     * Setter for OwnAccountID.
     * @param ownAccountID Value for String
     */
    @JsonSetter("OwnAccountID")
    public void setOwnAccountID(String ownAccountID) {
        this.ownAccountID = ownAccountID;
    }

    /**
     * Getter for PreviousLocation.
     * @return Returns the LocationDetail
     */
    @JsonGetter("PreviousLocation")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public LocationDetail getPreviousLocation() {
        return previousLocation;
    }

    /**
     * Setter for PreviousLocation.
     * @param previousLocation Value for LocationDetail
     */
    @JsonSetter("PreviousLocation")
    public void setPreviousLocation(LocationDetail previousLocation) {
        this.previousLocation = previousLocation;
    }

    /**
     * Getter for ScoreCard.
     * @return Returns the String
     */
    @JsonGetter("ScoreCard")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getScoreCard() {
        return scoreCard;
    }

    /**
     * Setter for ScoreCard.
     * @param scoreCard Value for String
     */
    @JsonSetter("ScoreCard")
    public void setScoreCard(String scoreCard) {
        this.scoreCard = scoreCard;
    }

    /**
     * Getter for StoreCard.
     * @return Returns the String
     */
    @JsonGetter("StoreCard")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getStoreCard() {
        return storeCard;
    }

    /**
     * Setter for StoreCard.
     * @param storeCard Value for String
     */
    @JsonSetter("StoreCard")
    public void setStoreCard(String storeCard) {
        this.storeCard = storeCard;
    }

    /**
     * Getter for TimeAtLocation.
     * @return Returns the TimeAt
     */
    @JsonGetter("TimeAtLocation")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public TimeAt getTimeAtLocation() {
        return timeAtLocation;
    }

    /**
     * Setter for TimeAtLocation.
     * @param timeAtLocation Value for TimeAt
     */
    @JsonSetter("TimeAtLocation")
    public void setTimeAtLocation(TimeAt timeAtLocation) {
        this.timeAtLocation = timeAtLocation;
    }

    /**
     * Getter for TimeAtPrevLocation.
     * @return Returns the TimeInEmployment
     */
    @JsonGetter("TimeAtPrevLocation")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public TimeInEmployment getTimeAtPrevLocation() {
        return timeAtPrevLocation;
    }

    /**
     * Setter for TimeAtPrevLocation.
     * @param timeAtPrevLocation Value for TimeInEmployment
     */
    @JsonSetter("TimeAtPrevLocation")
    public void setTimeAtPrevLocation(TimeInEmployment timeAtPrevLocation) {
        this.timeAtPrevLocation = timeAtPrevLocation;
    }

    /**
     * Getter for TimeInEmployment.
     * @return Returns the TimeInEmploymentDetails
     */
    @JsonGetter("TimeInEmployment")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public TimeInEmploymentDetails getTimeInEmployment() {
        return timeInEmployment;
    }

    /**
     * Setter for TimeInEmployment.
     * @param timeInEmployment Value for TimeInEmploymentDetails
     */
    @JsonSetter("TimeInEmployment")
    public void setTimeInEmployment(TimeInEmploymentDetails timeInEmployment) {
        this.timeInEmployment = timeInEmployment;
    }

    /**
     * Getter for TimeWithBank.
     * @return Returns the TimeInEmployment
     */
    @JsonGetter("TimeWithBank")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public TimeInEmployment getTimeWithBank() {
        return timeWithBank;
    }

    /**
     * Setter for TimeWithBank.
     * @param timeWithBank Value for TimeInEmployment
     */
    @JsonSetter("TimeWithBank")
    public void setTimeWithBank(TimeInEmployment timeWithBank) {
        this.timeWithBank = timeWithBank;
    }

    /**
     * Getter for VisaCard.
     * @return Returns the String
     */
    @JsonGetter("VisaCard")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getVisaCard() {
        return visaCard;
    }

    /**
     * Setter for VisaCard.
     * @param visaCard Value for String
     */
    @JsonSetter("VisaCard")
    public void setVisaCard(String visaCard) {
        this.visaCard = visaCard;
    }

    /**
     * Getter for WorkTelephoneNum.
     * @return Returns the HomeTelephoneNumber
     */
    @JsonGetter("WorkTelephoneNum")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public HomeTelephoneNumber getWorkTelephoneNum() {
        return workTelephoneNum;
    }

    /**
     * Setter for WorkTelephoneNum.
     * @param workTelephoneNum Value for HomeTelephoneNumber
     */
    @JsonSetter("WorkTelephoneNum")
    public void setWorkTelephoneNum(HomeTelephoneNumber workTelephoneNum) {
        this.workTelephoneNum = workTelephoneNum;
    }

    /**
     * Converts this PreviousApplication into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "PreviousApplication [" + "aMEXCard=" + aMEXCard + ", accessCard=" + accessCard
                + ", accommodationType=" + accommodationType + ", accountNumber=" + accountNumber
                + ", amount=" + amount + ", applicantIndicator=" + applicantIndicator
                + ", applicationDate=" + applicationDate + ", applicationType=" + applicationType
                + ", bankAccountNumber=" + bankAccountNumber + ", bankSortCode=" + bankSortCode
                + ", chequeCard=" + chequeCard + ", companyType=" + companyType
                + ", currentAccount=" + currentAccount + ", dateOfBirth=" + dateOfBirth
                + ", debitCard=" + debitCard + ", dependants=" + dependants + ", dinersCard="
                + dinersCard + ", employmentStatus=" + employmentStatus + ", employmentType="
                + employmentType + ", enquiryType=" + enquiryType + ", fraudScore=" + fraudScore
                + ", grossIncome=" + grossIncome + ", homeTelephoneNumber=" + homeTelephoneNumber
                + ", jointApplicant=" + jointApplicant + ", location=" + location
                + ", locationIndicator=" + locationIndicator + ", maritalStatus=" + maritalStatus
                + ", matchDetails=" + matchDetails + ", name=" + name + ", noCReference="
                + noCReference + ", numInconsistencies=" + numInconsistencies + ", numberOfCards="
                + numberOfCards + ", otherCard=" + otherCard + ", ownAccountID=" + ownAccountID
                + ", previousLocation=" + previousLocation + ", scoreCard=" + scoreCard
                + ", storeCard=" + storeCard + ", timeAtLocation=" + timeAtLocation
                + ", timeAtPrevLocation=" + timeAtPrevLocation + ", timeInEmployment="
                + timeInEmployment + ", timeWithBank=" + timeWithBank + ", visaCard=" + visaCard
                + ", workTelephoneNum=" + workTelephoneNum + "]";
    }

    /**
     * Builds a new {@link PreviousApplication.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link PreviousApplication.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .aMEXCard(getAMEXCard())
                .accessCard(getAccessCard())
                .accommodationType(getAccommodationType())
                .accountNumber(getAccountNumber())
                .amount(getAmount())
                .applicantIndicator(getApplicantIndicator())
                .applicationDate(getApplicationDate())
                .applicationType(getApplicationType())
                .bankAccountNumber(getBankAccountNumber())
                .bankSortCode(getBankSortCode())
                .chequeCard(getChequeCard())
                .companyType(getCompanyType())
                .currentAccount(getCurrentAccount())
                .dateOfBirth(getDateOfBirth())
                .debitCard(getDebitCard())
                .dependants(getDependants())
                .dinersCard(getDinersCard())
                .employmentStatus(getEmploymentStatus())
                .employmentType(getEmploymentType())
                .enquiryType(getEnquiryType())
                .fraudScore(getFraudScore())
                .grossIncome(getGrossIncome())
                .homeTelephoneNumber(getHomeTelephoneNumber())
                .jointApplicant(getJointApplicant())
                .location(getLocation())
                .locationIndicator(getLocationIndicator())
                .maritalStatus(getMaritalStatus())
                .matchDetails(getMatchDetails())
                .name(getName())
                .noCReference(getNoCReference())
                .numInconsistencies(getNumInconsistencies())
                .numberOfCards(getNumberOfCards())
                .otherCard(getOtherCard())
                .ownAccountID(getOwnAccountID())
                .previousLocation(getPreviousLocation())
                .scoreCard(getScoreCard())
                .storeCard(getStoreCard())
                .timeAtLocation(getTimeAtLocation())
                .timeAtPrevLocation(getTimeAtPrevLocation())
                .timeInEmployment(getTimeInEmployment())
                .timeWithBank(getTimeWithBank())
                .visaCard(getVisaCard())
                .workTelephoneNum(getWorkTelephoneNum());
        return builder;
    }

    /**
     * Class to build instances of {@link PreviousApplication}.
     */
    public static class Builder {
        private String aMEXCard;
        private String accessCard;
        private String accommodationType;
        private String accountNumber;
        private String amount;
        private String applicantIndicator;
        private String applicationDate;
        private String applicationType;
        private String bankAccountNumber;
        private String bankSortCode;
        private String chequeCard;
        private String companyType;
        private String currentAccount;
        private String dateOfBirth;
        private String debitCard;
        private String dependants;
        private String dinersCard;
        private String employmentStatus;
        private String employmentType;
        private String enquiryType;
        private String fraudScore;
        private String grossIncome;
        private HomeTelephoneNumber homeTelephoneNumber;
        private String jointApplicant;
        private LocationDetail location;
        private String locationIndicator;
        private String maritalStatus;
        private MatchDetail matchDetails;
        private InputNameDetail name;
        private String noCReference;
        private String numInconsistencies;
        private String numberOfCards;
        private String otherCard;
        private String ownAccountID;
        private LocationDetail previousLocation;
        private String scoreCard;
        private String storeCard;
        private TimeAt timeAtLocation;
        private TimeInEmployment timeAtPrevLocation;
        private TimeInEmploymentDetails timeInEmployment;
        private TimeInEmployment timeWithBank;
        private String visaCard;
        private HomeTelephoneNumber workTelephoneNum;



        /**
         * Setter for aMEXCard.
         * @param  aMEXCard  String value for aMEXCard.
         * @return Builder
         */
        public Builder aMEXCard(String aMEXCard) {
            this.aMEXCard = aMEXCard;
            return this;
        }

        /**
         * Setter for accessCard.
         * @param  accessCard  String value for accessCard.
         * @return Builder
         */
        public Builder accessCard(String accessCard) {
            this.accessCard = accessCard;
            return this;
        }

        /**
         * Setter for accommodationType.
         * @param  accommodationType  String value for accommodationType.
         * @return Builder
         */
        public Builder accommodationType(String accommodationType) {
            this.accommodationType = accommodationType;
            return this;
        }

        /**
         * Setter for accountNumber.
         * @param  accountNumber  String value for accountNumber.
         * @return Builder
         */
        public Builder accountNumber(String accountNumber) {
            this.accountNumber = accountNumber;
            return this;
        }

        /**
         * Setter for amount.
         * @param  amount  String value for amount.
         * @return Builder
         */
        public Builder amount(String amount) {
            this.amount = amount;
            return this;
        }

        /**
         * Setter for applicantIndicator.
         * @param  applicantIndicator  String value for applicantIndicator.
         * @return Builder
         */
        public Builder applicantIndicator(String applicantIndicator) {
            this.applicantIndicator = applicantIndicator;
            return this;
        }

        /**
         * Setter for applicationDate.
         * @param  applicationDate  String value for applicationDate.
         * @return Builder
         */
        public Builder applicationDate(String applicationDate) {
            this.applicationDate = applicationDate;
            return this;
        }

        /**
         * Setter for applicationType.
         * @param  applicationType  String value for applicationType.
         * @return Builder
         */
        public Builder applicationType(String applicationType) {
            this.applicationType = applicationType;
            return this;
        }

        /**
         * Setter for bankAccountNumber.
         * @param  bankAccountNumber  String value for bankAccountNumber.
         * @return Builder
         */
        public Builder bankAccountNumber(String bankAccountNumber) {
            this.bankAccountNumber = bankAccountNumber;
            return this;
        }

        /**
         * Setter for bankSortCode.
         * @param  bankSortCode  String value for bankSortCode.
         * @return Builder
         */
        public Builder bankSortCode(String bankSortCode) {
            this.bankSortCode = bankSortCode;
            return this;
        }

        /**
         * Setter for chequeCard.
         * @param  chequeCard  String value for chequeCard.
         * @return Builder
         */
        public Builder chequeCard(String chequeCard) {
            this.chequeCard = chequeCard;
            return this;
        }

        /**
         * Setter for companyType.
         * @param  companyType  String value for companyType.
         * @return Builder
         */
        public Builder companyType(String companyType) {
            this.companyType = companyType;
            return this;
        }

        /**
         * Setter for currentAccount.
         * @param  currentAccount  String value for currentAccount.
         * @return Builder
         */
        public Builder currentAccount(String currentAccount) {
            this.currentAccount = currentAccount;
            return this;
        }

        /**
         * Setter for dateOfBirth.
         * @param  dateOfBirth  String value for dateOfBirth.
         * @return Builder
         */
        public Builder dateOfBirth(String dateOfBirth) {
            this.dateOfBirth = dateOfBirth;
            return this;
        }

        /**
         * Setter for debitCard.
         * @param  debitCard  String value for debitCard.
         * @return Builder
         */
        public Builder debitCard(String debitCard) {
            this.debitCard = debitCard;
            return this;
        }

        /**
         * Setter for dependants.
         * @param  dependants  String value for dependants.
         * @return Builder
         */
        public Builder dependants(String dependants) {
            this.dependants = dependants;
            return this;
        }

        /**
         * Setter for dinersCard.
         * @param  dinersCard  String value for dinersCard.
         * @return Builder
         */
        public Builder dinersCard(String dinersCard) {
            this.dinersCard = dinersCard;
            return this;
        }

        /**
         * Setter for employmentStatus.
         * @param  employmentStatus  String value for employmentStatus.
         * @return Builder
         */
        public Builder employmentStatus(String employmentStatus) {
            this.employmentStatus = employmentStatus;
            return this;
        }

        /**
         * Setter for employmentType.
         * @param  employmentType  String value for employmentType.
         * @return Builder
         */
        public Builder employmentType(String employmentType) {
            this.employmentType = employmentType;
            return this;
        }

        /**
         * Setter for enquiryType.
         * @param  enquiryType  String value for enquiryType.
         * @return Builder
         */
        public Builder enquiryType(String enquiryType) {
            this.enquiryType = enquiryType;
            return this;
        }

        /**
         * Setter for fraudScore.
         * @param  fraudScore  String value for fraudScore.
         * @return Builder
         */
        public Builder fraudScore(String fraudScore) {
            this.fraudScore = fraudScore;
            return this;
        }

        /**
         * Setter for grossIncome.
         * @param  grossIncome  String value for grossIncome.
         * @return Builder
         */
        public Builder grossIncome(String grossIncome) {
            this.grossIncome = grossIncome;
            return this;
        }

        /**
         * Setter for homeTelephoneNumber.
         * @param  homeTelephoneNumber  HomeTelephoneNumber value for homeTelephoneNumber.
         * @return Builder
         */
        public Builder homeTelephoneNumber(HomeTelephoneNumber homeTelephoneNumber) {
            this.homeTelephoneNumber = homeTelephoneNumber;
            return this;
        }

        /**
         * Setter for jointApplicant.
         * @param  jointApplicant  String value for jointApplicant.
         * @return Builder
         */
        public Builder jointApplicant(String jointApplicant) {
            this.jointApplicant = jointApplicant;
            return this;
        }

        /**
         * Setter for location.
         * @param  location  LocationDetail value for location.
         * @return Builder
         */
        public Builder location(LocationDetail location) {
            this.location = location;
            return this;
        }

        /**
         * Setter for locationIndicator.
         * @param  locationIndicator  String value for locationIndicator.
         * @return Builder
         */
        public Builder locationIndicator(String locationIndicator) {
            this.locationIndicator = locationIndicator;
            return this;
        }

        /**
         * Setter for maritalStatus.
         * @param  maritalStatus  String value for maritalStatus.
         * @return Builder
         */
        public Builder maritalStatus(String maritalStatus) {
            this.maritalStatus = maritalStatus;
            return this;
        }

        /**
         * Setter for matchDetails.
         * @param  matchDetails  MatchDetail value for matchDetails.
         * @return Builder
         */
        public Builder matchDetails(MatchDetail matchDetails) {
            this.matchDetails = matchDetails;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  InputNameDetail value for name.
         * @return Builder
         */
        public Builder name(InputNameDetail name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for noCReference.
         * @param  noCReference  String value for noCReference.
         * @return Builder
         */
        public Builder noCReference(String noCReference) {
            this.noCReference = noCReference;
            return this;
        }

        /**
         * Setter for numInconsistencies.
         * @param  numInconsistencies  String value for numInconsistencies.
         * @return Builder
         */
        public Builder numInconsistencies(String numInconsistencies) {
            this.numInconsistencies = numInconsistencies;
            return this;
        }

        /**
         * Setter for numberOfCards.
         * @param  numberOfCards  String value for numberOfCards.
         * @return Builder
         */
        public Builder numberOfCards(String numberOfCards) {
            this.numberOfCards = numberOfCards;
            return this;
        }

        /**
         * Setter for otherCard.
         * @param  otherCard  String value for otherCard.
         * @return Builder
         */
        public Builder otherCard(String otherCard) {
            this.otherCard = otherCard;
            return this;
        }

        /**
         * Setter for ownAccountID.
         * @param  ownAccountID  String value for ownAccountID.
         * @return Builder
         */
        public Builder ownAccountID(String ownAccountID) {
            this.ownAccountID = ownAccountID;
            return this;
        }

        /**
         * Setter for previousLocation.
         * @param  previousLocation  LocationDetail value for previousLocation.
         * @return Builder
         */
        public Builder previousLocation(LocationDetail previousLocation) {
            this.previousLocation = previousLocation;
            return this;
        }

        /**
         * Setter for scoreCard.
         * @param  scoreCard  String value for scoreCard.
         * @return Builder
         */
        public Builder scoreCard(String scoreCard) {
            this.scoreCard = scoreCard;
            return this;
        }

        /**
         * Setter for storeCard.
         * @param  storeCard  String value for storeCard.
         * @return Builder
         */
        public Builder storeCard(String storeCard) {
            this.storeCard = storeCard;
            return this;
        }

        /**
         * Setter for timeAtLocation.
         * @param  timeAtLocation  TimeAt value for timeAtLocation.
         * @return Builder
         */
        public Builder timeAtLocation(TimeAt timeAtLocation) {
            this.timeAtLocation = timeAtLocation;
            return this;
        }

        /**
         * Setter for timeAtPrevLocation.
         * @param  timeAtPrevLocation  TimeInEmployment value for timeAtPrevLocation.
         * @return Builder
         */
        public Builder timeAtPrevLocation(TimeInEmployment timeAtPrevLocation) {
            this.timeAtPrevLocation = timeAtPrevLocation;
            return this;
        }

        /**
         * Setter for timeInEmployment.
         * @param  timeInEmployment  TimeInEmploymentDetails value for timeInEmployment.
         * @return Builder
         */
        public Builder timeInEmployment(TimeInEmploymentDetails timeInEmployment) {
            this.timeInEmployment = timeInEmployment;
            return this;
        }

        /**
         * Setter for timeWithBank.
         * @param  timeWithBank  TimeInEmployment value for timeWithBank.
         * @return Builder
         */
        public Builder timeWithBank(TimeInEmployment timeWithBank) {
            this.timeWithBank = timeWithBank;
            return this;
        }

        /**
         * Setter for visaCard.
         * @param  visaCard  String value for visaCard.
         * @return Builder
         */
        public Builder visaCard(String visaCard) {
            this.visaCard = visaCard;
            return this;
        }

        /**
         * Setter for workTelephoneNum.
         * @param  workTelephoneNum  HomeTelephoneNumber value for workTelephoneNum.
         * @return Builder
         */
        public Builder workTelephoneNum(HomeTelephoneNumber workTelephoneNum) {
            this.workTelephoneNum = workTelephoneNum;
            return this;
        }

        /**
         * Builds a new {@link PreviousApplication} object using the set fields.
         * @return {@link PreviousApplication}
         */
        public PreviousApplication build() {
            return new PreviousApplication(aMEXCard, accessCard, accommodationType, accountNumber,
                    amount, applicantIndicator, applicationDate, applicationType, bankAccountNumber,
                    bankSortCode, chequeCard, companyType, currentAccount, dateOfBirth, debitCard,
                    dependants, dinersCard, employmentStatus, employmentType, enquiryType,
                    fraudScore, grossIncome, homeTelephoneNumber, jointApplicant, location,
                    locationIndicator, maritalStatus, matchDetails, name, noCReference,
                    numInconsistencies, numberOfCards, otherCard, ownAccountID, previousLocation,
                    scoreCard, storeCard, timeAtLocation, timeAtPrevLocation, timeInEmployment,
                    timeWithBank, visaCard, workTelephoneNum);
        }
    }
}
