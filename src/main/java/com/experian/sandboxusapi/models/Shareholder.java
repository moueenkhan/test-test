/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for Shareholder type.
 */
public class Shareholder {
    private String recordType;
    private String issuingCompany;
    private String currentPreviousFlag;
    private String effectiveDate;
    private String shareClassNo;
    private String shareholdingNo;
    private String shareholderNo;
    private SharehldrsDetails shareholderDetails;
    private String nOCRef;
    private String latestUpdate;

    /**
     * Default constructor.
     */
    public Shareholder() {
    }

    /**
     * Initialization constructor.
     * @param  recordType  String value for recordType.
     * @param  issuingCompany  String value for issuingCompany.
     * @param  currentPreviousFlag  String value for currentPreviousFlag.
     * @param  effectiveDate  String value for effectiveDate.
     * @param  shareClassNo  String value for shareClassNo.
     * @param  shareholdingNo  String value for shareholdingNo.
     * @param  shareholderNo  String value for shareholderNo.
     * @param  shareholderDetails  SharehldrsDetails value for shareholderDetails.
     * @param  nOCRef  String value for nOCRef.
     * @param  latestUpdate  String value for latestUpdate.
     */
    public Shareholder(
            String recordType,
            String issuingCompany,
            String currentPreviousFlag,
            String effectiveDate,
            String shareClassNo,
            String shareholdingNo,
            String shareholderNo,
            SharehldrsDetails shareholderDetails,
            String nOCRef,
            String latestUpdate) {
        this.recordType = recordType;
        this.issuingCompany = issuingCompany;
        this.currentPreviousFlag = currentPreviousFlag;
        this.effectiveDate = effectiveDate;
        this.shareClassNo = shareClassNo;
        this.shareholdingNo = shareholdingNo;
        this.shareholderNo = shareholderNo;
        this.shareholderDetails = shareholderDetails;
        this.nOCRef = nOCRef;
        this.latestUpdate = latestUpdate;
    }

    /**
     * Getter for RecordType.
     * Indicator showing the type of record within share information for the limited company -
     * Shareholder (U)
     * @return Returns the String
     */
    @JsonGetter("RecordType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getRecordType() {
        return recordType;
    }

    /**
     * Setter for RecordType.
     * Indicator showing the type of record within share information for the limited company -
     * Shareholder (U)
     * @param recordType Value for String
     */
    @JsonSetter("RecordType")
    public void setRecordType(String recordType) {
        this.recordType = recordType;
    }

    /**
     * Getter for IssuingCompany.
     * Registration Number of company issuing the shares
     * @return Returns the String
     */
    @JsonGetter("IssuingCompany")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getIssuingCompany() {
        return issuingCompany;
    }

    /**
     * Setter for IssuingCompany.
     * Registration Number of company issuing the shares
     * @param issuingCompany Value for String
     */
    @JsonSetter("IssuingCompany")
    public void setIssuingCompany(String issuingCompany) {
        this.issuingCompany = issuingCompany;
    }

    /**
     * Getter for CurrentPreviousFlag.
     * Indicator showing whether this is a current (C) or previous (P) shareholding
     * @return Returns the String
     */
    @JsonGetter("CurrentPreviousFlag")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCurrentPreviousFlag() {
        return currentPreviousFlag;
    }

    /**
     * Setter for CurrentPreviousFlag.
     * Indicator showing whether this is a current (C) or previous (P) shareholding
     * @param currentPreviousFlag Value for String
     */
    @JsonSetter("CurrentPreviousFlag")
    public void setCurrentPreviousFlag(String currentPreviousFlag) {
        this.currentPreviousFlag = currentPreviousFlag;
    }

    /**
     * Getter for EffectiveDate.
     * Effective date (yyyy-mm-dd)
     * @return Returns the String
     */
    @JsonGetter("EffectiveDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getEffectiveDate() {
        return effectiveDate;
    }

    /**
     * Setter for EffectiveDate.
     * Effective date (yyyy-mm-dd)
     * @param effectiveDate Value for String
     */
    @JsonSetter("EffectiveDate")
    public void setEffectiveDate(String effectiveDate) {
        this.effectiveDate = effectiveDate;
    }

    /**
     * Getter for ShareClassNo.
     * Sequential number within the limited company to identify the Share Class
     * @return Returns the String
     */
    @JsonGetter("ShareClassNo")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getShareClassNo() {
        return shareClassNo;
    }

    /**
     * Setter for ShareClassNo.
     * Sequential number within the limited company to identify the Share Class
     * @param shareClassNo Value for String
     */
    @JsonSetter("ShareClassNo")
    public void setShareClassNo(String shareClassNo) {
        this.shareClassNo = shareClassNo;
    }

    /**
     * Getter for ShareholdingNo.
     * Sequential number within the limited company to identify the Shareholding of the associated
     * Shareholding
     * @return Returns the String
     */
    @JsonGetter("ShareholdingNo")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getShareholdingNo() {
        return shareholdingNo;
    }

    /**
     * Setter for ShareholdingNo.
     * Sequential number within the limited company to identify the Shareholding of the associated
     * Shareholding
     * @param shareholdingNo Value for String
     */
    @JsonSetter("ShareholdingNo")
    public void setShareholdingNo(String shareholdingNo) {
        this.shareholdingNo = shareholdingNo;
    }

    /**
     * Getter for ShareholderNo.
     * Sequential number within the limited company to identify the Shareholder of the associated
     * Share Class
     * @return Returns the String
     */
    @JsonGetter("ShareholderNo")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getShareholderNo() {
        return shareholderNo;
    }

    /**
     * Setter for ShareholderNo.
     * Sequential number within the limited company to identify the Shareholder of the associated
     * Share Class
     * @param shareholderNo Value for String
     */
    @JsonSetter("ShareholderNo")
    public void setShareholderNo(String shareholderNo) {
        this.shareholderNo = shareholderNo;
    }

    /**
     * Getter for ShareholderDetails.
     * @return Returns the SharehldrsDetails
     */
    @JsonGetter("ShareholderDetails")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public SharehldrsDetails getShareholderDetails() {
        return shareholderDetails;
    }

    /**
     * Setter for ShareholderDetails.
     * @param shareholderDetails Value for SharehldrsDetails
     */
    @JsonSetter("ShareholderDetails")
    public void setShareholderDetails(SharehldrsDetails shareholderDetails) {
        this.shareholderDetails = shareholderDetails;
    }

    /**
     * Getter for NOCRef.
     * Notice of Correction reference relating to the Shareholder
     * @return Returns the String
     */
    @JsonGetter("NOCRef")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getNOCRef() {
        return nOCRef;
    }

    /**
     * Setter for NOCRef.
     * Notice of Correction reference relating to the Shareholder
     * @param nOCRef Value for String
     */
    @JsonSetter("NOCRef")
    public void setNOCRef(String nOCRef) {
        this.nOCRef = nOCRef;
    }

    /**
     * Getter for LatestUpdate.
     * Date that the limited company data for this block was last updated (yyyy-mm-dd)
     * @return Returns the String
     */
    @JsonGetter("LatestUpdate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLatestUpdate() {
        return latestUpdate;
    }

    /**
     * Setter for LatestUpdate.
     * Date that the limited company data for this block was last updated (yyyy-mm-dd)
     * @param latestUpdate Value for String
     */
    @JsonSetter("LatestUpdate")
    public void setLatestUpdate(String latestUpdate) {
        this.latestUpdate = latestUpdate;
    }

    /**
     * Converts this Shareholder into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Shareholder [" + "recordType=" + recordType + ", issuingCompany=" + issuingCompany
                + ", currentPreviousFlag=" + currentPreviousFlag + ", effectiveDate="
                + effectiveDate + ", shareClassNo=" + shareClassNo + ", shareholdingNo="
                + shareholdingNo + ", shareholderNo=" + shareholderNo + ", shareholderDetails="
                + shareholderDetails + ", nOCRef=" + nOCRef + ", latestUpdate=" + latestUpdate
                + "]";
    }

    /**
     * Builds a new {@link Shareholder.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Shareholder.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .recordType(getRecordType())
                .issuingCompany(getIssuingCompany())
                .currentPreviousFlag(getCurrentPreviousFlag())
                .effectiveDate(getEffectiveDate())
                .shareClassNo(getShareClassNo())
                .shareholdingNo(getShareholdingNo())
                .shareholderNo(getShareholderNo())
                .shareholderDetails(getShareholderDetails())
                .nOCRef(getNOCRef())
                .latestUpdate(getLatestUpdate());
        return builder;
    }

    /**
     * Class to build instances of {@link Shareholder}.
     */
    public static class Builder {
        private String recordType;
        private String issuingCompany;
        private String currentPreviousFlag;
        private String effectiveDate;
        private String shareClassNo;
        private String shareholdingNo;
        private String shareholderNo;
        private SharehldrsDetails shareholderDetails;
        private String nOCRef;
        private String latestUpdate;



        /**
         * Setter for recordType.
         * @param  recordType  String value for recordType.
         * @return Builder
         */
        public Builder recordType(String recordType) {
            this.recordType = recordType;
            return this;
        }

        /**
         * Setter for issuingCompany.
         * @param  issuingCompany  String value for issuingCompany.
         * @return Builder
         */
        public Builder issuingCompany(String issuingCompany) {
            this.issuingCompany = issuingCompany;
            return this;
        }

        /**
         * Setter for currentPreviousFlag.
         * @param  currentPreviousFlag  String value for currentPreviousFlag.
         * @return Builder
         */
        public Builder currentPreviousFlag(String currentPreviousFlag) {
            this.currentPreviousFlag = currentPreviousFlag;
            return this;
        }

        /**
         * Setter for effectiveDate.
         * @param  effectiveDate  String value for effectiveDate.
         * @return Builder
         */
        public Builder effectiveDate(String effectiveDate) {
            this.effectiveDate = effectiveDate;
            return this;
        }

        /**
         * Setter for shareClassNo.
         * @param  shareClassNo  String value for shareClassNo.
         * @return Builder
         */
        public Builder shareClassNo(String shareClassNo) {
            this.shareClassNo = shareClassNo;
            return this;
        }

        /**
         * Setter for shareholdingNo.
         * @param  shareholdingNo  String value for shareholdingNo.
         * @return Builder
         */
        public Builder shareholdingNo(String shareholdingNo) {
            this.shareholdingNo = shareholdingNo;
            return this;
        }

        /**
         * Setter for shareholderNo.
         * @param  shareholderNo  String value for shareholderNo.
         * @return Builder
         */
        public Builder shareholderNo(String shareholderNo) {
            this.shareholderNo = shareholderNo;
            return this;
        }

        /**
         * Setter for shareholderDetails.
         * @param  shareholderDetails  SharehldrsDetails value for shareholderDetails.
         * @return Builder
         */
        public Builder shareholderDetails(SharehldrsDetails shareholderDetails) {
            this.shareholderDetails = shareholderDetails;
            return this;
        }

        /**
         * Setter for nOCRef.
         * @param  nOCRef  String value for nOCRef.
         * @return Builder
         */
        public Builder nOCRef(String nOCRef) {
            this.nOCRef = nOCRef;
            return this;
        }

        /**
         * Setter for latestUpdate.
         * @param  latestUpdate  String value for latestUpdate.
         * @return Builder
         */
        public Builder latestUpdate(String latestUpdate) {
            this.latestUpdate = latestUpdate;
            return this;
        }

        /**
         * Builds a new {@link Shareholder} object using the set fields.
         * @return {@link Shareholder}
         */
        public Shareholder build() {
            return new Shareholder(recordType, issuingCompany, currentPreviousFlag, effectiveDate,
                    shareClassNo, shareholdingNo, shareholderNo, shareholderDetails, nOCRef,
                    latestUpdate);
        }
    }
}
