/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for Financials type.
 */
public class Financials {
    private List<Accounts> accounts;
    private List<Cashflow> cashflow;
    private List<Ratios> ratios;
    private PercentageChange percentageChange;
    private Quartiles quartiles;

    /**
     * Default constructor.
     */
    public Financials() {
    }

    /**
     * Initialization constructor.
     * @param  accounts  List of Accounts value for accounts.
     * @param  cashflow  List of Cashflow value for cashflow.
     * @param  ratios  List of Ratios value for ratios.
     * @param  percentageChange  PercentageChange value for percentageChange.
     * @param  quartiles  Quartiles value for quartiles.
     */
    public Financials(
            List<Accounts> accounts,
            List<Cashflow> cashflow,
            List<Ratios> ratios,
            PercentageChange percentageChange,
            Quartiles quartiles) {
        this.accounts = accounts;
        this.cashflow = cashflow;
        this.ratios = ratios;
        this.percentageChange = percentageChange;
        this.quartiles = quartiles;
    }

    /**
     * Getter for Accounts.
     * @return Returns the List of Accounts
     */
    @JsonGetter("Accounts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Accounts> getAccounts() {
        return accounts;
    }

    /**
     * Setter for Accounts.
     * @param accounts Value for List of Accounts
     */
    @JsonSetter("Accounts")
    public void setAccounts(List<Accounts> accounts) {
        this.accounts = accounts;
    }

    /**
     * Getter for Cashflow.
     * @return Returns the List of Cashflow
     */
    @JsonGetter("Cashflow")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Cashflow> getCashflow() {
        return cashflow;
    }

    /**
     * Setter for Cashflow.
     * @param cashflow Value for List of Cashflow
     */
    @JsonSetter("Cashflow")
    public void setCashflow(List<Cashflow> cashflow) {
        this.cashflow = cashflow;
    }

    /**
     * Getter for Ratios.
     * @return Returns the List of Ratios
     */
    @JsonGetter("Ratios")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Ratios> getRatios() {
        return ratios;
    }

    /**
     * Setter for Ratios.
     * @param ratios Value for List of Ratios
     */
    @JsonSetter("Ratios")
    public void setRatios(List<Ratios> ratios) {
        this.ratios = ratios;
    }

    /**
     * Getter for PercentageChange.
     * @return Returns the PercentageChange
     */
    @JsonGetter("PercentageChange")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public PercentageChange getPercentageChange() {
        return percentageChange;
    }

    /**
     * Setter for PercentageChange.
     * @param percentageChange Value for PercentageChange
     */
    @JsonSetter("PercentageChange")
    public void setPercentageChange(PercentageChange percentageChange) {
        this.percentageChange = percentageChange;
    }

    /**
     * Getter for Quartiles.
     * @return Returns the Quartiles
     */
    @JsonGetter("Quartiles")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Quartiles getQuartiles() {
        return quartiles;
    }

    /**
     * Setter for Quartiles.
     * @param quartiles Value for Quartiles
     */
    @JsonSetter("Quartiles")
    public void setQuartiles(Quartiles quartiles) {
        this.quartiles = quartiles;
    }

    /**
     * Converts this Financials into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Financials [" + "accounts=" + accounts + ", cashflow=" + cashflow + ", ratios="
                + ratios + ", percentageChange=" + percentageChange + ", quartiles=" + quartiles
                + "]";
    }

    /**
     * Builds a new {@link Financials.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Financials.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .accounts(getAccounts())
                .cashflow(getCashflow())
                .ratios(getRatios())
                .percentageChange(getPercentageChange())
                .quartiles(getQuartiles());
        return builder;
    }

    /**
     * Class to build instances of {@link Financials}.
     */
    public static class Builder {
        private List<Accounts> accounts;
        private List<Cashflow> cashflow;
        private List<Ratios> ratios;
        private PercentageChange percentageChange;
        private Quartiles quartiles;



        /**
         * Setter for accounts.
         * @param  accounts  List of Accounts value for accounts.
         * @return Builder
         */
        public Builder accounts(List<Accounts> accounts) {
            this.accounts = accounts;
            return this;
        }

        /**
         * Setter for cashflow.
         * @param  cashflow  List of Cashflow value for cashflow.
         * @return Builder
         */
        public Builder cashflow(List<Cashflow> cashflow) {
            this.cashflow = cashflow;
            return this;
        }

        /**
         * Setter for ratios.
         * @param  ratios  List of Ratios value for ratios.
         * @return Builder
         */
        public Builder ratios(List<Ratios> ratios) {
            this.ratios = ratios;
            return this;
        }

        /**
         * Setter for percentageChange.
         * @param  percentageChange  PercentageChange value for percentageChange.
         * @return Builder
         */
        public Builder percentageChange(PercentageChange percentageChange) {
            this.percentageChange = percentageChange;
            return this;
        }

        /**
         * Setter for quartiles.
         * @param  quartiles  Quartiles value for quartiles.
         * @return Builder
         */
        public Builder quartiles(Quartiles quartiles) {
            this.quartiles = quartiles;
            return this;
        }

        /**
         * Builds a new {@link Financials} object using the set fields.
         * @return {@link Financials}
         */
        public Financials build() {
            return new Financials(accounts, cashflow, ratios, percentageChange, quartiles);
        }
    }
}
