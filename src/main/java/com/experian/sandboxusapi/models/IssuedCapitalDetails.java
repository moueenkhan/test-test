/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for IssuedCapitalDetails type.
 */
public class IssuedCapitalDetails {
    private Double issuedCapital;
    private Double ordinaryShares;
    private Double preferenceShares;
    private Double other;

    /**
     * Default constructor.
     */
    public IssuedCapitalDetails() {
    }

    /**
     * Initialization constructor.
     * @param  issuedCapital  Double value for issuedCapital.
     * @param  ordinaryShares  Double value for ordinaryShares.
     * @param  preferenceShares  Double value for preferenceShares.
     * @param  other  Double value for other.
     */
    public IssuedCapitalDetails(
            Double issuedCapital,
            Double ordinaryShares,
            Double preferenceShares,
            Double other) {
        this.issuedCapital = issuedCapital;
        this.ordinaryShares = ordinaryShares;
        this.preferenceShares = preferenceShares;
        this.other = other;
    }

    /**
     * Getter for IssuedCapital.
     * Value for Balance Sheet - Issued Capital Details - Issued Capital for these accounts
     * @return Returns the Double
     */
    @JsonGetter("IssuedCapital")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getIssuedCapital() {
        return issuedCapital;
    }

    /**
     * Setter for IssuedCapital.
     * Value for Balance Sheet - Issued Capital Details - Issued Capital for these accounts
     * @param issuedCapital Value for Double
     */
    @JsonSetter("IssuedCapital")
    public void setIssuedCapital(Double issuedCapital) {
        this.issuedCapital = issuedCapital;
    }

    /**
     * Getter for OrdinaryShares.
     * Value for Balance Sheet - Issued Capital Details - Preference Shares for these accounts
     * (applicable to UK GAAP only)
     * @return Returns the Double
     */
    @JsonGetter("OrdinaryShares")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getOrdinaryShares() {
        return ordinaryShares;
    }

    /**
     * Setter for OrdinaryShares.
     * Value for Balance Sheet - Issued Capital Details - Preference Shares for these accounts
     * (applicable to UK GAAP only)
     * @param ordinaryShares Value for Double
     */
    @JsonSetter("OrdinaryShares")
    public void setOrdinaryShares(Double ordinaryShares) {
        this.ordinaryShares = ordinaryShares;
    }

    /**
     * Getter for PreferenceShares.
     * Value for Balance Sheet - Issued Capital Details - Preference Shares for these accounts
     * (applicable to UK GAAP only)
     * @return Returns the Double
     */
    @JsonGetter("PreferenceShares")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPreferenceShares() {
        return preferenceShares;
    }

    /**
     * Setter for PreferenceShares.
     * Value for Balance Sheet - Issued Capital Details - Preference Shares for these accounts
     * (applicable to UK GAAP only)
     * @param preferenceShares Value for Double
     */
    @JsonSetter("PreferenceShares")
    public void setPreferenceShares(Double preferenceShares) {
        this.preferenceShares = preferenceShares;
    }

    /**
     * Getter for Other.
     * Value for Balance Sheet - Issued Capital Details - Other for these accounts
     * @return Returns the Double
     */
    @JsonGetter("Other")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getOther() {
        return other;
    }

    /**
     * Setter for Other.
     * Value for Balance Sheet - Issued Capital Details - Other for these accounts
     * @param other Value for Double
     */
    @JsonSetter("Other")
    public void setOther(Double other) {
        this.other = other;
    }

    /**
     * Converts this IssuedCapitalDetails into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "IssuedCapitalDetails [" + "issuedCapital=" + issuedCapital + ", ordinaryShares="
                + ordinaryShares + ", preferenceShares=" + preferenceShares + ", other=" + other
                + "]";
    }

    /**
     * Builds a new {@link IssuedCapitalDetails.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link IssuedCapitalDetails.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .issuedCapital(getIssuedCapital())
                .ordinaryShares(getOrdinaryShares())
                .preferenceShares(getPreferenceShares())
                .other(getOther());
        return builder;
    }

    /**
     * Class to build instances of {@link IssuedCapitalDetails}.
     */
    public static class Builder {
        private Double issuedCapital;
        private Double ordinaryShares;
        private Double preferenceShares;
        private Double other;



        /**
         * Setter for issuedCapital.
         * @param  issuedCapital  Double value for issuedCapital.
         * @return Builder
         */
        public Builder issuedCapital(Double issuedCapital) {
            this.issuedCapital = issuedCapital;
            return this;
        }

        /**
         * Setter for ordinaryShares.
         * @param  ordinaryShares  Double value for ordinaryShares.
         * @return Builder
         */
        public Builder ordinaryShares(Double ordinaryShares) {
            this.ordinaryShares = ordinaryShares;
            return this;
        }

        /**
         * Setter for preferenceShares.
         * @param  preferenceShares  Double value for preferenceShares.
         * @return Builder
         */
        public Builder preferenceShares(Double preferenceShares) {
            this.preferenceShares = preferenceShares;
            return this;
        }

        /**
         * Setter for other.
         * @param  other  Double value for other.
         * @return Builder
         */
        public Builder other(Double other) {
            this.other = other;
            return this;
        }

        /**
         * Builds a new {@link IssuedCapitalDetails} object using the set fields.
         * @return {@link IssuedCapitalDetails}
         */
        public IssuedCapitalDetails build() {
            return new IssuedCapitalDetails(issuedCapital, ordinaryShares, preferenceShares, other);
        }
    }
}
