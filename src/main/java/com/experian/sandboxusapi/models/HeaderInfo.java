/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for HeaderInfo type.
 */
public class HeaderInfo {
    private String recordType;
    private String issuingCompany;
    private String currentPreviousFlag;
    private String effectiveDate;
    private String bulkList;
    private String issuedCapital;
    private String legalStatus;
    private String lastList;
    private String documentType;
    private String suppressedInfo;
    private String latestCurrent;
    private String latestPrevious;
    private String latestUpdate;
    private String dateLoaded;

    /**
     * Default constructor.
     */
    public HeaderInfo() {
    }

    /**
     * Initialization constructor.
     * @param  recordType  String value for recordType.
     * @param  issuingCompany  String value for issuingCompany.
     * @param  currentPreviousFlag  String value for currentPreviousFlag.
     * @param  effectiveDate  String value for effectiveDate.
     * @param  bulkList  String value for bulkList.
     * @param  issuedCapital  String value for issuedCapital.
     * @param  legalStatus  String value for legalStatus.
     * @param  lastList  String value for lastList.
     * @param  documentType  String value for documentType.
     * @param  suppressedInfo  String value for suppressedInfo.
     * @param  latestCurrent  String value for latestCurrent.
     * @param  latestPrevious  String value for latestPrevious.
     * @param  latestUpdate  String value for latestUpdate.
     * @param  dateLoaded  String value for dateLoaded.
     */
    public HeaderInfo(
            String recordType,
            String issuingCompany,
            String currentPreviousFlag,
            String effectiveDate,
            String bulkList,
            String issuedCapital,
            String legalStatus,
            String lastList,
            String documentType,
            String suppressedInfo,
            String latestCurrent,
            String latestPrevious,
            String latestUpdate,
            String dateLoaded) {
        this.recordType = recordType;
        this.issuingCompany = issuingCompany;
        this.currentPreviousFlag = currentPreviousFlag;
        this.effectiveDate = effectiveDate;
        this.bulkList = bulkList;
        this.issuedCapital = issuedCapital;
        this.legalStatus = legalStatus;
        this.lastList = lastList;
        this.documentType = documentType;
        this.suppressedInfo = suppressedInfo;
        this.latestCurrent = latestCurrent;
        this.latestPrevious = latestPrevious;
        this.latestUpdate = latestUpdate;
        this.dateLoaded = dateLoaded;
    }

    /**
     * Getter for RecordType.
     * Indicator showing the type of record within share information for the limited company -
     * Header (H)
     * @return Returns the String
     */
    @JsonGetter("RecordType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getRecordType() {
        return recordType;
    }

    /**
     * Setter for RecordType.
     * Indicator showing the type of record within share information for the limited company -
     * Header (H)
     * @param recordType Value for String
     */
    @JsonSetter("RecordType")
    public void setRecordType(String recordType) {
        this.recordType = recordType;
    }

    /**
     * Getter for IssuingCompany.
     * Registration Number of company issuing the shares
     * @return Returns the String
     */
    @JsonGetter("IssuingCompany")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getIssuingCompany() {
        return issuingCompany;
    }

    /**
     * Setter for IssuingCompany.
     * Registration Number of company issuing the shares
     * @param issuingCompany Value for String
     */
    @JsonSetter("IssuingCompany")
    public void setIssuingCompany(String issuingCompany) {
        this.issuingCompany = issuingCompany;
    }

    /**
     * Getter for CurrentPreviousFlag.
     * Indicator showing whether this is a current (C) or previous (P) shareholding
     * @return Returns the String
     */
    @JsonGetter("CurrentPreviousFlag")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCurrentPreviousFlag() {
        return currentPreviousFlag;
    }

    /**
     * Setter for CurrentPreviousFlag.
     * Indicator showing whether this is a current (C) or previous (P) shareholding
     * @param currentPreviousFlag Value for String
     */
    @JsonSetter("CurrentPreviousFlag")
    public void setCurrentPreviousFlag(String currentPreviousFlag) {
        this.currentPreviousFlag = currentPreviousFlag;
    }

    /**
     * Getter for EffectiveDate.
     * Date of annual returns (yyyy-mm-dd)
     * @return Returns the String
     */
    @JsonGetter("EffectiveDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getEffectiveDate() {
        return effectiveDate;
    }

    /**
     * Setter for EffectiveDate.
     * Date of annual returns (yyyy-mm-dd)
     * @param effectiveDate Value for String
     */
    @JsonSetter("EffectiveDate")
    public void setEffectiveDate(String effectiveDate) {
        this.effectiveDate = effectiveDate;
    }

    /**
     * Getter for BulkList.
     * Indicator showing whether this is a Bulk List
     * @return Returns the String
     */
    @JsonGetter("BulkList")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBulkList() {
        return bulkList;
    }

    /**
     * Setter for BulkList.
     * Indicator showing whether this is a Bulk List
     * @param bulkList Value for String
     */
    @JsonSetter("BulkList")
    public void setBulkList(String bulkList) {
        this.bulkList = bulkList;
    }

    /**
     * Getter for IssuedCapital.
     * Indicator showing whether there is data available in addition to the Header - 0 = Only header
     * available, 1 = More data available
     * @return Returns the String
     */
    @JsonGetter("IssuedCapital")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getIssuedCapital() {
        return issuedCapital;
    }

    /**
     * Setter for IssuedCapital.
     * Indicator showing whether there is data available in addition to the Header - 0 = Only header
     * available, 1 = More data available
     * @param issuedCapital Value for String
     */
    @JsonSetter("IssuedCapital")
    public void setIssuedCapital(String issuedCapital) {
        this.issuedCapital = issuedCapital;
    }

    /**
     * Getter for LegalStatus.
     * Indicator summarising the legal status of the limited company - 1 = Limited Liability
     * Partnership; 2 = Limited by Guarantee; default = Limited by Share
     * @return Returns the String
     */
    @JsonGetter("LegalStatus")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLegalStatus() {
        return legalStatus;
    }

    /**
     * Setter for LegalStatus.
     * Indicator summarising the legal status of the limited company - 1 = Limited Liability
     * Partnership; 2 = Limited by Guarantee; default = Limited by Share
     * @param legalStatus Value for String
     */
    @JsonSetter("LegalStatus")
    public void setLegalStatus(String legalStatus) {
        this.legalStatus = legalStatus;
    }

    /**
     * Getter for LastList.
     * Last Confirmation Statement Date that includes shareholder details (yyyy-mm-dd)
     * @return Returns the String
     */
    @JsonGetter("LastList")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLastList() {
        return lastList;
    }

    /**
     * Setter for LastList.
     * Last Confirmation Statement Date that includes shareholder details (yyyy-mm-dd)
     * @param lastList Value for String
     */
    @JsonSetter("LastList")
    public void setLastList(String lastList) {
        this.lastList = lastList;
    }

    /**
     * Getter for DocumentType.
     * Indicator showing the document type for the shareholder data source - R = Confirmation
     * Statement (Annual Return) 8 = 88(2); A = Accounts; space = unknown
     * @return Returns the String
     */
    @JsonGetter("DocumentType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDocumentType() {
        return documentType;
    }

    /**
     * Setter for DocumentType.
     * Indicator showing the document type for the shareholder data source - R = Confirmation
     * Statement (Annual Return) 8 = 88(2); A = Accounts; space = unknown
     * @param documentType Value for String
     */
    @JsonSetter("DocumentType")
    public void setDocumentType(String documentType) {
        this.documentType = documentType;
    }

    /**
     * Getter for SuppressedInfo.
     * Indicator showing whether this data is suppressed from client applications - Y = Suppress
     * from client applications
     * @return Returns the String
     */
    @JsonGetter("SuppressedInfo")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSuppressedInfo() {
        return suppressedInfo;
    }

    /**
     * Setter for SuppressedInfo.
     * Indicator showing whether this data is suppressed from client applications - Y = Suppress
     * from client applications
     * @param suppressedInfo Value for String
     */
    @JsonSetter("SuppressedInfo")
    public void setSuppressedInfo(String suppressedInfo) {
        this.suppressedInfo = suppressedInfo;
    }

    /**
     * Getter for LatestCurrent.
     * Filing date for the limited company accounts previous to the latest accounts (yyyy-mm-dd)
     * @return Returns the String
     */
    @JsonGetter("LatestCurrent")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLatestCurrent() {
        return latestCurrent;
    }

    /**
     * Setter for LatestCurrent.
     * Filing date for the limited company accounts previous to the latest accounts (yyyy-mm-dd)
     * @param latestCurrent Value for String
     */
    @JsonSetter("LatestCurrent")
    public void setLatestCurrent(String latestCurrent) {
        this.latestCurrent = latestCurrent;
    }

    /**
     * Getter for LatestPrevious.
     * Filing date for the limited company accounts previous to the latest accounts (yyyy-mm-dd)
     * @return Returns the String
     */
    @JsonGetter("LatestPrevious")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLatestPrevious() {
        return latestPrevious;
    }

    /**
     * Setter for LatestPrevious.
     * Filing date for the limited company accounts previous to the latest accounts (yyyy-mm-dd)
     * @param latestPrevious Value for String
     */
    @JsonSetter("LatestPrevious")
    public void setLatestPrevious(String latestPrevious) {
        this.latestPrevious = latestPrevious;
    }

    /**
     * Getter for LatestUpdate.
     * Date that the limited company data for this block was last updated (yyyy-mm-dd)
     * @return Returns the String
     */
    @JsonGetter("LatestUpdate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLatestUpdate() {
        return latestUpdate;
    }

    /**
     * Setter for LatestUpdate.
     * Date that the limited company data for this block was last updated (yyyy-mm-dd)
     * @param latestUpdate Value for String
     */
    @JsonSetter("LatestUpdate")
    public void setLatestUpdate(String latestUpdate) {
        this.latestUpdate = latestUpdate;
    }

    /**
     * Getter for DateLoaded.
     * Date that the limited company latest accounts were loaded (yyyy-mm-dd)
     * @return Returns the String
     */
    @JsonGetter("DateLoaded")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDateLoaded() {
        return dateLoaded;
    }

    /**
     * Setter for DateLoaded.
     * Date that the limited company latest accounts were loaded (yyyy-mm-dd)
     * @param dateLoaded Value for String
     */
    @JsonSetter("DateLoaded")
    public void setDateLoaded(String dateLoaded) {
        this.dateLoaded = dateLoaded;
    }

    /**
     * Converts this HeaderInfo into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "HeaderInfo [" + "recordType=" + recordType + ", issuingCompany=" + issuingCompany
                + ", currentPreviousFlag=" + currentPreviousFlag + ", effectiveDate="
                + effectiveDate + ", bulkList=" + bulkList + ", issuedCapital=" + issuedCapital
                + ", legalStatus=" + legalStatus + ", lastList=" + lastList + ", documentType="
                + documentType + ", suppressedInfo=" + suppressedInfo + ", latestCurrent="
                + latestCurrent + ", latestPrevious=" + latestPrevious + ", latestUpdate="
                + latestUpdate + ", dateLoaded=" + dateLoaded + "]";
    }

    /**
     * Builds a new {@link HeaderInfo.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link HeaderInfo.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .recordType(getRecordType())
                .issuingCompany(getIssuingCompany())
                .currentPreviousFlag(getCurrentPreviousFlag())
                .effectiveDate(getEffectiveDate())
                .bulkList(getBulkList())
                .issuedCapital(getIssuedCapital())
                .legalStatus(getLegalStatus())
                .lastList(getLastList())
                .documentType(getDocumentType())
                .suppressedInfo(getSuppressedInfo())
                .latestCurrent(getLatestCurrent())
                .latestPrevious(getLatestPrevious())
                .latestUpdate(getLatestUpdate())
                .dateLoaded(getDateLoaded());
        return builder;
    }

    /**
     * Class to build instances of {@link HeaderInfo}.
     */
    public static class Builder {
        private String recordType;
        private String issuingCompany;
        private String currentPreviousFlag;
        private String effectiveDate;
        private String bulkList;
        private String issuedCapital;
        private String legalStatus;
        private String lastList;
        private String documentType;
        private String suppressedInfo;
        private String latestCurrent;
        private String latestPrevious;
        private String latestUpdate;
        private String dateLoaded;



        /**
         * Setter for recordType.
         * @param  recordType  String value for recordType.
         * @return Builder
         */
        public Builder recordType(String recordType) {
            this.recordType = recordType;
            return this;
        }

        /**
         * Setter for issuingCompany.
         * @param  issuingCompany  String value for issuingCompany.
         * @return Builder
         */
        public Builder issuingCompany(String issuingCompany) {
            this.issuingCompany = issuingCompany;
            return this;
        }

        /**
         * Setter for currentPreviousFlag.
         * @param  currentPreviousFlag  String value for currentPreviousFlag.
         * @return Builder
         */
        public Builder currentPreviousFlag(String currentPreviousFlag) {
            this.currentPreviousFlag = currentPreviousFlag;
            return this;
        }

        /**
         * Setter for effectiveDate.
         * @param  effectiveDate  String value for effectiveDate.
         * @return Builder
         */
        public Builder effectiveDate(String effectiveDate) {
            this.effectiveDate = effectiveDate;
            return this;
        }

        /**
         * Setter for bulkList.
         * @param  bulkList  String value for bulkList.
         * @return Builder
         */
        public Builder bulkList(String bulkList) {
            this.bulkList = bulkList;
            return this;
        }

        /**
         * Setter for issuedCapital.
         * @param  issuedCapital  String value for issuedCapital.
         * @return Builder
         */
        public Builder issuedCapital(String issuedCapital) {
            this.issuedCapital = issuedCapital;
            return this;
        }

        /**
         * Setter for legalStatus.
         * @param  legalStatus  String value for legalStatus.
         * @return Builder
         */
        public Builder legalStatus(String legalStatus) {
            this.legalStatus = legalStatus;
            return this;
        }

        /**
         * Setter for lastList.
         * @param  lastList  String value for lastList.
         * @return Builder
         */
        public Builder lastList(String lastList) {
            this.lastList = lastList;
            return this;
        }

        /**
         * Setter for documentType.
         * @param  documentType  String value for documentType.
         * @return Builder
         */
        public Builder documentType(String documentType) {
            this.documentType = documentType;
            return this;
        }

        /**
         * Setter for suppressedInfo.
         * @param  suppressedInfo  String value for suppressedInfo.
         * @return Builder
         */
        public Builder suppressedInfo(String suppressedInfo) {
            this.suppressedInfo = suppressedInfo;
            return this;
        }

        /**
         * Setter for latestCurrent.
         * @param  latestCurrent  String value for latestCurrent.
         * @return Builder
         */
        public Builder latestCurrent(String latestCurrent) {
            this.latestCurrent = latestCurrent;
            return this;
        }

        /**
         * Setter for latestPrevious.
         * @param  latestPrevious  String value for latestPrevious.
         * @return Builder
         */
        public Builder latestPrevious(String latestPrevious) {
            this.latestPrevious = latestPrevious;
            return this;
        }

        /**
         * Setter for latestUpdate.
         * @param  latestUpdate  String value for latestUpdate.
         * @return Builder
         */
        public Builder latestUpdate(String latestUpdate) {
            this.latestUpdate = latestUpdate;
            return this;
        }

        /**
         * Setter for dateLoaded.
         * @param  dateLoaded  String value for dateLoaded.
         * @return Builder
         */
        public Builder dateLoaded(String dateLoaded) {
            this.dateLoaded = dateLoaded;
            return this;
        }

        /**
         * Builds a new {@link HeaderInfo} object using the set fields.
         * @return {@link HeaderInfo}
         */
        public HeaderInfo build() {
            return new HeaderInfo(recordType, issuingCompany, currentPreviousFlag, effectiveDate,
                    bulkList, issuedCapital, legalStatus, lastList, documentType, suppressedInfo,
                    latestCurrent, latestPrevious, latestUpdate, dateLoaded);
        }
    }
}
