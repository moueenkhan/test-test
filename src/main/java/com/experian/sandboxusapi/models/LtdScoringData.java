/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for LtdScoringData type.
 */
public class LtdScoringData {
    private Integer accountingPeriod;
    private Double acidTest;
    private Integer ageMostRecentCCJ;
    private String auditType;
    private String auditorsQualifications;
    private Integer baseTrendShareholdersFunds;
    private Double borrowingRatio;
    private Double capitalEmployed;
    private Double capitalEmployedPercentTotalAssets;
    private String companyAge;
    private String companyClass;
    private String consAccounts;
    private Double creditPeriod;
    private String currAccsAvailabe;
    private String currency;
    private Double currentLiabilitiesPercentTotalAssets;
    private Double currentratio;
    private String dateOfAccounts;
    private Double debtGearing;
    private String directorsCIFASFlag;
    private String directorsNOCFlag;
    private Double dividends;
    private String dormancyFlag;
    private Double equityGearing;
    private String ficheDate;
    private String filedAccsType;
    private Double fixedAssets;
    private Double grossAssets;
    private String hasSubsidiaries;
    private Double highestValueCCJ;
    private String incompleteDirsFlag;
    private Double intangibleAssets;
    private String isSubsidiary;
    private Double issuedCapital;
    private String lastDerogatoryItem;
    private String latenessAccounts;
    private String latestAccountsType;
    private String legalStatus;
    private List<LimitedCompanyDelphiPayment> limitedCompanyDelphiPayment;
    private List<LimitedCompanyDelphiRisk> limitedCompanyDelphiRisk;
    private LimitedCompanyDelphiCAIS limitedCompanyDelphiCAIS;
    private Double liquidityStandardRatio;
    private Double netWorth;
    private Double numAppointmentsLast12;
    private Integer numApprovalVolArrangement;
    private Integer numApptAdministrator;
    private Integer numApptCompLiquidator;
    private Integer numApptReceiver;
    private Integer numApptVolLiquidator;
    private Integer numCompanyDissolved;
    private Integer numCompanyReinstated;
    private Integer numCompletionsVolArrangement;
    private Integer numCurrDirs;
    private Integer numDirsHoldingShares;
    private Integer numDirsIncorpAgents;
    private Integer numDischargeAdministrator;
    private Integer numDismissedPetition;
    private Integer numDisqCurrDirs;
    private Double numEmployees;
    private Integer numIntentionToDissolve;
    private Integer numMeetingsCreditors;
    private Integer numMemArtsChangesLast12Months;
    private Integer numPetitionCompWindUp;
    private Integer numReceiverCeasing;
    private Integer numRegOfficeChangesLast12Months;
    private Integer numResolutionWindUp;
    private Integer numRevocationVoluntaryArrangement;
    private Integer numSatMortgages;
    private Integer numSuspensionVolArrangement;
    private Integer numUnsatMortgages;
    private Integer numUnsatPartSatMortgages;
    private Integer numWindUpOrders;
    private Integer numYearsAccosAvailable;
    private Integer numYearsPreTaxProfitLessThan0Last4Years;
    private Integer numberCCJs0To72;
    private Integer numberCCJs13To24;
    private Integer numberCCJs25To36;
    private Integer numberCCJs37To48;
    private Integer numberCCJs49To60;
    private Integer numberCCJs61To72;
    private Integer numberCCJsLast12Months;
    private Integer numberDaysToFile;
    private Integer oldestCurrDirAge;
    private String outOfDateFlag;
    private Double percentChangeCapitalEmployed;
    private Double percentChangeCurrentRatio;
    private Double percentChangePreTaxProfitLoss;
    private Double percentChangeShareholdersFunds;
    private Double percentChangeTotalAssets;
    private Double percentageDirsResidentUK;
    private Integer preTaxMarginQuartile;
    private Double preTaxProfitLoss;
    private Double preTaxProfitMargin;
    private String prevAccountsDormancyFlag;
    private String prevAccsAvailabile;
    private String prevAccsConsAccounts;
    private String prevAccsCurrency;
    private Double proportionCurrDirsToPrevDirLast12;
    private String regOfficeCIFASIndicator;
    private String region;
    private String reportUpdateFlag;
    private Double retainedEarnings;
    private Double retainedProfit;
    private Double returnOnAssets;
    private Integer returnOnAssetsQuartile;
    private Double returnOnCapital;
    private Double revaluationReserves;
    private SICInfo1980 sICInformation1980;
    private SICInfo1992 sICInformation1992;
    private Double shareholdersFunds;
    private Double shortLoans;
    private Double stocksWorkInProgressPercentCurrentAssets;
    private Integer timeSinceLastAccsSubmitted;
    private Double timeSinceLastApprovalVolArrangement;
    private Double timeSinceLastApptAdministrator;
    private Double timeSinceLastApptCompLiquidator;
    private Double timeSinceLastApptReceiver;
    private Double timeSinceLastApptVolLiquidator;
    private Double timeSinceLastCompanyDissolved;
    private Double timeSinceLastCompanyReinstated;
    private Double timeSinceLastCompletionVolArrangement;
    private Double timeSinceLastDerogatoryItem;
    private Integer timeSinceLastDirAppt;
    private Double timeSinceLastDischargeAdministrator;
    private Double timeSinceLastDismissedPetition;
    private Double timeSinceLastIntentionToDissolve;
    private Double timeSinceLastMeetingCreditors;
    private Double timeSinceLastPetitionCompWindUp;
    private Double timeSinceLastReceiverCeasing;
    private Integer timeSinceLastRegOfficeChange;
    private Double timeSinceLastResolutionWindUp;
    private Integer timeSinceLastRetsSubmitted;
    private Double timeSinceLastRevocationVolArrangement;
    private Double timeSinceLastSuspensionVolArrangement;
    private Integer timeSinceLastWindUpHearing;
    private Double timeSinceLastWindUpOrder;
    private Double totAssetsEmp;
    private Double totValCCJsPropShareFunds;
    private Double totalAssets;
    private Double totalCurrentAssets;
    private Double totalCurrentLiabilities;
    private Double totalFixedAssetsPercentTotalAssets;
    private Double totalLongTermLiabilities;
    private Double totalTurnover;
    private Double turnoverPerEmp;
    private Double valCCJsLast24MonthsPropShareFunds;
    private Double valueCCJs0To72;
    private Double valueCCJs13To24;
    private Double valueCCJs25To36;
    private Double valueCCJs37To48;
    private Double valueCCJs49To60;
    private Double valueCCJs61To72;
    private Double valueCCJsLast12Months;
    private Double valueMostRecentCCJ;
    private Double workingCapital;
    private Double workingCapitalPercentCurrentPlusFixedAssets;

    /**
     * Default constructor.
     */
    public LtdScoringData() {
    }

    /**
     * Initialization constructor.
     * @param  accountingPeriod  Integer value for accountingPeriod.
     * @param  acidTest  Double value for acidTest.
     * @param  ageMostRecentCCJ  Integer value for ageMostRecentCCJ.
     * @param  auditType  String value for auditType.
     * @param  auditorsQualifications  String value for auditorsQualifications.
     * @param  baseTrendShareholdersFunds  Integer value for baseTrendShareholdersFunds.
     * @param  borrowingRatio  Double value for borrowingRatio.
     * @param  capitalEmployed  Double value for capitalEmployed.
     * @param  capitalEmployedPercentTotalAssets  Double value for
     *         capitalEmployedPercentTotalAssets.
     * @param  companyAge  String value for companyAge.
     * @param  companyClass  String value for companyClass.
     * @param  consAccounts  String value for consAccounts.
     * @param  creditPeriod  Double value for creditPeriod.
     * @param  currAccsAvailabe  String value for currAccsAvailabe.
     * @param  currency  String value for currency.
     * @param  currentLiabilitiesPercentTotalAssets  Double value for
     *         currentLiabilitiesPercentTotalAssets.
     * @param  currentratio  Double value for currentratio.
     * @param  dateOfAccounts  String value for dateOfAccounts.
     * @param  debtGearing  Double value for debtGearing.
     * @param  directorsCIFASFlag  String value for directorsCIFASFlag.
     * @param  directorsNOCFlag  String value for directorsNOCFlag.
     * @param  dividends  Double value for dividends.
     * @param  dormancyFlag  String value for dormancyFlag.
     * @param  equityGearing  Double value for equityGearing.
     * @param  ficheDate  String value for ficheDate.
     * @param  filedAccsType  String value for filedAccsType.
     * @param  fixedAssets  Double value for fixedAssets.
     * @param  grossAssets  Double value for grossAssets.
     * @param  hasSubsidiaries  String value for hasSubsidiaries.
     * @param  highestValueCCJ  Double value for highestValueCCJ.
     * @param  incompleteDirsFlag  String value for incompleteDirsFlag.
     * @param  intangibleAssets  Double value for intangibleAssets.
     * @param  isSubsidiary  String value for isSubsidiary.
     * @param  issuedCapital  Double value for issuedCapital.
     * @param  lastDerogatoryItem  String value for lastDerogatoryItem.
     * @param  latenessAccounts  String value for latenessAccounts.
     * @param  latestAccountsType  String value for latestAccountsType.
     * @param  legalStatus  String value for legalStatus.
     * @param  limitedCompanyDelphiPayment  List of LimitedCompanyDelphiPayment value for
     *         limitedCompanyDelphiPayment.
     * @param  limitedCompanyDelphiRisk  List of LimitedCompanyDelphiRisk value for
     *         limitedCompanyDelphiRisk.
     * @param  limitedCompanyDelphiCAIS  LimitedCompanyDelphiCAIS value for
     *         limitedCompanyDelphiCAIS.
     * @param  liquidityStandardRatio  Double value for liquidityStandardRatio.
     * @param  netWorth  Double value for netWorth.
     * @param  numAppointmentsLast12  Double value for numAppointmentsLast12.
     * @param  numApprovalVolArrangement  Integer value for numApprovalVolArrangement.
     * @param  numApptAdministrator  Integer value for numApptAdministrator.
     * @param  numApptCompLiquidator  Integer value for numApptCompLiquidator.
     * @param  numApptReceiver  Integer value for numApptReceiver.
     * @param  numApptVolLiquidator  Integer value for numApptVolLiquidator.
     * @param  numCompanyDissolved  Integer value for numCompanyDissolved.
     * @param  numCompanyReinstated  Integer value for numCompanyReinstated.
     * @param  numCompletionsVolArrangement  Integer value for numCompletionsVolArrangement.
     * @param  numCurrDirs  Integer value for numCurrDirs.
     * @param  numDirsHoldingShares  Integer value for numDirsHoldingShares.
     * @param  numDirsIncorpAgents  Integer value for numDirsIncorpAgents.
     * @param  numDischargeAdministrator  Integer value for numDischargeAdministrator.
     * @param  numDismissedPetition  Integer value for numDismissedPetition.
     * @param  numDisqCurrDirs  Integer value for numDisqCurrDirs.
     * @param  numEmployees  Double value for numEmployees.
     * @param  numIntentionToDissolve  Integer value for numIntentionToDissolve.
     * @param  numMeetingsCreditors  Integer value for numMeetingsCreditors.
     * @param  numMemArtsChangesLast12Months  Integer value for numMemArtsChangesLast12Months.
     * @param  numPetitionCompWindUp  Integer value for numPetitionCompWindUp.
     * @param  numReceiverCeasing  Integer value for numReceiverCeasing.
     * @param  numRegOfficeChangesLast12Months  Integer value for numRegOfficeChangesLast12Months.
     * @param  numResolutionWindUp  Integer value for numResolutionWindUp.
     * @param  numRevocationVoluntaryArrangement  Integer value for
     *         numRevocationVoluntaryArrangement.
     * @param  numSatMortgages  Integer value for numSatMortgages.
     * @param  numSuspensionVolArrangement  Integer value for numSuspensionVolArrangement.
     * @param  numUnsatMortgages  Integer value for numUnsatMortgages.
     * @param  numUnsatPartSatMortgages  Integer value for numUnsatPartSatMortgages.
     * @param  numWindUpOrders  Integer value for numWindUpOrders.
     * @param  numYearsAccosAvailable  Integer value for numYearsAccosAvailable.
     * @param  numYearsPreTaxProfitLessThan0Last4Years  Integer value for
     *         numYearsPreTaxProfitLessThan0Last4Years.
     * @param  numberCCJs0To72  Integer value for numberCCJs0To72.
     * @param  numberCCJs13To24  Integer value for numberCCJs13To24.
     * @param  numberCCJs25To36  Integer value for numberCCJs25To36.
     * @param  numberCCJs37To48  Integer value for numberCCJs37To48.
     * @param  numberCCJs49To60  Integer value for numberCCJs49To60.
     * @param  numberCCJs61To72  Integer value for numberCCJs61To72.
     * @param  numberCCJsLast12Months  Integer value for numberCCJsLast12Months.
     * @param  numberDaysToFile  Integer value for numberDaysToFile.
     * @param  oldestCurrDirAge  Integer value for oldestCurrDirAge.
     * @param  outOfDateFlag  String value for outOfDateFlag.
     * @param  percentChangeCapitalEmployed  Double value for percentChangeCapitalEmployed.
     * @param  percentChangeCurrentRatio  Double value for percentChangeCurrentRatio.
     * @param  percentChangePreTaxProfitLoss  Double value for percentChangePreTaxProfitLoss.
     * @param  percentChangeShareholdersFunds  Double value for percentChangeShareholdersFunds.
     * @param  percentChangeTotalAssets  Double value for percentChangeTotalAssets.
     * @param  percentageDirsResidentUK  Double value for percentageDirsResidentUK.
     * @param  preTaxMarginQuartile  Integer value for preTaxMarginQuartile.
     * @param  preTaxProfitLoss  Double value for preTaxProfitLoss.
     * @param  preTaxProfitMargin  Double value for preTaxProfitMargin.
     * @param  prevAccountsDormancyFlag  String value for prevAccountsDormancyFlag.
     * @param  prevAccsAvailabile  String value for prevAccsAvailabile.
     * @param  prevAccsConsAccounts  String value for prevAccsConsAccounts.
     * @param  prevAccsCurrency  String value for prevAccsCurrency.
     * @param  proportionCurrDirsToPrevDirLast12  Double value for
     *         proportionCurrDirsToPrevDirLast12.
     * @param  regOfficeCIFASIndicator  String value for regOfficeCIFASIndicator.
     * @param  region  String value for region.
     * @param  reportUpdateFlag  String value for reportUpdateFlag.
     * @param  retainedEarnings  Double value for retainedEarnings.
     * @param  retainedProfit  Double value for retainedProfit.
     * @param  returnOnAssets  Double value for returnOnAssets.
     * @param  returnOnAssetsQuartile  Integer value for returnOnAssetsQuartile.
     * @param  returnOnCapital  Double value for returnOnCapital.
     * @param  revaluationReserves  Double value for revaluationReserves.
     * @param  sICInformation1980  SICInfo1980 value for sICInformation1980.
     * @param  sICInformation1992  SICInfo1992 value for sICInformation1992.
     * @param  shareholdersFunds  Double value for shareholdersFunds.
     * @param  shortLoans  Double value for shortLoans.
     * @param  stocksWorkInProgressPercentCurrentAssets  Double value for
     *         stocksWorkInProgressPercentCurrentAssets.
     * @param  timeSinceLastAccsSubmitted  Integer value for timeSinceLastAccsSubmitted.
     * @param  timeSinceLastApprovalVolArrangement  Double value for
     *         timeSinceLastApprovalVolArrangement.
     * @param  timeSinceLastApptAdministrator  Double value for timeSinceLastApptAdministrator.
     * @param  timeSinceLastApptCompLiquidator  Double value for timeSinceLastApptCompLiquidator.
     * @param  timeSinceLastApptReceiver  Double value for timeSinceLastApptReceiver.
     * @param  timeSinceLastApptVolLiquidator  Double value for timeSinceLastApptVolLiquidator.
     * @param  timeSinceLastCompanyDissolved  Double value for timeSinceLastCompanyDissolved.
     * @param  timeSinceLastCompanyReinstated  Double value for timeSinceLastCompanyReinstated.
     * @param  timeSinceLastCompletionVolArrangement  Double value for
     *         timeSinceLastCompletionVolArrangement.
     * @param  timeSinceLastDerogatoryItem  Double value for timeSinceLastDerogatoryItem.
     * @param  timeSinceLastDirAppt  Integer value for timeSinceLastDirAppt.
     * @param  timeSinceLastDischargeAdministrator  Double value for
     *         timeSinceLastDischargeAdministrator.
     * @param  timeSinceLastDismissedPetition  Double value for timeSinceLastDismissedPetition.
     * @param  timeSinceLastIntentionToDissolve  Double value for timeSinceLastIntentionToDissolve.
     * @param  timeSinceLastMeetingCreditors  Double value for timeSinceLastMeetingCreditors.
     * @param  timeSinceLastPetitionCompWindUp  Double value for timeSinceLastPetitionCompWindUp.
     * @param  timeSinceLastReceiverCeasing  Double value for timeSinceLastReceiverCeasing.
     * @param  timeSinceLastRegOfficeChange  Integer value for timeSinceLastRegOfficeChange.
     * @param  timeSinceLastResolutionWindUp  Double value for timeSinceLastResolutionWindUp.
     * @param  timeSinceLastRetsSubmitted  Integer value for timeSinceLastRetsSubmitted.
     * @param  timeSinceLastRevocationVolArrangement  Double value for
     *         timeSinceLastRevocationVolArrangement.
     * @param  timeSinceLastSuspensionVolArrangement  Double value for
     *         timeSinceLastSuspensionVolArrangement.
     * @param  timeSinceLastWindUpHearing  Integer value for timeSinceLastWindUpHearing.
     * @param  timeSinceLastWindUpOrder  Double value for timeSinceLastWindUpOrder.
     * @param  totAssetsEmp  Double value for totAssetsEmp.
     * @param  totValCCJsPropShareFunds  Double value for totValCCJsPropShareFunds.
     * @param  totalAssets  Double value for totalAssets.
     * @param  totalCurrentAssets  Double value for totalCurrentAssets.
     * @param  totalCurrentLiabilities  Double value for totalCurrentLiabilities.
     * @param  totalFixedAssetsPercentTotalAssets  Double value for
     *         totalFixedAssetsPercentTotalAssets.
     * @param  totalLongTermLiabilities  Double value for totalLongTermLiabilities.
     * @param  totalTurnover  Double value for totalTurnover.
     * @param  turnoverPerEmp  Double value for turnoverPerEmp.
     * @param  valCCJsLast24MonthsPropShareFunds  Double value for
     *         valCCJsLast24MonthsPropShareFunds.
     * @param  valueCCJs0To72  Double value for valueCCJs0To72.
     * @param  valueCCJs13To24  Double value for valueCCJs13To24.
     * @param  valueCCJs25To36  Double value for valueCCJs25To36.
     * @param  valueCCJs37To48  Double value for valueCCJs37To48.
     * @param  valueCCJs49To60  Double value for valueCCJs49To60.
     * @param  valueCCJs61To72  Double value for valueCCJs61To72.
     * @param  valueCCJsLast12Months  Double value for valueCCJsLast12Months.
     * @param  valueMostRecentCCJ  Double value for valueMostRecentCCJ.
     * @param  workingCapital  Double value for workingCapital.
     * @param  workingCapitalPercentCurrentPlusFixedAssets  Double value for
     *         workingCapitalPercentCurrentPlusFixedAssets.
     */
    public LtdScoringData(
            Integer accountingPeriod,
            Double acidTest,
            Integer ageMostRecentCCJ,
            String auditType,
            String auditorsQualifications,
            Integer baseTrendShareholdersFunds,
            Double borrowingRatio,
            Double capitalEmployed,
            Double capitalEmployedPercentTotalAssets,
            String companyAge,
            String companyClass,
            String consAccounts,
            Double creditPeriod,
            String currAccsAvailabe,
            String currency,
            Double currentLiabilitiesPercentTotalAssets,
            Double currentratio,
            String dateOfAccounts,
            Double debtGearing,
            String directorsCIFASFlag,
            String directorsNOCFlag,
            Double dividends,
            String dormancyFlag,
            Double equityGearing,
            String ficheDate,
            String filedAccsType,
            Double fixedAssets,
            Double grossAssets,
            String hasSubsidiaries,
            Double highestValueCCJ,
            String incompleteDirsFlag,
            Double intangibleAssets,
            String isSubsidiary,
            Double issuedCapital,
            String lastDerogatoryItem,
            String latenessAccounts,
            String latestAccountsType,
            String legalStatus,
            List<LimitedCompanyDelphiPayment> limitedCompanyDelphiPayment,
            List<LimitedCompanyDelphiRisk> limitedCompanyDelphiRisk,
            LimitedCompanyDelphiCAIS limitedCompanyDelphiCAIS,
            Double liquidityStandardRatio,
            Double netWorth,
            Double numAppointmentsLast12,
            Integer numApprovalVolArrangement,
            Integer numApptAdministrator,
            Integer numApptCompLiquidator,
            Integer numApptReceiver,
            Integer numApptVolLiquidator,
            Integer numCompanyDissolved,
            Integer numCompanyReinstated,
            Integer numCompletionsVolArrangement,
            Integer numCurrDirs,
            Integer numDirsHoldingShares,
            Integer numDirsIncorpAgents,
            Integer numDischargeAdministrator,
            Integer numDismissedPetition,
            Integer numDisqCurrDirs,
            Double numEmployees,
            Integer numIntentionToDissolve,
            Integer numMeetingsCreditors,
            Integer numMemArtsChangesLast12Months,
            Integer numPetitionCompWindUp,
            Integer numReceiverCeasing,
            Integer numRegOfficeChangesLast12Months,
            Integer numResolutionWindUp,
            Integer numRevocationVoluntaryArrangement,
            Integer numSatMortgages,
            Integer numSuspensionVolArrangement,
            Integer numUnsatMortgages,
            Integer numUnsatPartSatMortgages,
            Integer numWindUpOrders,
            Integer numYearsAccosAvailable,
            Integer numYearsPreTaxProfitLessThan0Last4Years,
            Integer numberCCJs0To72,
            Integer numberCCJs13To24,
            Integer numberCCJs25To36,
            Integer numberCCJs37To48,
            Integer numberCCJs49To60,
            Integer numberCCJs61To72,
            Integer numberCCJsLast12Months,
            Integer numberDaysToFile,
            Integer oldestCurrDirAge,
            String outOfDateFlag,
            Double percentChangeCapitalEmployed,
            Double percentChangeCurrentRatio,
            Double percentChangePreTaxProfitLoss,
            Double percentChangeShareholdersFunds,
            Double percentChangeTotalAssets,
            Double percentageDirsResidentUK,
            Integer preTaxMarginQuartile,
            Double preTaxProfitLoss,
            Double preTaxProfitMargin,
            String prevAccountsDormancyFlag,
            String prevAccsAvailabile,
            String prevAccsConsAccounts,
            String prevAccsCurrency,
            Double proportionCurrDirsToPrevDirLast12,
            String regOfficeCIFASIndicator,
            String region,
            String reportUpdateFlag,
            Double retainedEarnings,
            Double retainedProfit,
            Double returnOnAssets,
            Integer returnOnAssetsQuartile,
            Double returnOnCapital,
            Double revaluationReserves,
            SICInfo1980 sICInformation1980,
            SICInfo1992 sICInformation1992,
            Double shareholdersFunds,
            Double shortLoans,
            Double stocksWorkInProgressPercentCurrentAssets,
            Integer timeSinceLastAccsSubmitted,
            Double timeSinceLastApprovalVolArrangement,
            Double timeSinceLastApptAdministrator,
            Double timeSinceLastApptCompLiquidator,
            Double timeSinceLastApptReceiver,
            Double timeSinceLastApptVolLiquidator,
            Double timeSinceLastCompanyDissolved,
            Double timeSinceLastCompanyReinstated,
            Double timeSinceLastCompletionVolArrangement,
            Double timeSinceLastDerogatoryItem,
            Integer timeSinceLastDirAppt,
            Double timeSinceLastDischargeAdministrator,
            Double timeSinceLastDismissedPetition,
            Double timeSinceLastIntentionToDissolve,
            Double timeSinceLastMeetingCreditors,
            Double timeSinceLastPetitionCompWindUp,
            Double timeSinceLastReceiverCeasing,
            Integer timeSinceLastRegOfficeChange,
            Double timeSinceLastResolutionWindUp,
            Integer timeSinceLastRetsSubmitted,
            Double timeSinceLastRevocationVolArrangement,
            Double timeSinceLastSuspensionVolArrangement,
            Integer timeSinceLastWindUpHearing,
            Double timeSinceLastWindUpOrder,
            Double totAssetsEmp,
            Double totValCCJsPropShareFunds,
            Double totalAssets,
            Double totalCurrentAssets,
            Double totalCurrentLiabilities,
            Double totalFixedAssetsPercentTotalAssets,
            Double totalLongTermLiabilities,
            Double totalTurnover,
            Double turnoverPerEmp,
            Double valCCJsLast24MonthsPropShareFunds,
            Double valueCCJs0To72,
            Double valueCCJs13To24,
            Double valueCCJs25To36,
            Double valueCCJs37To48,
            Double valueCCJs49To60,
            Double valueCCJs61To72,
            Double valueCCJsLast12Months,
            Double valueMostRecentCCJ,
            Double workingCapital,
            Double workingCapitalPercentCurrentPlusFixedAssets) {
        this.accountingPeriod = accountingPeriod;
        this.acidTest = acidTest;
        this.ageMostRecentCCJ = ageMostRecentCCJ;
        this.auditType = auditType;
        this.auditorsQualifications = auditorsQualifications;
        this.baseTrendShareholdersFunds = baseTrendShareholdersFunds;
        this.borrowingRatio = borrowingRatio;
        this.capitalEmployed = capitalEmployed;
        this.capitalEmployedPercentTotalAssets = capitalEmployedPercentTotalAssets;
        this.companyAge = companyAge;
        this.companyClass = companyClass;
        this.consAccounts = consAccounts;
        this.creditPeriod = creditPeriod;
        this.currAccsAvailabe = currAccsAvailabe;
        this.currency = currency;
        this.currentLiabilitiesPercentTotalAssets = currentLiabilitiesPercentTotalAssets;
        this.currentratio = currentratio;
        this.dateOfAccounts = dateOfAccounts;
        this.debtGearing = debtGearing;
        this.directorsCIFASFlag = directorsCIFASFlag;
        this.directorsNOCFlag = directorsNOCFlag;
        this.dividends = dividends;
        this.dormancyFlag = dormancyFlag;
        this.equityGearing = equityGearing;
        this.ficheDate = ficheDate;
        this.filedAccsType = filedAccsType;
        this.fixedAssets = fixedAssets;
        this.grossAssets = grossAssets;
        this.hasSubsidiaries = hasSubsidiaries;
        this.highestValueCCJ = highestValueCCJ;
        this.incompleteDirsFlag = incompleteDirsFlag;
        this.intangibleAssets = intangibleAssets;
        this.isSubsidiary = isSubsidiary;
        this.issuedCapital = issuedCapital;
        this.lastDerogatoryItem = lastDerogatoryItem;
        this.latenessAccounts = latenessAccounts;
        this.latestAccountsType = latestAccountsType;
        this.legalStatus = legalStatus;
        this.limitedCompanyDelphiPayment = limitedCompanyDelphiPayment;
        this.limitedCompanyDelphiRisk = limitedCompanyDelphiRisk;
        this.limitedCompanyDelphiCAIS = limitedCompanyDelphiCAIS;
        this.liquidityStandardRatio = liquidityStandardRatio;
        this.netWorth = netWorth;
        this.numAppointmentsLast12 = numAppointmentsLast12;
        this.numApprovalVolArrangement = numApprovalVolArrangement;
        this.numApptAdministrator = numApptAdministrator;
        this.numApptCompLiquidator = numApptCompLiquidator;
        this.numApptReceiver = numApptReceiver;
        this.numApptVolLiquidator = numApptVolLiquidator;
        this.numCompanyDissolved = numCompanyDissolved;
        this.numCompanyReinstated = numCompanyReinstated;
        this.numCompletionsVolArrangement = numCompletionsVolArrangement;
        this.numCurrDirs = numCurrDirs;
        this.numDirsHoldingShares = numDirsHoldingShares;
        this.numDirsIncorpAgents = numDirsIncorpAgents;
        this.numDischargeAdministrator = numDischargeAdministrator;
        this.numDismissedPetition = numDismissedPetition;
        this.numDisqCurrDirs = numDisqCurrDirs;
        this.numEmployees = numEmployees;
        this.numIntentionToDissolve = numIntentionToDissolve;
        this.numMeetingsCreditors = numMeetingsCreditors;
        this.numMemArtsChangesLast12Months = numMemArtsChangesLast12Months;
        this.numPetitionCompWindUp = numPetitionCompWindUp;
        this.numReceiverCeasing = numReceiverCeasing;
        this.numRegOfficeChangesLast12Months = numRegOfficeChangesLast12Months;
        this.numResolutionWindUp = numResolutionWindUp;
        this.numRevocationVoluntaryArrangement = numRevocationVoluntaryArrangement;
        this.numSatMortgages = numSatMortgages;
        this.numSuspensionVolArrangement = numSuspensionVolArrangement;
        this.numUnsatMortgages = numUnsatMortgages;
        this.numUnsatPartSatMortgages = numUnsatPartSatMortgages;
        this.numWindUpOrders = numWindUpOrders;
        this.numYearsAccosAvailable = numYearsAccosAvailable;
        this.numYearsPreTaxProfitLessThan0Last4Years = numYearsPreTaxProfitLessThan0Last4Years;
        this.numberCCJs0To72 = numberCCJs0To72;
        this.numberCCJs13To24 = numberCCJs13To24;
        this.numberCCJs25To36 = numberCCJs25To36;
        this.numberCCJs37To48 = numberCCJs37To48;
        this.numberCCJs49To60 = numberCCJs49To60;
        this.numberCCJs61To72 = numberCCJs61To72;
        this.numberCCJsLast12Months = numberCCJsLast12Months;
        this.numberDaysToFile = numberDaysToFile;
        this.oldestCurrDirAge = oldestCurrDirAge;
        this.outOfDateFlag = outOfDateFlag;
        this.percentChangeCapitalEmployed = percentChangeCapitalEmployed;
        this.percentChangeCurrentRatio = percentChangeCurrentRatio;
        this.percentChangePreTaxProfitLoss = percentChangePreTaxProfitLoss;
        this.percentChangeShareholdersFunds = percentChangeShareholdersFunds;
        this.percentChangeTotalAssets = percentChangeTotalAssets;
        this.percentageDirsResidentUK = percentageDirsResidentUK;
        this.preTaxMarginQuartile = preTaxMarginQuartile;
        this.preTaxProfitLoss = preTaxProfitLoss;
        this.preTaxProfitMargin = preTaxProfitMargin;
        this.prevAccountsDormancyFlag = prevAccountsDormancyFlag;
        this.prevAccsAvailabile = prevAccsAvailabile;
        this.prevAccsConsAccounts = prevAccsConsAccounts;
        this.prevAccsCurrency = prevAccsCurrency;
        this.proportionCurrDirsToPrevDirLast12 = proportionCurrDirsToPrevDirLast12;
        this.regOfficeCIFASIndicator = regOfficeCIFASIndicator;
        this.region = region;
        this.reportUpdateFlag = reportUpdateFlag;
        this.retainedEarnings = retainedEarnings;
        this.retainedProfit = retainedProfit;
        this.returnOnAssets = returnOnAssets;
        this.returnOnAssetsQuartile = returnOnAssetsQuartile;
        this.returnOnCapital = returnOnCapital;
        this.revaluationReserves = revaluationReserves;
        this.sICInformation1980 = sICInformation1980;
        this.sICInformation1992 = sICInformation1992;
        this.shareholdersFunds = shareholdersFunds;
        this.shortLoans = shortLoans;
        this.stocksWorkInProgressPercentCurrentAssets = stocksWorkInProgressPercentCurrentAssets;
        this.timeSinceLastAccsSubmitted = timeSinceLastAccsSubmitted;
        this.timeSinceLastApprovalVolArrangement = timeSinceLastApprovalVolArrangement;
        this.timeSinceLastApptAdministrator = timeSinceLastApptAdministrator;
        this.timeSinceLastApptCompLiquidator = timeSinceLastApptCompLiquidator;
        this.timeSinceLastApptReceiver = timeSinceLastApptReceiver;
        this.timeSinceLastApptVolLiquidator = timeSinceLastApptVolLiquidator;
        this.timeSinceLastCompanyDissolved = timeSinceLastCompanyDissolved;
        this.timeSinceLastCompanyReinstated = timeSinceLastCompanyReinstated;
        this.timeSinceLastCompletionVolArrangement = timeSinceLastCompletionVolArrangement;
        this.timeSinceLastDerogatoryItem = timeSinceLastDerogatoryItem;
        this.timeSinceLastDirAppt = timeSinceLastDirAppt;
        this.timeSinceLastDischargeAdministrator = timeSinceLastDischargeAdministrator;
        this.timeSinceLastDismissedPetition = timeSinceLastDismissedPetition;
        this.timeSinceLastIntentionToDissolve = timeSinceLastIntentionToDissolve;
        this.timeSinceLastMeetingCreditors = timeSinceLastMeetingCreditors;
        this.timeSinceLastPetitionCompWindUp = timeSinceLastPetitionCompWindUp;
        this.timeSinceLastReceiverCeasing = timeSinceLastReceiverCeasing;
        this.timeSinceLastRegOfficeChange = timeSinceLastRegOfficeChange;
        this.timeSinceLastResolutionWindUp = timeSinceLastResolutionWindUp;
        this.timeSinceLastRetsSubmitted = timeSinceLastRetsSubmitted;
        this.timeSinceLastRevocationVolArrangement = timeSinceLastRevocationVolArrangement;
        this.timeSinceLastSuspensionVolArrangement = timeSinceLastSuspensionVolArrangement;
        this.timeSinceLastWindUpHearing = timeSinceLastWindUpHearing;
        this.timeSinceLastWindUpOrder = timeSinceLastWindUpOrder;
        this.totAssetsEmp = totAssetsEmp;
        this.totValCCJsPropShareFunds = totValCCJsPropShareFunds;
        this.totalAssets = totalAssets;
        this.totalCurrentAssets = totalCurrentAssets;
        this.totalCurrentLiabilities = totalCurrentLiabilities;
        this.totalFixedAssetsPercentTotalAssets = totalFixedAssetsPercentTotalAssets;
        this.totalLongTermLiabilities = totalLongTermLiabilities;
        this.totalTurnover = totalTurnover;
        this.turnoverPerEmp = turnoverPerEmp;
        this.valCCJsLast24MonthsPropShareFunds = valCCJsLast24MonthsPropShareFunds;
        this.valueCCJs0To72 = valueCCJs0To72;
        this.valueCCJs13To24 = valueCCJs13To24;
        this.valueCCJs25To36 = valueCCJs25To36;
        this.valueCCJs37To48 = valueCCJs37To48;
        this.valueCCJs49To60 = valueCCJs49To60;
        this.valueCCJs61To72 = valueCCJs61To72;
        this.valueCCJsLast12Months = valueCCJsLast12Months;
        this.valueMostRecentCCJ = valueMostRecentCCJ;
        this.workingCapital = workingCapital;
        this.workingCapitalPercentCurrentPlusFixedAssets =
                workingCapitalPercentCurrentPlusFixedAssets;
    }

    /**
     * Getter for AccountingPeriod.
     * The accounting period for the latest accounts for the limited company in weeks Default value
     * of -999 indicates not applicable=
     * @return Returns the Integer
     */
    @JsonGetter("AccountingPeriod")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getAccountingPeriod() {
        return accountingPeriod;
    }

    /**
     * Setter for AccountingPeriod.
     * The accounting period for the latest accounts for the limited company in weeks Default value
     * of -999 indicates not applicable=
     * @param accountingPeriod Value for Integer
     */
    @JsonSetter("AccountingPeriod")
    public void setAccountingPeriod(Integer accountingPeriod) {
        this.accountingPeriod = accountingPeriod;
    }

    /**
     * Getter for AcidTest.
     * Value for Acid Test for the latest accounts for the limited company. Defaul -999999.9
     * @return Returns the Double
     */
    @JsonGetter("AcidTest")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getAcidTest() {
        return acidTest;
    }

    /**
     * Setter for AcidTest.
     * Value for Acid Test for the latest accounts for the limited company. Defaul -999999.9
     * @param acidTest Value for Double
     */
    @JsonSetter("AcidTest")
    public void setAcidTest(Double acidTest) {
        this.acidTest = acidTest;
    }

    /**
     * Getter for AgeMostRecentCCJ.
     * The number of months since the most recent County Court Judgement was registered against the
     * limited company Fefault -999
     * @return Returns the Integer
     */
    @JsonGetter("AgeMostRecentCCJ")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getAgeMostRecentCCJ() {
        return ageMostRecentCCJ;
    }

    /**
     * Setter for AgeMostRecentCCJ.
     * The number of months since the most recent County Court Judgement was registered against the
     * limited company Fefault -999
     * @param ageMostRecentCCJ Value for Integer
     */
    @JsonSetter("AgeMostRecentCCJ")
    public void setAgeMostRecentCCJ(Integer ageMostRecentCCJ) {
        this.ageMostRecentCCJ = ageMostRecentCCJ;
    }

    /**
     * Getter for AuditType.
     * Indicator showing the level of auditing provided - A = Auditors; C = Chartered accountant; D
     * = Director
     * @return Returns the String
     */
    @JsonGetter("AuditType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAuditType() {
        return auditType;
    }

    /**
     * Setter for AuditType.
     * Indicator showing the level of auditing provided - A = Auditors; C = Chartered accountant; D
     * = Director
     * @param auditType Value for String
     */
    @JsonSetter("AuditType")
    public void setAuditType(String auditType) {
        this.auditType = auditType;
    }

    /**
     * Getter for AuditorsQualifications.
     * Indicator showing whether the auditor has made significant comments - 0 = No qualifications;
     * 1 = Minor qualifications; 2 = Major qualifications; 3 = Major qualifications; X = No accounts
     * @return Returns the String
     */
    @JsonGetter("AuditorsQualifications")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAuditorsQualifications() {
        return auditorsQualifications;
    }

    /**
     * Setter for AuditorsQualifications.
     * Indicator showing whether the auditor has made significant comments - 0 = No qualifications;
     * 1 = Minor qualifications; 2 = Major qualifications; 3 = Major qualifications; X = No accounts
     * @param auditorsQualifications Value for String
     */
    @JsonSetter("AuditorsQualifications")
    public void setAuditorsQualifications(String auditorsQualifications) {
        this.auditorsQualifications = auditorsQualifications;
    }

    /**
     * Getter for BaseTrendShareholdersFunds.
     * Indicator showing the Base Trend in Shareholders Funds=
     * @return Returns the Integer
     */
    @JsonGetter("BaseTrendShareholdersFunds")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getBaseTrendShareholdersFunds() {
        return baseTrendShareholdersFunds;
    }

    /**
     * Setter for BaseTrendShareholdersFunds.
     * Indicator showing the Base Trend in Shareholders Funds=
     * @param baseTrendShareholdersFunds Value for Integer
     */
    @JsonSetter("BaseTrendShareholdersFunds")
    public void setBaseTrendShareholdersFunds(Integer baseTrendShareholdersFunds) {
        this.baseTrendShareholdersFunds = baseTrendShareholdersFunds;
    }

    /**
     * Getter for BorrowingRatio.
     * Value for Borrowing Ratio for the latest accounts for the limited company (as percentage
     * ZZZZZ.9) Defaul -999999.9
     * @return Returns the Double
     */
    @JsonGetter("BorrowingRatio")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getBorrowingRatio() {
        return borrowingRatio;
    }

    /**
     * Setter for BorrowingRatio.
     * Value for Borrowing Ratio for the latest accounts for the limited company (as percentage
     * ZZZZZ.9) Defaul -999999.9
     * @param borrowingRatio Value for Double
     */
    @JsonSetter("BorrowingRatio")
    public void setBorrowingRatio(Double borrowingRatio) {
        this.borrowingRatio = borrowingRatio;
    }

    /**
     * Getter for CapitalEmployed.
     * Value for Capital Employed for the latest accounts for the limited company. Default
     * -999999999999999
     * @return Returns the Double
     */
    @JsonGetter("CapitalEmployed")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getCapitalEmployed() {
        return capitalEmployed;
    }

    /**
     * Setter for CapitalEmployed.
     * Value for Capital Employed for the latest accounts for the limited company. Default
     * -999999999999999
     * @param capitalEmployed Value for Double
     */
    @JsonSetter("CapitalEmployed")
    public void setCapitalEmployed(Double capitalEmployed) {
        this.capitalEmployed = capitalEmployed;
    }

    /**
     * Getter for CapitalEmployedPercentTotalAssets.
     * Value for Capital Employed as a percentage of Total Assets for the latest accounts for the
     * limited company (as percentage ZZZZZ.9). Default -99999999.9
     * @return Returns the Double
     */
    @JsonGetter("CapitalEmployedPercentTotalAssets")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getCapitalEmployedPercentTotalAssets() {
        return capitalEmployedPercentTotalAssets;
    }

    /**
     * Setter for CapitalEmployedPercentTotalAssets.
     * Value for Capital Employed as a percentage of Total Assets for the latest accounts for the
     * limited company (as percentage ZZZZZ.9). Default -99999999.9
     * @param capitalEmployedPercentTotalAssets Value for Double
     */
    @JsonSetter("CapitalEmployedPercentTotalAssets")
    public void setCapitalEmployedPercentTotalAssets(Double capitalEmployedPercentTotalAssets) {
        this.capitalEmployedPercentTotalAssets = capitalEmployedPercentTotalAssets;
    }

    /**
     * Getter for CompanyAge.
     * The number of months (rounded up) since the date of incorporation of the limited company
     * @return Returns the String
     */
    @JsonGetter("CompanyAge")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCompanyAge() {
        return companyAge;
    }

    /**
     * Setter for CompanyAge.
     * The number of months (rounded up) since the date of incorporation of the limited company
     * @param companyAge Value for String
     */
    @JsonSetter("CompanyAge")
    public void setCompanyAge(String companyAge) {
        this.companyAge = companyAge;
    }

    /**
     * Getter for CompanyClass.
     * Size classification for the limited company - S = Small sized company; M= Medium sized
     * company; L = Large sized company
     * @return Returns the String
     */
    @JsonGetter("CompanyClass")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCompanyClass() {
        return companyClass;
    }

    /**
     * Setter for CompanyClass.
     * Size classification for the limited company - S = Small sized company; M= Medium sized
     * company; L = Large sized company
     * @param companyClass Value for String
     */
    @JsonSetter("CompanyClass")
    public void setCompanyClass(String companyClass) {
        this.companyClass = companyClass;
    }

    /**
     * Getter for ConsAccounts.
     * Indicator showing whether the latest accounts for the limited company are consolidated - Y =
     * Consolidated; N = Not consolidated
     * @return Returns the String
     */
    @JsonGetter("ConsAccounts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getConsAccounts() {
        return consAccounts;
    }

    /**
     * Setter for ConsAccounts.
     * Indicator showing whether the latest accounts for the limited company are consolidated - Y =
     * Consolidated; N = Not consolidated
     * @param consAccounts Value for String
     */
    @JsonSetter("ConsAccounts")
    public void setConsAccounts(String consAccounts) {
        this.consAccounts = consAccounts;
    }

    /**
     * Getter for CreditPeriod.
     * Value for Retained Profit for the latest accounts for the limited company. Default -9999999
     * @return Returns the Double
     */
    @JsonGetter("CreditPeriod")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getCreditPeriod() {
        return creditPeriod;
    }

    /**
     * Setter for CreditPeriod.
     * Value for Retained Profit for the latest accounts for the limited company. Default -9999999
     * @param creditPeriod Value for Double
     */
    @JsonSetter("CreditPeriod")
    public void setCreditPeriod(Double creditPeriod) {
        this.creditPeriod = creditPeriod;
    }

    /**
     * Getter for CurrAccsAvailabe.
     * Indicator showing whether current accounts are available for the limited company - Y =
     * Current accounts available; N = Current accounts filed but unavailable; X = No accounts filed
     * @return Returns the String
     */
    @JsonGetter("CurrAccsAvailabe")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCurrAccsAvailabe() {
        return currAccsAvailabe;
    }

    /**
     * Setter for CurrAccsAvailabe.
     * Indicator showing whether current accounts are available for the limited company - Y =
     * Current accounts available; N = Current accounts filed but unavailable; X = No accounts filed
     * @param currAccsAvailabe Value for String
     */
    @JsonSetter("CurrAccsAvailabe")
    public void setCurrAccsAvailabe(String currAccsAvailabe) {
        this.currAccsAvailabe = currAccsAvailabe;
    }

    /**
     * Getter for Currency.
     * Currency under which the latest accounts for the limited company have been reported - ISO
     * currency code
     * @return Returns the String
     */
    @JsonGetter("Currency")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCurrency() {
        return currency;
    }

    /**
     * Setter for Currency.
     * Currency under which the latest accounts for the limited company have been reported - ISO
     * currency code
     * @param currency Value for String
     */
    @JsonSetter("Currency")
    public void setCurrency(String currency) {
        this.currency = currency;
    }

    /**
     * Getter for CurrentLiabilitiesPercentTotalAssets.
     * Value for Current Liabilities as a percentage of Total Assets for the latest accounts for the
     * limited company (as percentage ZZZZZ.9) Default -99999999.9
     * @return Returns the Double
     */
    @JsonGetter("CurrentLiabilitiesPercentTotalAssets")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getCurrentLiabilitiesPercentTotalAssets() {
        return currentLiabilitiesPercentTotalAssets;
    }

    /**
     * Setter for CurrentLiabilitiesPercentTotalAssets.
     * Value for Current Liabilities as a percentage of Total Assets for the latest accounts for the
     * limited company (as percentage ZZZZZ.9) Default -99999999.9
     * @param currentLiabilitiesPercentTotalAssets Value for Double
     */
    @JsonSetter("CurrentLiabilitiesPercentTotalAssets")
    public void setCurrentLiabilitiesPercentTotalAssets(Double currentLiabilitiesPercentTotalAssets) {
        this.currentLiabilitiesPercentTotalAssets = currentLiabilitiesPercentTotalAssets;
    }

    /**
     * Getter for Currentratio.
     * Value for Current Ratio for the latest accounts for the limited company. Default -999999.9
     * @return Returns the Double
     */
    @JsonGetter("Currentratio")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getCurrentratio() {
        return currentratio;
    }

    /**
     * Setter for Currentratio.
     * Value for Current Ratio for the latest accounts for the limited company. Default -999999.9
     * @param currentratio Value for Double
     */
    @JsonSetter("Currentratio")
    public void setCurrentratio(Double currentratio) {
        this.currentratio = currentratio;
    }

    /**
     * Getter for DateOfAccounts.
     * Date of accounts (yyyy-mm-dd)
     * @return Returns the String
     */
    @JsonGetter("DateOfAccounts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDateOfAccounts() {
        return dateOfAccounts;
    }

    /**
     * Setter for DateOfAccounts.
     * Date of accounts (yyyy-mm-dd)
     * @param dateOfAccounts Value for String
     */
    @JsonSetter("DateOfAccounts")
    public void setDateOfAccounts(String dateOfAccounts) {
        this.dateOfAccounts = dateOfAccounts;
    }

    /**
     * Getter for DebtGearing.
     * Value for Debt Gearing for the latest accounts for the limited company (as percentage
     * ZZZZZ.9) Defaul -999999.9
     * @return Returns the Double
     */
    @JsonGetter("DebtGearing")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getDebtGearing() {
        return debtGearing;
    }

    /**
     * Setter for DebtGearing.
     * Value for Debt Gearing for the latest accounts for the limited company (as percentage
     * ZZZZZ.9) Defaul -999999.9
     * @param debtGearing Value for Double
     */
    @JsonSetter("DebtGearing")
    public void setDebtGearing(Double debtGearing) {
        this.debtGearing = debtGearing;
    }

    /**
     * Getter for DirectorsCIFASFlag.
     * Indicator showing whether CIFAS information is available against any of the company directors
     * - Y = Information detected; N = No information detected; BLANK = No entitlement to CIFAS
     * @return Returns the String
     */
    @JsonGetter("DirectorsCIFASFlag")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDirectorsCIFASFlag() {
        return directorsCIFASFlag;
    }

    /**
     * Setter for DirectorsCIFASFlag.
     * Indicator showing whether CIFAS information is available against any of the company directors
     * - Y = Information detected; N = No information detected; BLANK = No entitlement to CIFAS
     * @param directorsCIFASFlag Value for String
     */
    @JsonSetter("DirectorsCIFASFlag")
    public void setDirectorsCIFASFlag(String directorsCIFASFlag) {
        this.directorsCIFASFlag = directorsCIFASFlag;
    }

    /**
     * Getter for DirectorsNOCFlag.
     * Indicator showing whether a Notice of Correction has been filed against any of the company
     * directors - Y = NOC filed; BLANK = No NOC filed
     * @return Returns the String
     */
    @JsonGetter("DirectorsNOCFlag")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDirectorsNOCFlag() {
        return directorsNOCFlag;
    }

    /**
     * Setter for DirectorsNOCFlag.
     * Indicator showing whether a Notice of Correction has been filed against any of the company
     * directors - Y = NOC filed; BLANK = No NOC filed
     * @param directorsNOCFlag Value for String
     */
    @JsonSetter("DirectorsNOCFlag")
    public void setDirectorsNOCFlag(String directorsNOCFlag) {
        this.directorsNOCFlag = directorsNOCFlag;
    }

    /**
     * Getter for Dividends.
     * Value for Dividends for the latest accounts for the limited company. Default -999999999999999
     * @return Returns the Double
     */
    @JsonGetter("Dividends")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getDividends() {
        return dividends;
    }

    /**
     * Setter for Dividends.
     * Value for Dividends for the latest accounts for the limited company. Default -999999999999999
     * @param dividends Value for Double
     */
    @JsonSetter("Dividends")
    public void setDividends(Double dividends) {
        this.dividends = dividends;
    }

    /**
     * Getter for DormancyFlag.
     * Indicator showing the dormancy status of the limited company - C = CRO dormancy; A = Dormant
     * accounts; N = Company not dormant/ No accounts; Q = Quasi-dormant
     * @return Returns the String
     */
    @JsonGetter("DormancyFlag")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDormancyFlag() {
        return dormancyFlag;
    }

    /**
     * Setter for DormancyFlag.
     * Indicator showing the dormancy status of the limited company - C = CRO dormancy; A = Dormant
     * accounts; N = Company not dormant/ No accounts; Q = Quasi-dormant
     * @param dormancyFlag Value for String
     */
    @JsonSetter("DormancyFlag")
    public void setDormancyFlag(String dormancyFlag) {
        this.dormancyFlag = dormancyFlag;
    }

    /**
     * Getter for EquityGearing.
     * Value for Equity Gearing for the latest accounts for the limited company (as percentage
     * ZZZZZ.9) Defaul -999999.9
     * @return Returns the Double
     */
    @JsonGetter("EquityGearing")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getEquityGearing() {
        return equityGearing;
    }

    /**
     * Setter for EquityGearing.
     * Value for Equity Gearing for the latest accounts for the limited company (as percentage
     * ZZZZZ.9) Defaul -999999.9
     * @param equityGearing Value for Double
     */
    @JsonSetter("EquityGearing")
    public void setEquityGearing(Double equityGearing) {
        this.equityGearing = equityGearing;
    }

    /**
     * Getter for FicheDate.
     * The date that the accounts for the limited company became available at Companies House
     * (yyyy-mm-dd)
     * @return Returns the String
     */
    @JsonGetter("FicheDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getFicheDate() {
        return ficheDate;
    }

    /**
     * Setter for FicheDate.
     * The date that the accounts for the limited company became available at Companies House
     * (yyyy-mm-dd)
     * @param ficheDate Value for String
     */
    @JsonSetter("FicheDate")
    public void setFicheDate(String ficheDate) {
        this.ficheDate = ficheDate;
    }

    /**
     * Getter for FiledAccsType.
     * Indicator of accounting method used to prepare the accounts - I = IFRS; G = GAAP
     * @return Returns the String
     */
    @JsonGetter("FiledAccsType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getFiledAccsType() {
        return filedAccsType;
    }

    /**
     * Setter for FiledAccsType.
     * Indicator of accounting method used to prepare the accounts - I = IFRS; G = GAAP
     * @param filedAccsType Value for String
     */
    @JsonSetter("FiledAccsType")
    public void setFiledAccsType(String filedAccsType) {
        this.filedAccsType = filedAccsType;
    }

    /**
     * Getter for FixedAssets.
     * Value for Fixed Assets for the latest accounts for the limited company. Default
     * -999999999999999
     * @return Returns the Double
     */
    @JsonGetter("FixedAssets")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getFixedAssets() {
        return fixedAssets;
    }

    /**
     * Setter for FixedAssets.
     * Value for Fixed Assets for the latest accounts for the limited company. Default
     * -999999999999999
     * @param fixedAssets Value for Double
     */
    @JsonSetter("FixedAssets")
    public void setFixedAssets(Double fixedAssets) {
        this.fixedAssets = fixedAssets;
    }

    /**
     * Getter for GrossAssets.
     * Value for Gross Assets for the latest accounts for the limited company Default
     * -999999999999999
     * @return Returns the Double
     */
    @JsonGetter("GrossAssets")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getGrossAssets() {
        return grossAssets;
    }

    /**
     * Setter for GrossAssets.
     * Value for Gross Assets for the latest accounts for the limited company Default
     * -999999999999999
     * @param grossAssets Value for Double
     */
    @JsonSetter("GrossAssets")
    public void setGrossAssets(Double grossAssets) {
        this.grossAssets = grossAssets;
    }

    /**
     * Getter for HasSubsidiaries.
     * Indicator showing whether the limited company has subsidiaries - Y = 1 or more subsidiaries;
     * N = No subsidiaries
     * @return Returns the String
     */
    @JsonGetter("HasSubsidiaries")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getHasSubsidiaries() {
        return hasSubsidiaries;
    }

    /**
     * Setter for HasSubsidiaries.
     * Indicator showing whether the limited company has subsidiaries - Y = 1 or more subsidiaries;
     * N = No subsidiaries
     * @param hasSubsidiaries Value for String
     */
    @JsonSetter("HasSubsidiaries")
    public void setHasSubsidiaries(String hasSubsidiaries) {
        this.hasSubsidiaries = hasSubsidiaries;
    }

    /**
     * Getter for HighestValueCCJ.
     * The value of the highest value County Court Judgement registered against the limited company
     * during the last 6 years
     * @return Returns the Double
     */
    @JsonGetter("HighestValueCCJ")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getHighestValueCCJ() {
        return highestValueCCJ;
    }

    /**
     * Setter for HighestValueCCJ.
     * The value of the highest value County Court Judgement registered against the limited company
     * during the last 6 years
     * @param highestValueCCJ Value for Double
     */
    @JsonSetter("HighestValueCCJ")
    public void setHighestValueCCJ(Double highestValueCCJ) {
        this.highestValueCCJ = highestValueCCJ;
    }

    /**
     * Getter for IncompleteDirsFlag.
     * Indicator showing whether full directors information is available from a Confirmation
     * Statement, or information is available only from '288' directors change documents - Y =
     * Confirmation Statement date is present; N = No Confirmation Statement date present
     * @return Returns the String
     */
    @JsonGetter("IncompleteDirsFlag")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getIncompleteDirsFlag() {
        return incompleteDirsFlag;
    }

    /**
     * Setter for IncompleteDirsFlag.
     * Indicator showing whether full directors information is available from a Confirmation
     * Statement, or information is available only from '288' directors change documents - Y =
     * Confirmation Statement date is present; N = No Confirmation Statement date present
     * @param incompleteDirsFlag Value for String
     */
    @JsonSetter("IncompleteDirsFlag")
    public void setIncompleteDirsFlag(String incompleteDirsFlag) {
        this.incompleteDirsFlag = incompleteDirsFlag;
    }

    /**
     * Getter for IntangibleAssets.
     * Value for Intangible Assets for the latest accounts for the limited company Default
     * -999999999999999
     * @return Returns the Double
     */
    @JsonGetter("IntangibleAssets")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getIntangibleAssets() {
        return intangibleAssets;
    }

    /**
     * Setter for IntangibleAssets.
     * Value for Intangible Assets for the latest accounts for the limited company Default
     * -999999999999999
     * @param intangibleAssets Value for Double
     */
    @JsonSetter("IntangibleAssets")
    public void setIntangibleAssets(Double intangibleAssets) {
        this.intangibleAssets = intangibleAssets;
    }

    /**
     * Getter for IsSubsidiary.
     * Indicator showing whether the limited company is a subsidiary - 1 = No parent/ultimate; 2 =
     * Same parent & ultimate; 3 = Different parent & ultimate
     * @return Returns the String
     */
    @JsonGetter("IsSubsidiary")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getIsSubsidiary() {
        return isSubsidiary;
    }

    /**
     * Setter for IsSubsidiary.
     * Indicator showing whether the limited company is a subsidiary - 1 = No parent/ultimate; 2 =
     * Same parent & ultimate; 3 = Different parent & ultimate
     * @param isSubsidiary Value for String
     */
    @JsonSetter("IsSubsidiary")
    public void setIsSubsidiary(String isSubsidiary) {
        this.isSubsidiary = isSubsidiary;
    }

    /**
     * Getter for IssuedCapital.
     * Value for Issued Capital for the latest accounts for the limited company Default
     * -999999999999999
     * @return Returns the Double
     */
    @JsonGetter("IssuedCapital")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getIssuedCapital() {
        return issuedCapital;
    }

    /**
     * Setter for IssuedCapital.
     * Value for Issued Capital for the latest accounts for the limited company Default
     * -999999999999999
     * @param issuedCapital Value for Double
     */
    @JsonSetter("IssuedCapital")
    public void setIssuedCapital(Double issuedCapital) {
        this.issuedCapital = issuedCapital;
    }

    /**
     * Getter for LastDerogatoryItem.
     * Specification of the type of the last Derogatory Item against the limited company - C =
     * Receiver Appointment; D = Cessation of Receiver; E = Winding up Petition; F = Dismissal of
     * Winding up Petition; G = Winding up Order; H = Voluntary Appointment of Liquidator; I =
     * Meeting of Creditors; J = Resolution to Wind Up; K = Intentions to Dissolve; L = Dissolution
     * ; M = Reinstatement; Q = Administrator Appointed; R = Administrator Dismissal; S = Approval
     * of Voluntary Arrangement; T = Completion of Voluntary Arrangement; U = Compulsory Appointment
     * of Liquidator; V = Revocations of Voluntary Arrangement; W = Suspension of Voluntary
     * Arrangement; X = Intention to Dissolve Discontinued; BLANK = Not Applicable
     * @return Returns the String
     */
    @JsonGetter("LastDerogatoryItem")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLastDerogatoryItem() {
        return lastDerogatoryItem;
    }

    /**
     * Setter for LastDerogatoryItem.
     * Specification of the type of the last Derogatory Item against the limited company - C =
     * Receiver Appointment; D = Cessation of Receiver; E = Winding up Petition; F = Dismissal of
     * Winding up Petition; G = Winding up Order; H = Voluntary Appointment of Liquidator; I =
     * Meeting of Creditors; J = Resolution to Wind Up; K = Intentions to Dissolve; L = Dissolution
     * ; M = Reinstatement; Q = Administrator Appointed; R = Administrator Dismissal; S = Approval
     * of Voluntary Arrangement; T = Completion of Voluntary Arrangement; U = Compulsory Appointment
     * of Liquidator; V = Revocations of Voluntary Arrangement; W = Suspension of Voluntary
     * Arrangement; X = Intention to Dissolve Discontinued; BLANK = Not Applicable
     * @param lastDerogatoryItem Value for String
     */
    @JsonSetter("LastDerogatoryItem")
    public void setLastDerogatoryItem(String lastDerogatoryItem) {
        this.lastDerogatoryItem = lastDerogatoryItem;
    }

    /**
     * Getter for LatenessAccounts.
     * The number of whole months by which the accounts for the limited company are overdue -
     * Positive Number = Late Accounts; Negative Number = Accounts Not Yet Due. Default -999
     * @return Returns the String
     */
    @JsonGetter("LatenessAccounts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLatenessAccounts() {
        return latenessAccounts;
    }

    /**
     * Setter for LatenessAccounts.
     * The number of whole months by which the accounts for the limited company are overdue -
     * Positive Number = Late Accounts; Negative Number = Accounts Not Yet Due. Default -999
     * @param latenessAccounts Value for String
     */
    @JsonSetter("LatenessAccounts")
    public void setLatenessAccounts(String latenessAccounts) {
        this.latenessAccounts = latenessAccounts;
    }

    /**
     * Getter for LatestAccountsType.
     * Indicator showing the type of accounts - 0 = Type not available; 1 = Full accounts; 2 = Small
     * company; 3 = Medium company; 4 = Group; 5 = Dormant; 6 = Interim; 7 = Initial; 8 = Total
     * exemption (Full); 9 = Total exemption (Small); A = Partial exemption G = Micro-Entities
     * Accounts; E = Audit Exemption Subsidiary; F = Filing Exemption Subsidiary; Z = None of the
     * above
     * @return Returns the String
     */
    @JsonGetter("LatestAccountsType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLatestAccountsType() {
        return latestAccountsType;
    }

    /**
     * Setter for LatestAccountsType.
     * Indicator showing the type of accounts - 0 = Type not available; 1 = Full accounts; 2 = Small
     * company; 3 = Medium company; 4 = Group; 5 = Dormant; 6 = Interim; 7 = Initial; 8 = Total
     * exemption (Full); 9 = Total exemption (Small); A = Partial exemption G = Micro-Entities
     * Accounts; E = Audit Exemption Subsidiary; F = Filing Exemption Subsidiary; Z = None of the
     * above
     * @param latestAccountsType Value for String
     */
    @JsonSetter("LatestAccountsType")
    public void setLatestAccountsType(String latestAccountsType) {
        this.latestAccountsType = latestAccountsType;
    }

    /**
     * Getter for LegalStatus.
     * The legal status of the limited company - ' ' = Blank; 1 = Private Unlimited; 2 = Private
     * Limited; 3 = PLC; 4 = Old Public Company; 5 = Private Company Limited by Guarantee (Exempt
     * from using word 'Limited'); 6 = Limited Partnership; 7 = Private Limited Company Without
     * Share Capital; 8 = Company Converted / Closed; 9 = Private Unlimited Company Without Share
     * Capital; 0 = Other; A = Private Company Limited by Shares (Exempt from using word 'Limited');
     * When the Company Number Prefix = CI or SL, there are 3 flags as follows - 1 = ICVC
     * (Securities); 2 = ICVC (Warrant); 3 = ICVC (Umbrella)
     * @return Returns the String
     */
    @JsonGetter("LegalStatus")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLegalStatus() {
        return legalStatus;
    }

    /**
     * Setter for LegalStatus.
     * The legal status of the limited company - ' ' = Blank; 1 = Private Unlimited; 2 = Private
     * Limited; 3 = PLC; 4 = Old Public Company; 5 = Private Company Limited by Guarantee (Exempt
     * from using word 'Limited'); 6 = Limited Partnership; 7 = Private Limited Company Without
     * Share Capital; 8 = Company Converted / Closed; 9 = Private Unlimited Company Without Share
     * Capital; 0 = Other; A = Private Company Limited by Shares (Exempt from using word 'Limited');
     * When the Company Number Prefix = CI or SL, there are 3 flags as follows - 1 = ICVC
     * (Securities); 2 = ICVC (Warrant); 3 = ICVC (Umbrella)
     * @param legalStatus Value for String
     */
    @JsonSetter("LegalStatus")
    public void setLegalStatus(String legalStatus) {
        this.legalStatus = legalStatus;
    }

    /**
     * Getter for LimitedCompanyDelphiPayment.
     * @return Returns the List of LimitedCompanyDelphiPayment
     */
    @JsonGetter("LimitedCompanyDelphiPayment")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<LimitedCompanyDelphiPayment> getLimitedCompanyDelphiPayment() {
        return limitedCompanyDelphiPayment;
    }

    /**
     * Setter for LimitedCompanyDelphiPayment.
     * @param limitedCompanyDelphiPayment Value for List of LimitedCompanyDelphiPayment
     */
    @JsonSetter("LimitedCompanyDelphiPayment")
    public void setLimitedCompanyDelphiPayment(List<LimitedCompanyDelphiPayment> limitedCompanyDelphiPayment) {
        this.limitedCompanyDelphiPayment = limitedCompanyDelphiPayment;
    }

    /**
     * Getter for LimitedCompanyDelphiRisk.
     * @return Returns the List of LimitedCompanyDelphiRisk
     */
    @JsonGetter("LimitedCompanyDelphiRisk")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<LimitedCompanyDelphiRisk> getLimitedCompanyDelphiRisk() {
        return limitedCompanyDelphiRisk;
    }

    /**
     * Setter for LimitedCompanyDelphiRisk.
     * @param limitedCompanyDelphiRisk Value for List of LimitedCompanyDelphiRisk
     */
    @JsonSetter("LimitedCompanyDelphiRisk")
    public void setLimitedCompanyDelphiRisk(List<LimitedCompanyDelphiRisk> limitedCompanyDelphiRisk) {
        this.limitedCompanyDelphiRisk = limitedCompanyDelphiRisk;
    }

    /**
     * Getter for LimitedCompanyDelphiCAIS.
     * @return Returns the LimitedCompanyDelphiCAIS
     */
    @JsonGetter("LimitedCompanyDelphiCAIS")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public LimitedCompanyDelphiCAIS getLimitedCompanyDelphiCAIS() {
        return limitedCompanyDelphiCAIS;
    }

    /**
     * Setter for LimitedCompanyDelphiCAIS.
     * @param limitedCompanyDelphiCAIS Value for LimitedCompanyDelphiCAIS
     */
    @JsonSetter("LimitedCompanyDelphiCAIS")
    public void setLimitedCompanyDelphiCAIS(LimitedCompanyDelphiCAIS limitedCompanyDelphiCAIS) {
        this.limitedCompanyDelphiCAIS = limitedCompanyDelphiCAIS;
    }

    /**
     * Getter for LiquidityStandardRatio.
     * Value for Liquidity Standard Ratio for the latest accounts for the limited company. Default
     * -999999.9
     * @return Returns the Double
     */
    @JsonGetter("LiquidityStandardRatio")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getLiquidityStandardRatio() {
        return liquidityStandardRatio;
    }

    /**
     * Setter for LiquidityStandardRatio.
     * Value for Liquidity Standard Ratio for the latest accounts for the limited company. Default
     * -999999.9
     * @param liquidityStandardRatio Value for Double
     */
    @JsonSetter("LiquidityStandardRatio")
    public void setLiquidityStandardRatio(Double liquidityStandardRatio) {
        this.liquidityStandardRatio = liquidityStandardRatio;
    }

    /**
     * Getter for NetWorth.
     * Value for Net Worth for the latest accounts for the limited company Default -999999999999999
     * @return Returns the Double
     */
    @JsonGetter("NetWorth")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getNetWorth() {
        return netWorth;
    }

    /**
     * Setter for NetWorth.
     * Value for Net Worth for the latest accounts for the limited company Default -999999999999999
     * @param netWorth Value for Double
     */
    @JsonSetter("NetWorth")
    public void setNetWorth(Double netWorth) {
        this.netWorth = netWorth;
    }

    /**
     * Getter for NumAppointmentsLast12.
     * The number of appointments during the last 12 months, expressed as a percentage of the number
     * of directors of the current board
     * @return Returns the Double
     */
    @JsonGetter("NumAppointmentsLast12")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getNumAppointmentsLast12() {
        return numAppointmentsLast12;
    }

    /**
     * Setter for NumAppointmentsLast12.
     * The number of appointments during the last 12 months, expressed as a percentage of the number
     * of directors of the current board
     * @param numAppointmentsLast12 Value for Double
     */
    @JsonSetter("NumAppointmentsLast12")
    public void setNumAppointmentsLast12(Double numAppointmentsLast12) {
        this.numAppointmentsLast12 = numAppointmentsLast12;
    }

    /**
     * Getter for NumApprovalVolArrangement.
     * The number of voluntary arrangements that have been approved for the limited company
     * @return Returns the Integer
     */
    @JsonGetter("NumApprovalVolArrangement")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumApprovalVolArrangement() {
        return numApprovalVolArrangement;
    }

    /**
     * Setter for NumApprovalVolArrangement.
     * The number of voluntary arrangements that have been approved for the limited company
     * @param numApprovalVolArrangement Value for Integer
     */
    @JsonSetter("NumApprovalVolArrangement")
    public void setNumApprovalVolArrangement(Integer numApprovalVolArrangement) {
        this.numApprovalVolArrangement = numApprovalVolArrangement;
    }

    /**
     * Getter for NumApptAdministrator.
     * The number of appointments of administrators to the limited company
     * @return Returns the Integer
     */
    @JsonGetter("NumApptAdministrator")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumApptAdministrator() {
        return numApptAdministrator;
    }

    /**
     * Setter for NumApptAdministrator.
     * The number of appointments of administrators to the limited company
     * @param numApptAdministrator Value for Integer
     */
    @JsonSetter("NumApptAdministrator")
    public void setNumApptAdministrator(Integer numApptAdministrator) {
        this.numApptAdministrator = numApptAdministrator;
    }

    /**
     * Getter for NumApptCompLiquidator.
     * The number of compulsory appointments of a liquidator to the limited company
     * @return Returns the Integer
     */
    @JsonGetter("NumApptCompLiquidator")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumApptCompLiquidator() {
        return numApptCompLiquidator;
    }

    /**
     * Setter for NumApptCompLiquidator.
     * The number of compulsory appointments of a liquidator to the limited company
     * @param numApptCompLiquidator Value for Integer
     */
    @JsonSetter("NumApptCompLiquidator")
    public void setNumApptCompLiquidator(Integer numApptCompLiquidator) {
        this.numApptCompLiquidator = numApptCompLiquidator;
    }

    /**
     * Getter for NumApptReceiver.
     * The number of appointments of a receiver or administrative receiver to the limited company
     * @return Returns the Integer
     */
    @JsonGetter("NumApptReceiver")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumApptReceiver() {
        return numApptReceiver;
    }

    /**
     * Setter for NumApptReceiver.
     * The number of appointments of a receiver or administrative receiver to the limited company
     * @param numApptReceiver Value for Integer
     */
    @JsonSetter("NumApptReceiver")
    public void setNumApptReceiver(Integer numApptReceiver) {
        this.numApptReceiver = numApptReceiver;
    }

    /**
     * Getter for NumApptVolLiquidator.
     * The number of voluntary appointments of a liquidator to the limited company
     * @return Returns the Integer
     */
    @JsonGetter("NumApptVolLiquidator")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumApptVolLiquidator() {
        return numApptVolLiquidator;
    }

    /**
     * Setter for NumApptVolLiquidator.
     * The number of voluntary appointments of a liquidator to the limited company
     * @param numApptVolLiquidator Value for Integer
     */
    @JsonSetter("NumApptVolLiquidator")
    public void setNumApptVolLiquidator(Integer numApptVolLiquidator) {
        this.numApptVolLiquidator = numApptVolLiquidator;
    }

    /**
     * Getter for NumCompanyDissolved.
     * The number of dissolution notices against the limited company
     * @return Returns the Integer
     */
    @JsonGetter("NumCompanyDissolved")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumCompanyDissolved() {
        return numCompanyDissolved;
    }

    /**
     * Setter for NumCompanyDissolved.
     * The number of dissolution notices against the limited company
     * @param numCompanyDissolved Value for Integer
     */
    @JsonSetter("NumCompanyDissolved")
    public void setNumCompanyDissolved(Integer numCompanyDissolved) {
        this.numCompanyDissolved = numCompanyDissolved;
    }

    /**
     * Getter for NumCompanyReinstated.
     * The number of reinstated notices against the limited company
     * @return Returns the Integer
     */
    @JsonGetter("NumCompanyReinstated")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumCompanyReinstated() {
        return numCompanyReinstated;
    }

    /**
     * Setter for NumCompanyReinstated.
     * The number of reinstated notices against the limited company
     * @param numCompanyReinstated Value for Integer
     */
    @JsonSetter("NumCompanyReinstated")
    public void setNumCompanyReinstated(Integer numCompanyReinstated) {
        this.numCompanyReinstated = numCompanyReinstated;
    }

    /**
     * Getter for NumCompletionsVolArrangement.
     * The number of voluntary arrangements that have been completed by the limited company
     * @return Returns the Integer
     */
    @JsonGetter("NumCompletionsVolArrangement")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumCompletionsVolArrangement() {
        return numCompletionsVolArrangement;
    }

    /**
     * Setter for NumCompletionsVolArrangement.
     * The number of voluntary arrangements that have been completed by the limited company
     * @param numCompletionsVolArrangement Value for Integer
     */
    @JsonSetter("NumCompletionsVolArrangement")
    public void setNumCompletionsVolArrangement(Integer numCompletionsVolArrangement) {
        this.numCompletionsVolArrangement = numCompletionsVolArrangement;
    }

    /**
     * Getter for NumCurrDirs.
     * The number of current directors for the limited company
     * @return Returns the Integer
     */
    @JsonGetter("NumCurrDirs")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumCurrDirs() {
        return numCurrDirs;
    }

    /**
     * Setter for NumCurrDirs.
     * The number of current directors for the limited company
     * @param numCurrDirs Value for Integer
     */
    @JsonSetter("NumCurrDirs")
    public void setNumCurrDirs(Integer numCurrDirs) {
        this.numCurrDirs = numCurrDirs;
    }

    /**
     * Getter for NumDirsHoldingShares.
     * The number of directors holding shares in the limited company
     * @return Returns the Integer
     */
    @JsonGetter("NumDirsHoldingShares")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumDirsHoldingShares() {
        return numDirsHoldingShares;
    }

    /**
     * Setter for NumDirsHoldingShares.
     * The number of directors holding shares in the limited company
     * @param numDirsHoldingShares Value for Integer
     */
    @JsonSetter("NumDirsHoldingShares")
    public void setNumDirsHoldingShares(Integer numDirsHoldingShares) {
        this.numDirsHoldingShares = numDirsHoldingShares;
    }

    /**
     * Getter for NumDirsIncorpAgents.
     * The number of current directors of the limited company that act as incorporation agents
     * @return Returns the Integer
     */
    @JsonGetter("NumDirsIncorpAgents")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumDirsIncorpAgents() {
        return numDirsIncorpAgents;
    }

    /**
     * Setter for NumDirsIncorpAgents.
     * The number of current directors of the limited company that act as incorporation agents
     * @param numDirsIncorpAgents Value for Integer
     */
    @JsonSetter("NumDirsIncorpAgents")
    public void setNumDirsIncorpAgents(Integer numDirsIncorpAgents) {
        this.numDirsIncorpAgents = numDirsIncorpAgents;
    }

    /**
     * Getter for NumDischargeAdministrator.
     * The number of discharges of administrators from the limited company
     * @return Returns the Integer
     */
    @JsonGetter("NumDischargeAdministrator")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumDischargeAdministrator() {
        return numDischargeAdministrator;
    }

    /**
     * Setter for NumDischargeAdministrator.
     * The number of discharges of administrators from the limited company
     * @param numDischargeAdministrator Value for Integer
     */
    @JsonSetter("NumDischargeAdministrator")
    public void setNumDischargeAdministrator(Integer numDischargeAdministrator) {
        this.numDischargeAdministrator = numDischargeAdministrator;
    }

    /**
     * Getter for NumDismissedPetition.
     * The number of dismissals of winding up petitions recorded against the limited company
     * @return Returns the Integer
     */
    @JsonGetter("NumDismissedPetition")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumDismissedPetition() {
        return numDismissedPetition;
    }

    /**
     * Setter for NumDismissedPetition.
     * The number of dismissals of winding up petitions recorded against the limited company
     * @param numDismissedPetition Value for Integer
     */
    @JsonSetter("NumDismissedPetition")
    public void setNumDismissedPetition(Integer numDismissedPetition) {
        this.numDismissedPetition = numDismissedPetition;
    }

    /**
     * Getter for NumDisqCurrDirs.
     * The number of current directors of the limited company that are disqualified directors
     * @return Returns the Integer
     */
    @JsonGetter("NumDisqCurrDirs")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumDisqCurrDirs() {
        return numDisqCurrDirs;
    }

    /**
     * Setter for NumDisqCurrDirs.
     * The number of current directors of the limited company that are disqualified directors
     * @param numDisqCurrDirs Value for Integer
     */
    @JsonSetter("NumDisqCurrDirs")
    public void setNumDisqCurrDirs(Integer numDisqCurrDirs) {
        this.numDisqCurrDirs = numDisqCurrDirs;
    }

    /**
     * Getter for NumEmployees.
     * The number of employees for the limited company
     * @return Returns the Double
     */
    @JsonGetter("NumEmployees")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getNumEmployees() {
        return numEmployees;
    }

    /**
     * Setter for NumEmployees.
     * The number of employees for the limited company
     * @param numEmployees Value for Double
     */
    @JsonSetter("NumEmployees")
    public void setNumEmployees(Double numEmployees) {
        this.numEmployees = numEmployees;
    }

    /**
     * Getter for NumIntentionToDissolve.
     * The number of notices of intention to dissolve the company by Companies House
     * @return Returns the Integer
     */
    @JsonGetter("NumIntentionToDissolve")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumIntentionToDissolve() {
        return numIntentionToDissolve;
    }

    /**
     * Setter for NumIntentionToDissolve.
     * The number of notices of intention to dissolve the company by Companies House
     * @param numIntentionToDissolve Value for Integer
     */
    @JsonSetter("NumIntentionToDissolve")
    public void setNumIntentionToDissolve(Integer numIntentionToDissolve) {
        this.numIntentionToDissolve = numIntentionToDissolve;
    }

    /**
     * Getter for NumMeetingsCreditors.
     * The number of meeting of creditors registered against the limited company
     * @return Returns the Integer
     */
    @JsonGetter("NumMeetingsCreditors")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumMeetingsCreditors() {
        return numMeetingsCreditors;
    }

    /**
     * Setter for NumMeetingsCreditors.
     * The number of meeting of creditors registered against the limited company
     * @param numMeetingsCreditors Value for Integer
     */
    @JsonSetter("NumMeetingsCreditors")
    public void setNumMeetingsCreditors(Integer numMeetingsCreditors) {
        this.numMeetingsCreditors = numMeetingsCreditors;
    }

    /**
     * Getter for NumMemArtsChangesLast12Months.
     * The number of changes to the memorandum and / or articles of association for the limited
     * company in the last 12 months
     * @return Returns the Integer
     */
    @JsonGetter("NumMemArtsChangesLast12Months")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumMemArtsChangesLast12Months() {
        return numMemArtsChangesLast12Months;
    }

    /**
     * Setter for NumMemArtsChangesLast12Months.
     * The number of changes to the memorandum and / or articles of association for the limited
     * company in the last 12 months
     * @param numMemArtsChangesLast12Months Value for Integer
     */
    @JsonSetter("NumMemArtsChangesLast12Months")
    public void setNumMemArtsChangesLast12Months(Integer numMemArtsChangesLast12Months) {
        this.numMemArtsChangesLast12Months = numMemArtsChangesLast12Months;
    }

    /**
     * Getter for NumPetitionCompWindUp.
     * The number of winding up petitions presented against the limited company
     * @return Returns the Integer
     */
    @JsonGetter("NumPetitionCompWindUp")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumPetitionCompWindUp() {
        return numPetitionCompWindUp;
    }

    /**
     * Setter for NumPetitionCompWindUp.
     * The number of winding up petitions presented against the limited company
     * @param numPetitionCompWindUp Value for Integer
     */
    @JsonSetter("NumPetitionCompWindUp")
    public void setNumPetitionCompWindUp(Integer numPetitionCompWindUp) {
        this.numPetitionCompWindUp = numPetitionCompWindUp;
    }

    /**
     * Getter for NumReceiverCeasing.
     * The number of cessations of a receiver or administrative receiver from the limited company
     * @return Returns the Integer
     */
    @JsonGetter("NumReceiverCeasing")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumReceiverCeasing() {
        return numReceiverCeasing;
    }

    /**
     * Setter for NumReceiverCeasing.
     * The number of cessations of a receiver or administrative receiver from the limited company
     * @param numReceiverCeasing Value for Integer
     */
    @JsonSetter("NumReceiverCeasing")
    public void setNumReceiverCeasing(Integer numReceiverCeasing) {
        this.numReceiverCeasing = numReceiverCeasing;
    }

    /**
     * Getter for NumRegOfficeChangesLast12Months.
     * The number of changes to the Registered Office for the limited company in the last 12 months
     * @return Returns the Integer
     */
    @JsonGetter("NumRegOfficeChangesLast12Months")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumRegOfficeChangesLast12Months() {
        return numRegOfficeChangesLast12Months;
    }

    /**
     * Setter for NumRegOfficeChangesLast12Months.
     * The number of changes to the Registered Office for the limited company in the last 12 months
     * @param numRegOfficeChangesLast12Months Value for Integer
     */
    @JsonSetter("NumRegOfficeChangesLast12Months")
    public void setNumRegOfficeChangesLast12Months(Integer numRegOfficeChangesLast12Months) {
        this.numRegOfficeChangesLast12Months = numRegOfficeChangesLast12Months;
    }

    /**
     * Getter for NumResolutionWindUp.
     * The number of resolutions to wind up the limited company
     * @return Returns the Integer
     */
    @JsonGetter("NumResolutionWindUp")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumResolutionWindUp() {
        return numResolutionWindUp;
    }

    /**
     * Setter for NumResolutionWindUp.
     * The number of resolutions to wind up the limited company
     * @param numResolutionWindUp Value for Integer
     */
    @JsonSetter("NumResolutionWindUp")
    public void setNumResolutionWindUp(Integer numResolutionWindUp) {
        this.numResolutionWindUp = numResolutionWindUp;
    }

    /**
     * Getter for NumRevocationVoluntaryArrangement.
     * The number of voluntary arrangements that have been revoked for the limited company
     * @return Returns the Integer
     */
    @JsonGetter("NumRevocationVoluntaryArrangement")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumRevocationVoluntaryArrangement() {
        return numRevocationVoluntaryArrangement;
    }

    /**
     * Setter for NumRevocationVoluntaryArrangement.
     * The number of voluntary arrangements that have been revoked for the limited company
     * @param numRevocationVoluntaryArrangement Value for Integer
     */
    @JsonSetter("NumRevocationVoluntaryArrangement")
    public void setNumRevocationVoluntaryArrangement(Integer numRevocationVoluntaryArrangement) {
        this.numRevocationVoluntaryArrangement = numRevocationVoluntaryArrangement;
    }

    /**
     * Getter for NumSatMortgages.
     * The total number of wholly satisfied mortgages and charges for the limited company
     * @return Returns the Integer
     */
    @JsonGetter("NumSatMortgages")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumSatMortgages() {
        return numSatMortgages;
    }

    /**
     * Setter for NumSatMortgages.
     * The total number of wholly satisfied mortgages and charges for the limited company
     * @param numSatMortgages Value for Integer
     */
    @JsonSetter("NumSatMortgages")
    public void setNumSatMortgages(Integer numSatMortgages) {
        this.numSatMortgages = numSatMortgages;
    }

    /**
     * Getter for NumSuspensionVolArrangement.
     * The number of voluntary arrangements that have been suspended for the limited company
     * @return Returns the Integer
     */
    @JsonGetter("NumSuspensionVolArrangement")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumSuspensionVolArrangement() {
        return numSuspensionVolArrangement;
    }

    /**
     * Setter for NumSuspensionVolArrangement.
     * The number of voluntary arrangements that have been suspended for the limited company
     * @param numSuspensionVolArrangement Value for Integer
     */
    @JsonSetter("NumSuspensionVolArrangement")
    public void setNumSuspensionVolArrangement(Integer numSuspensionVolArrangement) {
        this.numSuspensionVolArrangement = numSuspensionVolArrangement;
    }

    /**
     * Getter for NumUnsatMortgages.
     * The total number of wholly unsatisfied mortgages and charges for the limited company
     * @return Returns the Integer
     */
    @JsonGetter("NumUnsatMortgages")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumUnsatMortgages() {
        return numUnsatMortgages;
    }

    /**
     * Setter for NumUnsatMortgages.
     * The total number of wholly unsatisfied mortgages and charges for the limited company
     * @param numUnsatMortgages Value for Integer
     */
    @JsonSetter("NumUnsatMortgages")
    public void setNumUnsatMortgages(Integer numUnsatMortgages) {
        this.numUnsatMortgages = numUnsatMortgages;
    }

    /**
     * Getter for NumUnsatPartSatMortgages.
     * The total number of unsatisfied and partially satisfied mortgages and charges for the limited
     * company
     * @return Returns the Integer
     */
    @JsonGetter("NumUnsatPartSatMortgages")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumUnsatPartSatMortgages() {
        return numUnsatPartSatMortgages;
    }

    /**
     * Setter for NumUnsatPartSatMortgages.
     * The total number of unsatisfied and partially satisfied mortgages and charges for the limited
     * company
     * @param numUnsatPartSatMortgages Value for Integer
     */
    @JsonSetter("NumUnsatPartSatMortgages")
    public void setNumUnsatPartSatMortgages(Integer numUnsatPartSatMortgages) {
        this.numUnsatPartSatMortgages = numUnsatPartSatMortgages;
    }

    /**
     * Getter for NumWindUpOrders.
     * The number of winding up orders registered against the limited company.
     * @return Returns the Integer
     */
    @JsonGetter("NumWindUpOrders")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumWindUpOrders() {
        return numWindUpOrders;
    }

    /**
     * Setter for NumWindUpOrders.
     * The number of winding up orders registered against the limited company.
     * @param numWindUpOrders Value for Integer
     */
    @JsonSetter("NumWindUpOrders")
    public void setNumWindUpOrders(Integer numWindUpOrders) {
        this.numWindUpOrders = numWindUpOrders;
    }

    /**
     * Getter for NumYearsAccosAvailable.
     * The number of years of accounts available for the limited company
     * @return Returns the Integer
     */
    @JsonGetter("NumYearsAccosAvailable")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumYearsAccosAvailable() {
        return numYearsAccosAvailable;
    }

    /**
     * Setter for NumYearsAccosAvailable.
     * The number of years of accounts available for the limited company
     * @param numYearsAccosAvailable Value for Integer
     */
    @JsonSetter("NumYearsAccosAvailable")
    public void setNumYearsAccosAvailable(Integer numYearsAccosAvailable) {
        this.numYearsAccosAvailable = numYearsAccosAvailable;
    }

    /**
     * Getter for NumYearsPreTaxProfitLessThan0Last4Years.
     * Value for Number of Years in the last 4 where the Pre-Tax Profit has been less than zero
     * @return Returns the Integer
     */
    @JsonGetter("NumYearsPreTaxProfitLessThan0Last4Years")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumYearsPreTaxProfitLessThan0Last4Years() {
        return numYearsPreTaxProfitLessThan0Last4Years;
    }

    /**
     * Setter for NumYearsPreTaxProfitLessThan0Last4Years.
     * Value for Number of Years in the last 4 where the Pre-Tax Profit has been less than zero
     * @param numYearsPreTaxProfitLessThan0Last4Years Value for Integer
     */
    @JsonSetter("NumYearsPreTaxProfitLessThan0Last4Years")
    public void setNumYearsPreTaxProfitLessThan0Last4Years(Integer numYearsPreTaxProfitLessThan0Last4Years) {
        this.numYearsPreTaxProfitLessThan0Last4Years = numYearsPreTaxProfitLessThan0Last4Years;
    }

    /**
     * Getter for NumberCCJs0To72.
     * The number of County Court Judgements registered against the limited company during the last
     * 6 years
     * @return Returns the Integer
     */
    @JsonGetter("NumberCCJs0To72")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumberCCJs0To72() {
        return numberCCJs0To72;
    }

    /**
     * Setter for NumberCCJs0To72.
     * The number of County Court Judgements registered against the limited company during the last
     * 6 years
     * @param numberCCJs0To72 Value for Integer
     */
    @JsonSetter("NumberCCJs0To72")
    public void setNumberCCJs0To72(Integer numberCCJs0To72) {
        this.numberCCJs0To72 = numberCCJs0To72;
    }

    /**
     * Getter for NumberCCJs13To24.
     * The number of County Court Judgements registered against the limited company between 12 and
     * 24 months ago
     * @return Returns the Integer
     */
    @JsonGetter("NumberCCJs13To24")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumberCCJs13To24() {
        return numberCCJs13To24;
    }

    /**
     * Setter for NumberCCJs13To24.
     * The number of County Court Judgements registered against the limited company between 12 and
     * 24 months ago
     * @param numberCCJs13To24 Value for Integer
     */
    @JsonSetter("NumberCCJs13To24")
    public void setNumberCCJs13To24(Integer numberCCJs13To24) {
        this.numberCCJs13To24 = numberCCJs13To24;
    }

    /**
     * Getter for NumberCCJs25To36.
     * The number of County Court Judgements registered against the limited company between 24 and
     * 36 months ago
     * @return Returns the Integer
     */
    @JsonGetter("NumberCCJs25To36")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumberCCJs25To36() {
        return numberCCJs25To36;
    }

    /**
     * Setter for NumberCCJs25To36.
     * The number of County Court Judgements registered against the limited company between 24 and
     * 36 months ago
     * @param numberCCJs25To36 Value for Integer
     */
    @JsonSetter("NumberCCJs25To36")
    public void setNumberCCJs25To36(Integer numberCCJs25To36) {
        this.numberCCJs25To36 = numberCCJs25To36;
    }

    /**
     * Getter for NumberCCJs37To48.
     * The number of County Court Judgements registered against the limited company between 36 and
     * 48 months ago
     * @return Returns the Integer
     */
    @JsonGetter("NumberCCJs37To48")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumberCCJs37To48() {
        return numberCCJs37To48;
    }

    /**
     * Setter for NumberCCJs37To48.
     * The number of County Court Judgements registered against the limited company between 36 and
     * 48 months ago
     * @param numberCCJs37To48 Value for Integer
     */
    @JsonSetter("NumberCCJs37To48")
    public void setNumberCCJs37To48(Integer numberCCJs37To48) {
        this.numberCCJs37To48 = numberCCJs37To48;
    }

    /**
     * Getter for NumberCCJs49To60.
     * The number of County Court Judgements registered against the limited company between 48 and
     * 60 months ago
     * @return Returns the Integer
     */
    @JsonGetter("NumberCCJs49To60")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumberCCJs49To60() {
        return numberCCJs49To60;
    }

    /**
     * Setter for NumberCCJs49To60.
     * The number of County Court Judgements registered against the limited company between 48 and
     * 60 months ago
     * @param numberCCJs49To60 Value for Integer
     */
    @JsonSetter("NumberCCJs49To60")
    public void setNumberCCJs49To60(Integer numberCCJs49To60) {
        this.numberCCJs49To60 = numberCCJs49To60;
    }

    /**
     * Getter for NumberCCJs61To72.
     * The number of County Court Judgements registered against the limited company between 60 and
     * 72 months ago
     * @return Returns the Integer
     */
    @JsonGetter("NumberCCJs61To72")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumberCCJs61To72() {
        return numberCCJs61To72;
    }

    /**
     * Setter for NumberCCJs61To72.
     * The number of County Court Judgements registered against the limited company between 60 and
     * 72 months ago
     * @param numberCCJs61To72 Value for Integer
     */
    @JsonSetter("NumberCCJs61To72")
    public void setNumberCCJs61To72(Integer numberCCJs61To72) {
        this.numberCCJs61To72 = numberCCJs61To72;
    }

    /**
     * Getter for NumberCCJsLast12Months.
     * The number of County Court Judgements registered against the limited company during the last
     * 12 months
     * @return Returns the Integer
     */
    @JsonGetter("NumberCCJsLast12Months")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumberCCJsLast12Months() {
        return numberCCJsLast12Months;
    }

    /**
     * Setter for NumberCCJsLast12Months.
     * The number of County Court Judgements registered against the limited company during the last
     * 12 months
     * @param numberCCJsLast12Months Value for Integer
     */
    @JsonSetter("NumberCCJsLast12Months")
    public void setNumberCCJsLast12Months(Integer numberCCJsLast12Months) {
        this.numberCCJsLast12Months = numberCCJsLast12Months;
    }

    /**
     * Getter for NumberDaysToFile.
     * The number of days between the accounting date of latest filed accounts for the limited
     * company and the date recorded at Companies House. Default -999
     * @return Returns the Integer
     */
    @JsonGetter("NumberDaysToFile")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumberDaysToFile() {
        return numberDaysToFile;
    }

    /**
     * Setter for NumberDaysToFile.
     * The number of days between the accounting date of latest filed accounts for the limited
     * company and the date recorded at Companies House. Default -999
     * @param numberDaysToFile Value for Integer
     */
    @JsonSetter("NumberDaysToFile")
    public void setNumberDaysToFile(Integer numberDaysToFile) {
        this.numberDaysToFile = numberDaysToFile;
    }

    /**
     * Getter for OldestCurrDirAge.
     * The age in years of the oldest current director of the limited company. Default -999
     * @return Returns the Integer
     */
    @JsonGetter("OldestCurrDirAge")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getOldestCurrDirAge() {
        return oldestCurrDirAge;
    }

    /**
     * Setter for OldestCurrDirAge.
     * The age in years of the oldest current director of the limited company. Default -999
     * @param oldestCurrDirAge Value for Integer
     */
    @JsonSetter("OldestCurrDirAge")
    public void setOldestCurrDirAge(Integer oldestCurrDirAge) {
        this.oldestCurrDirAge = oldestCurrDirAge;
    }

    /**
     * Getter for OutOfDateFlag.
     * Indicator showing whether more recent accounts for the limited company have been filed at
     * Companies House - Y = Accounts are out of date; N = Accounts are not out of date
     * @return Returns the String
     */
    @JsonGetter("OutOfDateFlag")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getOutOfDateFlag() {
        return outOfDateFlag;
    }

    /**
     * Setter for OutOfDateFlag.
     * Indicator showing whether more recent accounts for the limited company have been filed at
     * Companies House - Y = Accounts are out of date; N = Accounts are not out of date
     * @param outOfDateFlag Value for String
     */
    @JsonSetter("OutOfDateFlag")
    public void setOutOfDateFlag(String outOfDateFlag) {
        this.outOfDateFlag = outOfDateFlag;
    }

    /**
     * Getter for PercentChangeCapitalEmployed.
     * Value for percentage change of Capital Employed between the latest accounts and the previous
     * accounts for the limited company (as percentage ZZZZZ.9). Default -999999.9
     * @return Returns the Double
     */
    @JsonGetter("PercentChangeCapitalEmployed")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPercentChangeCapitalEmployed() {
        return percentChangeCapitalEmployed;
    }

    /**
     * Setter for PercentChangeCapitalEmployed.
     * Value for percentage change of Capital Employed between the latest accounts and the previous
     * accounts for the limited company (as percentage ZZZZZ.9). Default -999999.9
     * @param percentChangeCapitalEmployed Value for Double
     */
    @JsonSetter("PercentChangeCapitalEmployed")
    public void setPercentChangeCapitalEmployed(Double percentChangeCapitalEmployed) {
        this.percentChangeCapitalEmployed = percentChangeCapitalEmployed;
    }

    /**
     * Getter for PercentChangeCurrentRatio.
     * Value for percentage change of Current Ratio between the latest accounts and the previous
     * accounts for the limited company (as percentage ZZZZZ.9) Default -999999.9
     * @return Returns the Double
     */
    @JsonGetter("PercentChangeCurrentRatio")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPercentChangeCurrentRatio() {
        return percentChangeCurrentRatio;
    }

    /**
     * Setter for PercentChangeCurrentRatio.
     * Value for percentage change of Current Ratio between the latest accounts and the previous
     * accounts for the limited company (as percentage ZZZZZ.9) Default -999999.9
     * @param percentChangeCurrentRatio Value for Double
     */
    @JsonSetter("PercentChangeCurrentRatio")
    public void setPercentChangeCurrentRatio(Double percentChangeCurrentRatio) {
        this.percentChangeCurrentRatio = percentChangeCurrentRatio;
    }

    /**
     * Getter for PercentChangePreTaxProfitLoss.
     * Value for percentage change of Pre-Tax Profit Loss between the latest accounts and the
     * previous accounts for the limited company (as percentage ZZZZZ.9)
     * @return Returns the Double
     */
    @JsonGetter("PercentChangePreTaxProfitLoss")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPercentChangePreTaxProfitLoss() {
        return percentChangePreTaxProfitLoss;
    }

    /**
     * Setter for PercentChangePreTaxProfitLoss.
     * Value for percentage change of Pre-Tax Profit Loss between the latest accounts and the
     * previous accounts for the limited company (as percentage ZZZZZ.9)
     * @param percentChangePreTaxProfitLoss Value for Double
     */
    @JsonSetter("PercentChangePreTaxProfitLoss")
    public void setPercentChangePreTaxProfitLoss(Double percentChangePreTaxProfitLoss) {
        this.percentChangePreTaxProfitLoss = percentChangePreTaxProfitLoss;
    }

    /**
     * Getter for PercentChangeShareholdersFunds.
     * Value for percentage change of Shareholders Funds between the latest accounts and the
     * previous accounts for the limited company (as percentage ZZZZZ.9) Default -999999.9
     * @return Returns the Double
     */
    @JsonGetter("PercentChangeShareholdersFunds")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPercentChangeShareholdersFunds() {
        return percentChangeShareholdersFunds;
    }

    /**
     * Setter for PercentChangeShareholdersFunds.
     * Value for percentage change of Shareholders Funds between the latest accounts and the
     * previous accounts for the limited company (as percentage ZZZZZ.9) Default -999999.9
     * @param percentChangeShareholdersFunds Value for Double
     */
    @JsonSetter("PercentChangeShareholdersFunds")
    public void setPercentChangeShareholdersFunds(Double percentChangeShareholdersFunds) {
        this.percentChangeShareholdersFunds = percentChangeShareholdersFunds;
    }

    /**
     * Getter for PercentChangeTotalAssets.
     * Value for percentage change of Total Assets between the latest accounts and the previous
     * accounts for the limited company (as percentage ZZZZZ.9) Default -999999.9
     * @return Returns the Double
     */
    @JsonGetter("PercentChangeTotalAssets")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPercentChangeTotalAssets() {
        return percentChangeTotalAssets;
    }

    /**
     * Setter for PercentChangeTotalAssets.
     * Value for percentage change of Total Assets between the latest accounts and the previous
     * accounts for the limited company (as percentage ZZZZZ.9) Default -999999.9
     * @param percentChangeTotalAssets Value for Double
     */
    @JsonSetter("PercentChangeTotalAssets")
    public void setPercentChangeTotalAssets(Double percentChangeTotalAssets) {
        this.percentChangeTotalAssets = percentChangeTotalAssets;
    }

    /**
     * Getter for PercentageDirsResidentUK.
     * The percentage of the current board of directors who are resident within the UK. Default
     * -9999.9
     * @return Returns the Double
     */
    @JsonGetter("PercentageDirsResidentUK")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPercentageDirsResidentUK() {
        return percentageDirsResidentUK;
    }

    /**
     * Setter for PercentageDirsResidentUK.
     * The percentage of the current board of directors who are resident within the UK. Default
     * -9999.9
     * @param percentageDirsResidentUK Value for Double
     */
    @JsonSetter("PercentageDirsResidentUK")
    public void setPercentageDirsResidentUK(Double percentageDirsResidentUK) {
        this.percentageDirsResidentUK = percentageDirsResidentUK;
    }

    /**
     * Getter for PreTaxMarginQuartile.
     * Indicator showing the Pre-Tax Margin Quartile - 1 = Well above average; 2 = Above average; 3
     * = Below average; 4 = Well below average; Default 9
     * @return Returns the Integer
     */
    @JsonGetter("PreTaxMarginQuartile")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getPreTaxMarginQuartile() {
        return preTaxMarginQuartile;
    }

    /**
     * Setter for PreTaxMarginQuartile.
     * Indicator showing the Pre-Tax Margin Quartile - 1 = Well above average; 2 = Above average; 3
     * = Below average; 4 = Well below average; Default 9
     * @param preTaxMarginQuartile Value for Integer
     */
    @JsonSetter("PreTaxMarginQuartile")
    public void setPreTaxMarginQuartile(Integer preTaxMarginQuartile) {
        this.preTaxMarginQuartile = preTaxMarginQuartile;
    }

    /**
     * Getter for PreTaxProfitLoss.
     * Value for Pre-Tax Profit Loss for the latest accounts for the limited company Default
     * -999999999999999
     * @return Returns the Double
     */
    @JsonGetter("PreTaxProfitLoss")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPreTaxProfitLoss() {
        return preTaxProfitLoss;
    }

    /**
     * Setter for PreTaxProfitLoss.
     * Value for Pre-Tax Profit Loss for the latest accounts for the limited company Default
     * -999999999999999
     * @param preTaxProfitLoss Value for Double
     */
    @JsonSetter("PreTaxProfitLoss")
    public void setPreTaxProfitLoss(Double preTaxProfitLoss) {
        this.preTaxProfitLoss = preTaxProfitLoss;
    }

    /**
     * Getter for PreTaxProfitMargin.
     * Value for Pre-Tax Profit Loss for the latest accounts for the limited company (as percentage
     * ZZZZZ.9) Defaul -999999.9
     * @return Returns the Double
     */
    @JsonGetter("PreTaxProfitMargin")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPreTaxProfitMargin() {
        return preTaxProfitMargin;
    }

    /**
     * Setter for PreTaxProfitMargin.
     * Value for Pre-Tax Profit Loss for the latest accounts for the limited company (as percentage
     * ZZZZZ.9) Defaul -999999.9
     * @param preTaxProfitMargin Value for Double
     */
    @JsonSetter("PreTaxProfitMargin")
    public void setPreTaxProfitMargin(Double preTaxProfitMargin) {
        this.preTaxProfitMargin = preTaxProfitMargin;
    }

    /**
     * Getter for PrevAccountsDormancyFlag.
     * Indicator showing the dormancy status of the limited company at the previous accounts - C =
     * CRO dormancy; A = Dormant accounts; N = Company not dormant/ No accounts; Q = Quasi-dormant
     * @return Returns the String
     */
    @JsonGetter("PrevAccountsDormancyFlag")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPrevAccountsDormancyFlag() {
        return prevAccountsDormancyFlag;
    }

    /**
     * Setter for PrevAccountsDormancyFlag.
     * Indicator showing the dormancy status of the limited company at the previous accounts - C =
     * CRO dormancy; A = Dormant accounts; N = Company not dormant/ No accounts; Q = Quasi-dormant
     * @param prevAccountsDormancyFlag Value for String
     */
    @JsonSetter("PrevAccountsDormancyFlag")
    public void setPrevAccountsDormancyFlag(String prevAccountsDormancyFlag) {
        this.prevAccountsDormancyFlag = prevAccountsDormancyFlag;
    }

    /**
     * Getter for PrevAccsAvailabile.
     * Indicator showing whether previous accounts are available for the limited company - Y =
     * Previous accounts available; N = Previous accounts filed but unavailable; X = No previous
     * accounts filed
     * @return Returns the String
     */
    @JsonGetter("PrevAccsAvailabile")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPrevAccsAvailabile() {
        return prevAccsAvailabile;
    }

    /**
     * Setter for PrevAccsAvailabile.
     * Indicator showing whether previous accounts are available for the limited company - Y =
     * Previous accounts available; N = Previous accounts filed but unavailable; X = No previous
     * accounts filed
     * @param prevAccsAvailabile Value for String
     */
    @JsonSetter("PrevAccsAvailabile")
    public void setPrevAccsAvailabile(String prevAccsAvailabile) {
        this.prevAccsAvailabile = prevAccsAvailabile;
    }

    /**
     * Getter for PrevAccsConsAccounts.
     * Indicator showing whether the previous accounts for the limited company were consolidated - Y
     * = Consolidated; N = Not consolidated
     * @return Returns the String
     */
    @JsonGetter("PrevAccsConsAccounts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPrevAccsConsAccounts() {
        return prevAccsConsAccounts;
    }

    /**
     * Setter for PrevAccsConsAccounts.
     * Indicator showing whether the previous accounts for the limited company were consolidated - Y
     * = Consolidated; N = Not consolidated
     * @param prevAccsConsAccounts Value for String
     */
    @JsonSetter("PrevAccsConsAccounts")
    public void setPrevAccsConsAccounts(String prevAccsConsAccounts) {
        this.prevAccsConsAccounts = prevAccsConsAccounts;
    }

    /**
     * Getter for PrevAccsCurrency.
     * Currency under which the previous accounts for the limited company have been reported - ISO
     * currency code
     * @return Returns the String
     */
    @JsonGetter("PrevAccsCurrency")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPrevAccsCurrency() {
        return prevAccsCurrency;
    }

    /**
     * Setter for PrevAccsCurrency.
     * Currency under which the previous accounts for the limited company have been reported - ISO
     * currency code
     * @param prevAccsCurrency Value for String
     */
    @JsonSetter("PrevAccsCurrency")
    public void setPrevAccsCurrency(String prevAccsCurrency) {
        this.prevAccsCurrency = prevAccsCurrency;
    }

    /**
     * Getter for ProportionCurrDirsToPrevDirLast12.
     * The number of current directors expressed as a proportion of the number of directors who have
     * resigned during the last 12 months
     * @return Returns the Double
     */
    @JsonGetter("ProportionCurrDirsToPrevDirLast12")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getProportionCurrDirsToPrevDirLast12() {
        return proportionCurrDirsToPrevDirLast12;
    }

    /**
     * Setter for ProportionCurrDirsToPrevDirLast12.
     * The number of current directors expressed as a proportion of the number of directors who have
     * resigned during the last 12 months
     * @param proportionCurrDirsToPrevDirLast12 Value for Double
     */
    @JsonSetter("ProportionCurrDirsToPrevDirLast12")
    public void setProportionCurrDirsToPrevDirLast12(Double proportionCurrDirsToPrevDirLast12) {
        this.proportionCurrDirsToPrevDirLast12 = proportionCurrDirsToPrevDirLast12;
    }

    /**
     * Getter for RegOfficeCIFASIndicator.
     * Indicator showing whether CIFAS information is available at the companies registered office -
     * Y = Information detected; N = No information detected; BLANK = No entitlement to CIFAS
     * @return Returns the String
     */
    @JsonGetter("RegOfficeCIFASIndicator")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getRegOfficeCIFASIndicator() {
        return regOfficeCIFASIndicator;
    }

    /**
     * Setter for RegOfficeCIFASIndicator.
     * Indicator showing whether CIFAS information is available at the companies registered office -
     * Y = Information detected; N = No information detected; BLANK = No entitlement to CIFAS
     * @param regOfficeCIFASIndicator Value for String
     */
    @JsonSetter("RegOfficeCIFASIndicator")
    public void setRegOfficeCIFASIndicator(String regOfficeCIFASIndicator) {
        this.regOfficeCIFASIndicator = regOfficeCIFASIndicator;
    }

    /**
     * Getter for Region.
     * The regional location for the limited company provided by the initial Alpha Numeric of the
     * post code
     * @return Returns the String
     */
    @JsonGetter("Region")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getRegion() {
        return region;
    }

    /**
     * Setter for Region.
     * The regional location for the limited company provided by the initial Alpha Numeric of the
     * post code
     * @param region Value for String
     */
    @JsonSetter("Region")
    public void setRegion(String region) {
        this.region = region;
    }

    /**
     * Getter for ReportUpdateFlag.
     * Indicator showing Commercial Delphi Report Update Flag - 0 = No Update Available; 1 = More
     * Recent Accounts Filed; 2 = Accounts Imbalanced; 3 = Auditors Qualification Level 2; 4 =
     * Foreign Currency
     * @return Returns the String
     */
    @JsonGetter("ReportUpdateFlag")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getReportUpdateFlag() {
        return reportUpdateFlag;
    }

    /**
     * Setter for ReportUpdateFlag.
     * Indicator showing Commercial Delphi Report Update Flag - 0 = No Update Available; 1 = More
     * Recent Accounts Filed; 2 = Accounts Imbalanced; 3 = Auditors Qualification Level 2; 4 =
     * Foreign Currency
     * @param reportUpdateFlag Value for String
     */
    @JsonSetter("ReportUpdateFlag")
    public void setReportUpdateFlag(String reportUpdateFlag) {
        this.reportUpdateFlag = reportUpdateFlag;
    }

    /**
     * Getter for RetainedEarnings.
     * Value for Retained Earnings for the latest accounts for the limited company Default
     * -999999999999999
     * @return Returns the Double
     */
    @JsonGetter("RetainedEarnings")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getRetainedEarnings() {
        return retainedEarnings;
    }

    /**
     * Setter for RetainedEarnings.
     * Value for Retained Earnings for the latest accounts for the limited company Default
     * -999999999999999
     * @param retainedEarnings Value for Double
     */
    @JsonSetter("RetainedEarnings")
    public void setRetainedEarnings(Double retainedEarnings) {
        this.retainedEarnings = retainedEarnings;
    }

    /**
     * Getter for RetainedProfit.
     * Value for Retained Profit for the latest accounts for the limited company Default
     * -999999999999999
     * @return Returns the Double
     */
    @JsonGetter("RetainedProfit")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getRetainedProfit() {
        return retainedProfit;
    }

    /**
     * Setter for RetainedProfit.
     * Value for Retained Profit for the latest accounts for the limited company Default
     * -999999999999999
     * @param retainedProfit Value for Double
     */
    @JsonSetter("RetainedProfit")
    public void setRetainedProfit(Double retainedProfit) {
        this.retainedProfit = retainedProfit;
    }

    /**
     * Getter for ReturnOnAssets.
     * Value for Return On Assets for the latest accounts for the limited company (as percentage
     * ZZZZZ.9) Defaul -999999.9
     * @return Returns the Double
     */
    @JsonGetter("ReturnOnAssets")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getReturnOnAssets() {
        return returnOnAssets;
    }

    /**
     * Setter for ReturnOnAssets.
     * Value for Return On Assets for the latest accounts for the limited company (as percentage
     * ZZZZZ.9) Defaul -999999.9
     * @param returnOnAssets Value for Double
     */
    @JsonSetter("ReturnOnAssets")
    public void setReturnOnAssets(Double returnOnAssets) {
        this.returnOnAssets = returnOnAssets;
    }

    /**
     * Getter for ReturnOnAssetsQuartile.
     * Indicator showing the Return On Assets Quartile - 1 = Well above average; 2 = Above average;
     * 3 = Below average; 4 = Well below average; Default 9
     * @return Returns the Integer
     */
    @JsonGetter("ReturnOnAssetsQuartile")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getReturnOnAssetsQuartile() {
        return returnOnAssetsQuartile;
    }

    /**
     * Setter for ReturnOnAssetsQuartile.
     * Indicator showing the Return On Assets Quartile - 1 = Well above average; 2 = Above average;
     * 3 = Below average; 4 = Well below average; Default 9
     * @param returnOnAssetsQuartile Value for Integer
     */
    @JsonSetter("ReturnOnAssetsQuartile")
    public void setReturnOnAssetsQuartile(Integer returnOnAssetsQuartile) {
        this.returnOnAssetsQuartile = returnOnAssetsQuartile;
    }

    /**
     * Getter for ReturnOnCapital.
     * Value for Return On Capital for the latest accounts for the limited company (as percentage
     * ZZZZZ.9) Defaul -999999.9
     * @return Returns the Double
     */
    @JsonGetter("ReturnOnCapital")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getReturnOnCapital() {
        return returnOnCapital;
    }

    /**
     * Setter for ReturnOnCapital.
     * Value for Return On Capital for the latest accounts for the limited company (as percentage
     * ZZZZZ.9) Defaul -999999.9
     * @param returnOnCapital Value for Double
     */
    @JsonSetter("ReturnOnCapital")
    public void setReturnOnCapital(Double returnOnCapital) {
        this.returnOnCapital = returnOnCapital;
    }

    /**
     * Getter for RevaluationReserves.
     * Value for Revaluation Reserves for the latest accounts for the limited company Default
     * -999999999999999
     * @return Returns the Double
     */
    @JsonGetter("RevaluationReserves")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getRevaluationReserves() {
        return revaluationReserves;
    }

    /**
     * Setter for RevaluationReserves.
     * Value for Revaluation Reserves for the latest accounts for the limited company Default
     * -999999999999999
     * @param revaluationReserves Value for Double
     */
    @JsonSetter("RevaluationReserves")
    public void setRevaluationReserves(Double revaluationReserves) {
        this.revaluationReserves = revaluationReserves;
    }

    /**
     * Getter for SICInformation1980.
     * @return Returns the SICInfo1980
     */
    @JsonGetter("SICInformation1980")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public SICInfo1980 getSICInformation1980() {
        return sICInformation1980;
    }

    /**
     * Setter for SICInformation1980.
     * @param sICInformation1980 Value for SICInfo1980
     */
    @JsonSetter("SICInformation1980")
    public void setSICInformation1980(SICInfo1980 sICInformation1980) {
        this.sICInformation1980 = sICInformation1980;
    }

    /**
     * Getter for SICInformation1992.
     * @return Returns the SICInfo1992
     */
    @JsonGetter("SICInformation1992")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public SICInfo1992 getSICInformation1992() {
        return sICInformation1992;
    }

    /**
     * Setter for SICInformation1992.
     * @param sICInformation1992 Value for SICInfo1992
     */
    @JsonSetter("SICInformation1992")
    public void setSICInformation1992(SICInfo1992 sICInformation1992) {
        this.sICInformation1992 = sICInformation1992;
    }

    /**
     * Getter for ShareholdersFunds.
     * Value for Shareholders Funds for the latest accounts for the limited company Default
     * -999999999999999
     * @return Returns the Double
     */
    @JsonGetter("ShareholdersFunds")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getShareholdersFunds() {
        return shareholdersFunds;
    }

    /**
     * Setter for ShareholdersFunds.
     * Value for Shareholders Funds for the latest accounts for the limited company Default
     * -999999999999999
     * @param shareholdersFunds Value for Double
     */
    @JsonSetter("ShareholdersFunds")
    public void setShareholdersFunds(Double shareholdersFunds) {
        this.shareholdersFunds = shareholdersFunds;
    }

    /**
     * Getter for ShortLoans.
     * Value for Short Term Loans for the latest accounts for the limited company Default
     * -999999999999999
     * @return Returns the Double
     */
    @JsonGetter("ShortLoans")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getShortLoans() {
        return shortLoans;
    }

    /**
     * Setter for ShortLoans.
     * Value for Short Term Loans for the latest accounts for the limited company Default
     * -999999999999999
     * @param shortLoans Value for Double
     */
    @JsonSetter("ShortLoans")
    public void setShortLoans(Double shortLoans) {
        this.shortLoans = shortLoans;
    }

    /**
     * Getter for StocksWorkInProgressPercentCurrentAssets.
     * Value for Stocks Work In Progress as a percentage of Current Assets for the latest accounts
     * for the limited company (as percentage ZZZZZ.9)
     * @return Returns the Double
     */
    @JsonGetter("StocksWorkInProgressPercentCurrentAssets")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getStocksWorkInProgressPercentCurrentAssets() {
        return stocksWorkInProgressPercentCurrentAssets;
    }

    /**
     * Setter for StocksWorkInProgressPercentCurrentAssets.
     * Value for Stocks Work In Progress as a percentage of Current Assets for the latest accounts
     * for the limited company (as percentage ZZZZZ.9)
     * @param stocksWorkInProgressPercentCurrentAssets Value for Double
     */
    @JsonSetter("StocksWorkInProgressPercentCurrentAssets")
    public void setStocksWorkInProgressPercentCurrentAssets(Double stocksWorkInProgressPercentCurrentAssets) {
        this.stocksWorkInProgressPercentCurrentAssets = stocksWorkInProgressPercentCurrentAssets;
    }

    /**
     * Getter for TimeSinceLastAccsSubmitted.
     * The number of months since the last accounts for the limited company were filed at Companies
     * House. Default -99999
     * @return Returns the Integer
     */
    @JsonGetter("TimeSinceLastAccsSubmitted")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getTimeSinceLastAccsSubmitted() {
        return timeSinceLastAccsSubmitted;
    }

    /**
     * Setter for TimeSinceLastAccsSubmitted.
     * The number of months since the last accounts for the limited company were filed at Companies
     * House. Default -99999
     * @param timeSinceLastAccsSubmitted Value for Integer
     */
    @JsonSetter("TimeSinceLastAccsSubmitted")
    public void setTimeSinceLastAccsSubmitted(Integer timeSinceLastAccsSubmitted) {
        this.timeSinceLastAccsSubmitted = timeSinceLastAccsSubmitted;
    }

    /**
     * Getter for TimeSinceLastApprovalVolArrangement.
     * The number of months since the last voluntary arrangement has been approved for the limited
     * company. Default -99999
     * @return Returns the Double
     */
    @JsonGetter("TimeSinceLastApprovalVolArrangement")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTimeSinceLastApprovalVolArrangement() {
        return timeSinceLastApprovalVolArrangement;
    }

    /**
     * Setter for TimeSinceLastApprovalVolArrangement.
     * The number of months since the last voluntary arrangement has been approved for the limited
     * company. Default -99999
     * @param timeSinceLastApprovalVolArrangement Value for Double
     */
    @JsonSetter("TimeSinceLastApprovalVolArrangement")
    public void setTimeSinceLastApprovalVolArrangement(Double timeSinceLastApprovalVolArrangement) {
        this.timeSinceLastApprovalVolArrangement = timeSinceLastApprovalVolArrangement;
    }

    /**
     * Getter for TimeSinceLastApptAdministrator.
     * The number of months since the date of the last appointment of an administrator to the
     * limited company Default -99999
     * @return Returns the Double
     */
    @JsonGetter("TimeSinceLastApptAdministrator")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTimeSinceLastApptAdministrator() {
        return timeSinceLastApptAdministrator;
    }

    /**
     * Setter for TimeSinceLastApptAdministrator.
     * The number of months since the date of the last appointment of an administrator to the
     * limited company Default -99999
     * @param timeSinceLastApptAdministrator Value for Double
     */
    @JsonSetter("TimeSinceLastApptAdministrator")
    public void setTimeSinceLastApptAdministrator(Double timeSinceLastApptAdministrator) {
        this.timeSinceLastApptAdministrator = timeSinceLastApptAdministrator;
    }

    /**
     * Getter for TimeSinceLastApptCompLiquidator.
     * The number of months since the last compulsory appointment of a liquidator to the limited
     * company Default -99999
     * @return Returns the Double
     */
    @JsonGetter("TimeSinceLastApptCompLiquidator")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTimeSinceLastApptCompLiquidator() {
        return timeSinceLastApptCompLiquidator;
    }

    /**
     * Setter for TimeSinceLastApptCompLiquidator.
     * The number of months since the last compulsory appointment of a liquidator to the limited
     * company Default -99999
     * @param timeSinceLastApptCompLiquidator Value for Double
     */
    @JsonSetter("TimeSinceLastApptCompLiquidator")
    public void setTimeSinceLastApptCompLiquidator(Double timeSinceLastApptCompLiquidator) {
        this.timeSinceLastApptCompLiquidator = timeSinceLastApptCompLiquidator;
    }

    /**
     * Getter for TimeSinceLastApptReceiver.
     * The number of months since the last appointment of a receiver or administrative receiver to
     * the limited company Default -99999
     * @return Returns the Double
     */
    @JsonGetter("TimeSinceLastApptReceiver")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTimeSinceLastApptReceiver() {
        return timeSinceLastApptReceiver;
    }

    /**
     * Setter for TimeSinceLastApptReceiver.
     * The number of months since the last appointment of a receiver or administrative receiver to
     * the limited company Default -99999
     * @param timeSinceLastApptReceiver Value for Double
     */
    @JsonSetter("TimeSinceLastApptReceiver")
    public void setTimeSinceLastApptReceiver(Double timeSinceLastApptReceiver) {
        this.timeSinceLastApptReceiver = timeSinceLastApptReceiver;
    }

    /**
     * Getter for TimeSinceLastApptVolLiquidator.
     * The number of months since the last voluntary appointment of a liquidator to the limited
     * company. Default value of -99999 indicates not applicable
     * @return Returns the Double
     */
    @JsonGetter("TimeSinceLastApptVolLiquidator")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTimeSinceLastApptVolLiquidator() {
        return timeSinceLastApptVolLiquidator;
    }

    /**
     * Setter for TimeSinceLastApptVolLiquidator.
     * The number of months since the last voluntary appointment of a liquidator to the limited
     * company. Default value of -99999 indicates not applicable
     * @param timeSinceLastApptVolLiquidator Value for Double
     */
    @JsonSetter("TimeSinceLastApptVolLiquidator")
    public void setTimeSinceLastApptVolLiquidator(Double timeSinceLastApptVolLiquidator) {
        this.timeSinceLastApptVolLiquidator = timeSinceLastApptVolLiquidator;
    }

    /**
     * Getter for TimeSinceLastCompanyDissolved.
     * The number of months since the last dissolution notice against the limited company
     * @return Returns the Double
     */
    @JsonGetter("TimeSinceLastCompanyDissolved")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTimeSinceLastCompanyDissolved() {
        return timeSinceLastCompanyDissolved;
    }

    /**
     * Setter for TimeSinceLastCompanyDissolved.
     * The number of months since the last dissolution notice against the limited company
     * @param timeSinceLastCompanyDissolved Value for Double
     */
    @JsonSetter("TimeSinceLastCompanyDissolved")
    public void setTimeSinceLastCompanyDissolved(Double timeSinceLastCompanyDissolved) {
        this.timeSinceLastCompanyDissolved = timeSinceLastCompanyDissolved;
    }

    /**
     * Getter for TimeSinceLastCompanyReinstated.
     * The number of months since the last reinstated notice against the limited company Default
     * -99999
     * @return Returns the Double
     */
    @JsonGetter("TimeSinceLastCompanyReinstated")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTimeSinceLastCompanyReinstated() {
        return timeSinceLastCompanyReinstated;
    }

    /**
     * Setter for TimeSinceLastCompanyReinstated.
     * The number of months since the last reinstated notice against the limited company Default
     * -99999
     * @param timeSinceLastCompanyReinstated Value for Double
     */
    @JsonSetter("TimeSinceLastCompanyReinstated")
    public void setTimeSinceLastCompanyReinstated(Double timeSinceLastCompanyReinstated) {
        this.timeSinceLastCompanyReinstated = timeSinceLastCompanyReinstated;
    }

    /**
     * Getter for TimeSinceLastCompletionVolArrangement.
     * The number of months since the last voluntary arrangement has been completed by the limited
     * company Default -99999
     * @return Returns the Double
     */
    @JsonGetter("TimeSinceLastCompletionVolArrangement")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTimeSinceLastCompletionVolArrangement() {
        return timeSinceLastCompletionVolArrangement;
    }

    /**
     * Setter for TimeSinceLastCompletionVolArrangement.
     * The number of months since the last voluntary arrangement has been completed by the limited
     * company Default -99999
     * @param timeSinceLastCompletionVolArrangement Value for Double
     */
    @JsonSetter("TimeSinceLastCompletionVolArrangement")
    public void setTimeSinceLastCompletionVolArrangement(Double timeSinceLastCompletionVolArrangement) {
        this.timeSinceLastCompletionVolArrangement = timeSinceLastCompletionVolArrangement;
    }

    /**
     * Getter for TimeSinceLastDerogatoryItem.
     * The number of months since the date of the latest derogatory data item against the limited
     * company Default -99999
     * @return Returns the Double
     */
    @JsonGetter("TimeSinceLastDerogatoryItem")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTimeSinceLastDerogatoryItem() {
        return timeSinceLastDerogatoryItem;
    }

    /**
     * Setter for TimeSinceLastDerogatoryItem.
     * The number of months since the date of the latest derogatory data item against the limited
     * company Default -99999
     * @param timeSinceLastDerogatoryItem Value for Double
     */
    @JsonSetter("TimeSinceLastDerogatoryItem")
    public void setTimeSinceLastDerogatoryItem(Double timeSinceLastDerogatoryItem) {
        this.timeSinceLastDerogatoryItem = timeSinceLastDerogatoryItem;
    }

    /**
     * Getter for TimeSinceLastDirAppt.
     * The number of months since the last appointment of a director to the limited company
     * @return Returns the Integer
     */
    @JsonGetter("TimeSinceLastDirAppt")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getTimeSinceLastDirAppt() {
        return timeSinceLastDirAppt;
    }

    /**
     * Setter for TimeSinceLastDirAppt.
     * The number of months since the last appointment of a director to the limited company
     * @param timeSinceLastDirAppt Value for Integer
     */
    @JsonSetter("TimeSinceLastDirAppt")
    public void setTimeSinceLastDirAppt(Integer timeSinceLastDirAppt) {
        this.timeSinceLastDirAppt = timeSinceLastDirAppt;
    }

    /**
     * Getter for TimeSinceLastDischargeAdministrator.
     * The number of months since the last discharge of an administrator from the limited company
     * Default -99999
     * @return Returns the Double
     */
    @JsonGetter("TimeSinceLastDischargeAdministrator")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTimeSinceLastDischargeAdministrator() {
        return timeSinceLastDischargeAdministrator;
    }

    /**
     * Setter for TimeSinceLastDischargeAdministrator.
     * The number of months since the last discharge of an administrator from the limited company
     * Default -99999
     * @param timeSinceLastDischargeAdministrator Value for Double
     */
    @JsonSetter("TimeSinceLastDischargeAdministrator")
    public void setTimeSinceLastDischargeAdministrator(Double timeSinceLastDischargeAdministrator) {
        this.timeSinceLastDischargeAdministrator = timeSinceLastDischargeAdministrator;
    }

    /**
     * Getter for TimeSinceLastDismissedPetition.
     * The number of months since the date of the last dismissal of a winding up petition registered
     * against the limited company Default -99999
     * @return Returns the Double
     */
    @JsonGetter("TimeSinceLastDismissedPetition")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTimeSinceLastDismissedPetition() {
        return timeSinceLastDismissedPetition;
    }

    /**
     * Setter for TimeSinceLastDismissedPetition.
     * The number of months since the date of the last dismissal of a winding up petition registered
     * against the limited company Default -99999
     * @param timeSinceLastDismissedPetition Value for Double
     */
    @JsonSetter("TimeSinceLastDismissedPetition")
    public void setTimeSinceLastDismissedPetition(Double timeSinceLastDismissedPetition) {
        this.timeSinceLastDismissedPetition = timeSinceLastDismissedPetition;
    }

    /**
     * Getter for TimeSinceLastIntentionToDissolve.
     * The number of months since the last intention to dissolve the company by Companies House
     * Default -99999
     * @return Returns the Double
     */
    @JsonGetter("TimeSinceLastIntentionToDissolve")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTimeSinceLastIntentionToDissolve() {
        return timeSinceLastIntentionToDissolve;
    }

    /**
     * Setter for TimeSinceLastIntentionToDissolve.
     * The number of months since the last intention to dissolve the company by Companies House
     * Default -99999
     * @param timeSinceLastIntentionToDissolve Value for Double
     */
    @JsonSetter("TimeSinceLastIntentionToDissolve")
    public void setTimeSinceLastIntentionToDissolve(Double timeSinceLastIntentionToDissolve) {
        this.timeSinceLastIntentionToDissolve = timeSinceLastIntentionToDissolve;
    }

    /**
     * Getter for TimeSinceLastMeetingCreditors.
     * The number of months since the date of the last meeting of creditors of the limited company
     * Default value of -99999 indicates not applicable
     * @return Returns the Double
     */
    @JsonGetter("TimeSinceLastMeetingCreditors")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTimeSinceLastMeetingCreditors() {
        return timeSinceLastMeetingCreditors;
    }

    /**
     * Setter for TimeSinceLastMeetingCreditors.
     * The number of months since the date of the last meeting of creditors of the limited company
     * Default value of -99999 indicates not applicable
     * @param timeSinceLastMeetingCreditors Value for Double
     */
    @JsonSetter("TimeSinceLastMeetingCreditors")
    public void setTimeSinceLastMeetingCreditors(Double timeSinceLastMeetingCreditors) {
        this.timeSinceLastMeetingCreditors = timeSinceLastMeetingCreditors;
    }

    /**
     * Getter for TimeSinceLastPetitionCompWindUp.
     * The number of months since the date of the last winding up petition against the limited
     * company Default -99999
     * @return Returns the Double
     */
    @JsonGetter("TimeSinceLastPetitionCompWindUp")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTimeSinceLastPetitionCompWindUp() {
        return timeSinceLastPetitionCompWindUp;
    }

    /**
     * Setter for TimeSinceLastPetitionCompWindUp.
     * The number of months since the date of the last winding up petition against the limited
     * company Default -99999
     * @param timeSinceLastPetitionCompWindUp Value for Double
     */
    @JsonSetter("TimeSinceLastPetitionCompWindUp")
    public void setTimeSinceLastPetitionCompWindUp(Double timeSinceLastPetitionCompWindUp) {
        this.timeSinceLastPetitionCompWindUp = timeSinceLastPetitionCompWindUp;
    }

    /**
     * Getter for TimeSinceLastReceiverCeasing.
     * The number of months since the last cessation of a receiver of administrative receiver from
     * the limited company Default -99999
     * @return Returns the Double
     */
    @JsonGetter("TimeSinceLastReceiverCeasing")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTimeSinceLastReceiverCeasing() {
        return timeSinceLastReceiverCeasing;
    }

    /**
     * Setter for TimeSinceLastReceiverCeasing.
     * The number of months since the last cessation of a receiver of administrative receiver from
     * the limited company Default -99999
     * @param timeSinceLastReceiverCeasing Value for Double
     */
    @JsonSetter("TimeSinceLastReceiverCeasing")
    public void setTimeSinceLastReceiverCeasing(Double timeSinceLastReceiverCeasing) {
        this.timeSinceLastReceiverCeasing = timeSinceLastReceiverCeasing;
    }

    /**
     * Getter for TimeSinceLastRegOfficeChange.
     * The number of months since the last change to the Registered Office for the limited company.
     * Default-99999
     * @return Returns the Integer
     */
    @JsonGetter("TimeSinceLastRegOfficeChange")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getTimeSinceLastRegOfficeChange() {
        return timeSinceLastRegOfficeChange;
    }

    /**
     * Setter for TimeSinceLastRegOfficeChange.
     * The number of months since the last change to the Registered Office for the limited company.
     * Default-99999
     * @param timeSinceLastRegOfficeChange Value for Integer
     */
    @JsonSetter("TimeSinceLastRegOfficeChange")
    public void setTimeSinceLastRegOfficeChange(Integer timeSinceLastRegOfficeChange) {
        this.timeSinceLastRegOfficeChange = timeSinceLastRegOfficeChange;
    }

    /**
     * Getter for TimeSinceLastResolutionWindUp.
     * The number of months since the date of the last resolution to wind up the limited company
     * Default -99999
     * @return Returns the Double
     */
    @JsonGetter("TimeSinceLastResolutionWindUp")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTimeSinceLastResolutionWindUp() {
        return timeSinceLastResolutionWindUp;
    }

    /**
     * Setter for TimeSinceLastResolutionWindUp.
     * The number of months since the date of the last resolution to wind up the limited company
     * Default -99999
     * @param timeSinceLastResolutionWindUp Value for Double
     */
    @JsonSetter("TimeSinceLastResolutionWindUp")
    public void setTimeSinceLastResolutionWindUp(Double timeSinceLastResolutionWindUp) {
        this.timeSinceLastResolutionWindUp = timeSinceLastResolutionWindUp;
    }

    /**
     * Getter for TimeSinceLastRetsSubmitted.
     * The number of months since the last Confirmation Statement for the limited company was filed
     * at Companies House. Default -99999
     * @return Returns the Integer
     */
    @JsonGetter("TimeSinceLastRetsSubmitted")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getTimeSinceLastRetsSubmitted() {
        return timeSinceLastRetsSubmitted;
    }

    /**
     * Setter for TimeSinceLastRetsSubmitted.
     * The number of months since the last Confirmation Statement for the limited company was filed
     * at Companies House. Default -99999
     * @param timeSinceLastRetsSubmitted Value for Integer
     */
    @JsonSetter("TimeSinceLastRetsSubmitted")
    public void setTimeSinceLastRetsSubmitted(Integer timeSinceLastRetsSubmitted) {
        this.timeSinceLastRetsSubmitted = timeSinceLastRetsSubmitted;
    }

    /**
     * Getter for TimeSinceLastRevocationVolArrangement.
     * The number of months since the last voluntary arrangement has been revoked for the limited
     * company Default -99999
     * @return Returns the Double
     */
    @JsonGetter("TimeSinceLastRevocationVolArrangement")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTimeSinceLastRevocationVolArrangement() {
        return timeSinceLastRevocationVolArrangement;
    }

    /**
     * Setter for TimeSinceLastRevocationVolArrangement.
     * The number of months since the last voluntary arrangement has been revoked for the limited
     * company Default -99999
     * @param timeSinceLastRevocationVolArrangement Value for Double
     */
    @JsonSetter("TimeSinceLastRevocationVolArrangement")
    public void setTimeSinceLastRevocationVolArrangement(Double timeSinceLastRevocationVolArrangement) {
        this.timeSinceLastRevocationVolArrangement = timeSinceLastRevocationVolArrangement;
    }

    /**
     * Getter for TimeSinceLastSuspensionVolArrangement.
     * The number of months since the last voluntary arrangement has been suspended for the limited
     * company Default -99999
     * @return Returns the Double
     */
    @JsonGetter("TimeSinceLastSuspensionVolArrangement")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTimeSinceLastSuspensionVolArrangement() {
        return timeSinceLastSuspensionVolArrangement;
    }

    /**
     * Setter for TimeSinceLastSuspensionVolArrangement.
     * The number of months since the last voluntary arrangement has been suspended for the limited
     * company Default -99999
     * @param timeSinceLastSuspensionVolArrangement Value for Double
     */
    @JsonSetter("TimeSinceLastSuspensionVolArrangement")
    public void setTimeSinceLastSuspensionVolArrangement(Double timeSinceLastSuspensionVolArrangement) {
        this.timeSinceLastSuspensionVolArrangement = timeSinceLastSuspensionVolArrangement;
    }

    /**
     * Getter for TimeSinceLastWindUpHearing.
     * The number of months since the date of the latest Winding Up hearing for the limited company.
     * Default -99999
     * @return Returns the Integer
     */
    @JsonGetter("TimeSinceLastWindUpHearing")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getTimeSinceLastWindUpHearing() {
        return timeSinceLastWindUpHearing;
    }

    /**
     * Setter for TimeSinceLastWindUpHearing.
     * The number of months since the date of the latest Winding Up hearing for the limited company.
     * Default -99999
     * @param timeSinceLastWindUpHearing Value for Integer
     */
    @JsonSetter("TimeSinceLastWindUpHearing")
    public void setTimeSinceLastWindUpHearing(Integer timeSinceLastWindUpHearing) {
        this.timeSinceLastWindUpHearing = timeSinceLastWindUpHearing;
    }

    /**
     * Getter for TimeSinceLastWindUpOrder.
     * The number of months since the last winding up order against the limited company. Default
     * value of -99999 indicates not applicable
     * @return Returns the Double
     */
    @JsonGetter("TimeSinceLastWindUpOrder")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTimeSinceLastWindUpOrder() {
        return timeSinceLastWindUpOrder;
    }

    /**
     * Setter for TimeSinceLastWindUpOrder.
     * The number of months since the last winding up order against the limited company. Default
     * value of -99999 indicates not applicable
     * @param timeSinceLastWindUpOrder Value for Double
     */
    @JsonSetter("TimeSinceLastWindUpOrder")
    public void setTimeSinceLastWindUpOrder(Double timeSinceLastWindUpOrder) {
        this.timeSinceLastWindUpOrder = timeSinceLastWindUpOrder;
    }

    /**
     * Getter for TotAssetsEmp.
     * Value for Turnover per Employee for the latest accounts for the limited company. Default
     * -999999.9
     * @return Returns the Double
     */
    @JsonGetter("TotAssetsEmp")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTotAssetsEmp() {
        return totAssetsEmp;
    }

    /**
     * Setter for TotAssetsEmp.
     * Value for Turnover per Employee for the latest accounts for the limited company. Default
     * -999999.9
     * @param totAssetsEmp Value for Double
     */
    @JsonSetter("TotAssetsEmp")
    public void setTotAssetsEmp(Double totAssetsEmp) {
        this.totAssetsEmp = totAssetsEmp;
    }

    /**
     * Getter for TotValCCJsPropShareFunds.
     * The value of all County Court Judgements registered against the limited company as a
     * proportion of Shareholders' Funds. Default -999999.900
     * @return Returns the Double
     */
    @JsonGetter("TotValCCJsPropShareFunds")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTotValCCJsPropShareFunds() {
        return totValCCJsPropShareFunds;
    }

    /**
     * Setter for TotValCCJsPropShareFunds.
     * The value of all County Court Judgements registered against the limited company as a
     * proportion of Shareholders' Funds. Default -999999.900
     * @param totValCCJsPropShareFunds Value for Double
     */
    @JsonSetter("TotValCCJsPropShareFunds")
    public void setTotValCCJsPropShareFunds(Double totValCCJsPropShareFunds) {
        this.totValCCJsPropShareFunds = totValCCJsPropShareFunds;
    }

    /**
     * Getter for TotalAssets.
     * Value for Total Assets for the latest accounts for the limited company Default
     * -999999999999999
     * @return Returns the Double
     */
    @JsonGetter("TotalAssets")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTotalAssets() {
        return totalAssets;
    }

    /**
     * Setter for TotalAssets.
     * Value for Total Assets for the latest accounts for the limited company Default
     * -999999999999999
     * @param totalAssets Value for Double
     */
    @JsonSetter("TotalAssets")
    public void setTotalAssets(Double totalAssets) {
        this.totalAssets = totalAssets;
    }

    /**
     * Getter for TotalCurrentAssets.
     * Value for Total Current Assets for the latest accounts for the limited company Default
     * -999999999999999
     * @return Returns the Double
     */
    @JsonGetter("TotalCurrentAssets")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTotalCurrentAssets() {
        return totalCurrentAssets;
    }

    /**
     * Setter for TotalCurrentAssets.
     * Value for Total Current Assets for the latest accounts for the limited company Default
     * -999999999999999
     * @param totalCurrentAssets Value for Double
     */
    @JsonSetter("TotalCurrentAssets")
    public void setTotalCurrentAssets(Double totalCurrentAssets) {
        this.totalCurrentAssets = totalCurrentAssets;
    }

    /**
     * Getter for TotalCurrentLiabilities.
     * Value for Total Current Liabilities for the latest accounts for the limited company Default
     * -999999999999999
     * @return Returns the Double
     */
    @JsonGetter("TotalCurrentLiabilities")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTotalCurrentLiabilities() {
        return totalCurrentLiabilities;
    }

    /**
     * Setter for TotalCurrentLiabilities.
     * Value for Total Current Liabilities for the latest accounts for the limited company Default
     * -999999999999999
     * @param totalCurrentLiabilities Value for Double
     */
    @JsonSetter("TotalCurrentLiabilities")
    public void setTotalCurrentLiabilities(Double totalCurrentLiabilities) {
        this.totalCurrentLiabilities = totalCurrentLiabilities;
    }

    /**
     * Getter for TotalFixedAssetsPercentTotalAssets.
     * Value for Total Fixed Assets as a percentage of Total Assets for the latest accounts for the
     * limited company (as percentage ZZZZZ.9) Default -99999999.9
     * @return Returns the Double
     */
    @JsonGetter("TotalFixedAssetsPercentTotalAssets")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTotalFixedAssetsPercentTotalAssets() {
        return totalFixedAssetsPercentTotalAssets;
    }

    /**
     * Setter for TotalFixedAssetsPercentTotalAssets.
     * Value for Total Fixed Assets as a percentage of Total Assets for the latest accounts for the
     * limited company (as percentage ZZZZZ.9) Default -99999999.9
     * @param totalFixedAssetsPercentTotalAssets Value for Double
     */
    @JsonSetter("TotalFixedAssetsPercentTotalAssets")
    public void setTotalFixedAssetsPercentTotalAssets(Double totalFixedAssetsPercentTotalAssets) {
        this.totalFixedAssetsPercentTotalAssets = totalFixedAssetsPercentTotalAssets;
    }

    /**
     * Getter for TotalLongTermLiabilities.
     * Value for Total Long Term Liabilities for the latest accounts for the limited company Default
     * -999999999999999
     * @return Returns the Double
     */
    @JsonGetter("TotalLongTermLiabilities")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTotalLongTermLiabilities() {
        return totalLongTermLiabilities;
    }

    /**
     * Setter for TotalLongTermLiabilities.
     * Value for Total Long Term Liabilities for the latest accounts for the limited company Default
     * -999999999999999
     * @param totalLongTermLiabilities Value for Double
     */
    @JsonSetter("TotalLongTermLiabilities")
    public void setTotalLongTermLiabilities(Double totalLongTermLiabilities) {
        this.totalLongTermLiabilities = totalLongTermLiabilities;
    }

    /**
     * Getter for TotalTurnover.
     * Value for Total Turnover for the latest accounts for the limited company Default
     * -999999999999999
     * @return Returns the Double
     */
    @JsonGetter("TotalTurnover")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTotalTurnover() {
        return totalTurnover;
    }

    /**
     * Setter for TotalTurnover.
     * Value for Total Turnover for the latest accounts for the limited company Default
     * -999999999999999
     * @param totalTurnover Value for Double
     */
    @JsonSetter("TotalTurnover")
    public void setTotalTurnover(Double totalTurnover) {
        this.totalTurnover = totalTurnover;
    }

    /**
     * Getter for TurnoverPerEmp.
     * Value for Total Assets per Employee for the latest accounts for the limited company
     * @return Returns the Double
     */
    @JsonGetter("TurnoverPerEmp")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTurnoverPerEmp() {
        return turnoverPerEmp;
    }

    /**
     * Setter for TurnoverPerEmp.
     * Value for Total Assets per Employee for the latest accounts for the limited company
     * @param turnoverPerEmp Value for Double
     */
    @JsonSetter("TurnoverPerEmp")
    public void setTurnoverPerEmp(Double turnoverPerEmp) {
        this.turnoverPerEmp = turnoverPerEmp;
    }

    /**
     * Getter for ValCCJsLast24MonthsPropShareFunds.
     * The value of County Court Judgements registered against the limited company in the last 24
     * months as a proportion of Shareholders' Funds. Default -999999.900
     * @return Returns the Double
     */
    @JsonGetter("ValCCJsLast24MonthsPropShareFunds")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getValCCJsLast24MonthsPropShareFunds() {
        return valCCJsLast24MonthsPropShareFunds;
    }

    /**
     * Setter for ValCCJsLast24MonthsPropShareFunds.
     * The value of County Court Judgements registered against the limited company in the last 24
     * months as a proportion of Shareholders' Funds. Default -999999.900
     * @param valCCJsLast24MonthsPropShareFunds Value for Double
     */
    @JsonSetter("ValCCJsLast24MonthsPropShareFunds")
    public void setValCCJsLast24MonthsPropShareFunds(Double valCCJsLast24MonthsPropShareFunds) {
        this.valCCJsLast24MonthsPropShareFunds = valCCJsLast24MonthsPropShareFunds;
    }

    /**
     * Getter for ValueCCJs0To72.
     * The value of County Court Judgements registered against the limited company during the last 6
     * years
     * @return Returns the Double
     */
    @JsonGetter("ValueCCJs0To72")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getValueCCJs0To72() {
        return valueCCJs0To72;
    }

    /**
     * Setter for ValueCCJs0To72.
     * The value of County Court Judgements registered against the limited company during the last 6
     * years
     * @param valueCCJs0To72 Value for Double
     */
    @JsonSetter("ValueCCJs0To72")
    public void setValueCCJs0To72(Double valueCCJs0To72) {
        this.valueCCJs0To72 = valueCCJs0To72;
    }

    /**
     * Getter for ValueCCJs13To24.
     * The value of County Court Judgements registered against the limited company between 12 and 24
     * months ago
     * @return Returns the Double
     */
    @JsonGetter("ValueCCJs13To24")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getValueCCJs13To24() {
        return valueCCJs13To24;
    }

    /**
     * Setter for ValueCCJs13To24.
     * The value of County Court Judgements registered against the limited company between 12 and 24
     * months ago
     * @param valueCCJs13To24 Value for Double
     */
    @JsonSetter("ValueCCJs13To24")
    public void setValueCCJs13To24(Double valueCCJs13To24) {
        this.valueCCJs13To24 = valueCCJs13To24;
    }

    /**
     * Getter for ValueCCJs25To36.
     * The value of County Court Judgements registered against the limited company between 24 and 36
     * months ago
     * @return Returns the Double
     */
    @JsonGetter("ValueCCJs25To36")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getValueCCJs25To36() {
        return valueCCJs25To36;
    }

    /**
     * Setter for ValueCCJs25To36.
     * The value of County Court Judgements registered against the limited company between 24 and 36
     * months ago
     * @param valueCCJs25To36 Value for Double
     */
    @JsonSetter("ValueCCJs25To36")
    public void setValueCCJs25To36(Double valueCCJs25To36) {
        this.valueCCJs25To36 = valueCCJs25To36;
    }

    /**
     * Getter for ValueCCJs37To48.
     * The value of County Court Judgements registered against the limited company between 36 and 48
     * months ago
     * @return Returns the Double
     */
    @JsonGetter("ValueCCJs37To48")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getValueCCJs37To48() {
        return valueCCJs37To48;
    }

    /**
     * Setter for ValueCCJs37To48.
     * The value of County Court Judgements registered against the limited company between 36 and 48
     * months ago
     * @param valueCCJs37To48 Value for Double
     */
    @JsonSetter("ValueCCJs37To48")
    public void setValueCCJs37To48(Double valueCCJs37To48) {
        this.valueCCJs37To48 = valueCCJs37To48;
    }

    /**
     * Getter for ValueCCJs49To60.
     * The value of County Court Judgements registered against the limited company between 48 and 60
     * months ago
     * @return Returns the Double
     */
    @JsonGetter("ValueCCJs49To60")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getValueCCJs49To60() {
        return valueCCJs49To60;
    }

    /**
     * Setter for ValueCCJs49To60.
     * The value of County Court Judgements registered against the limited company between 48 and 60
     * months ago
     * @param valueCCJs49To60 Value for Double
     */
    @JsonSetter("ValueCCJs49To60")
    public void setValueCCJs49To60(Double valueCCJs49To60) {
        this.valueCCJs49To60 = valueCCJs49To60;
    }

    /**
     * Getter for ValueCCJs61To72.
     * The value of County Court Judgements registered against the limited company between 60 and 72
     * months ago
     * @return Returns the Double
     */
    @JsonGetter("ValueCCJs61To72")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getValueCCJs61To72() {
        return valueCCJs61To72;
    }

    /**
     * Setter for ValueCCJs61To72.
     * The value of County Court Judgements registered against the limited company between 60 and 72
     * months ago
     * @param valueCCJs61To72 Value for Double
     */
    @JsonSetter("ValueCCJs61To72")
    public void setValueCCJs61To72(Double valueCCJs61To72) {
        this.valueCCJs61To72 = valueCCJs61To72;
    }

    /**
     * Getter for ValueCCJsLast12Months.
     * The value of County Court Judgements registered against the limited company during the last
     * 12 months
     * @return Returns the Double
     */
    @JsonGetter("ValueCCJsLast12Months")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getValueCCJsLast12Months() {
        return valueCCJsLast12Months;
    }

    /**
     * Setter for ValueCCJsLast12Months.
     * The value of County Court Judgements registered against the limited company during the last
     * 12 months
     * @param valueCCJsLast12Months Value for Double
     */
    @JsonSetter("ValueCCJsLast12Months")
    public void setValueCCJsLast12Months(Double valueCCJsLast12Months) {
        this.valueCCJsLast12Months = valueCCJsLast12Months;
    }

    /**
     * Getter for ValueMostRecentCCJ.
     * The value of the most recent County Court Judgement registered against the limited company
     * @return Returns the Double
     */
    @JsonGetter("ValueMostRecentCCJ")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getValueMostRecentCCJ() {
        return valueMostRecentCCJ;
    }

    /**
     * Setter for ValueMostRecentCCJ.
     * The value of the most recent County Court Judgement registered against the limited company
     * @param valueMostRecentCCJ Value for Double
     */
    @JsonSetter("ValueMostRecentCCJ")
    public void setValueMostRecentCCJ(Double valueMostRecentCCJ) {
        this.valueMostRecentCCJ = valueMostRecentCCJ;
    }

    /**
     * Getter for WorkingCapital.
     * Value for Working Capital for the latest accounts for the limited company Default
     * -999999999999999
     * @return Returns the Double
     */
    @JsonGetter("WorkingCapital")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getWorkingCapital() {
        return workingCapital;
    }

    /**
     * Setter for WorkingCapital.
     * Value for Working Capital for the latest accounts for the limited company Default
     * -999999999999999
     * @param workingCapital Value for Double
     */
    @JsonSetter("WorkingCapital")
    public void setWorkingCapital(Double workingCapital) {
        this.workingCapital = workingCapital;
    }

    /**
     * Getter for WorkingCapitalPercentCurrentPlusFixedAssets.
     * Value for Working Capital as a percentage of (Current Assets plus Fixed Assets) for the
     * latest accounts for the limited company (as percentage ZZZZZ.9)
     * @return Returns the Double
     */
    @JsonGetter("WorkingCapitalPercentCurrentPlusFixedAssets")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getWorkingCapitalPercentCurrentPlusFixedAssets() {
        return workingCapitalPercentCurrentPlusFixedAssets;
    }

    /**
     * Setter for WorkingCapitalPercentCurrentPlusFixedAssets.
     * Value for Working Capital as a percentage of (Current Assets plus Fixed Assets) for the
     * latest accounts for the limited company (as percentage ZZZZZ.9)
     * @param workingCapitalPercentCurrentPlusFixedAssets Value for Double
     */
    @JsonSetter("WorkingCapitalPercentCurrentPlusFixedAssets")
    public void setWorkingCapitalPercentCurrentPlusFixedAssets(Double workingCapitalPercentCurrentPlusFixedAssets) {
        this.workingCapitalPercentCurrentPlusFixedAssets = workingCapitalPercentCurrentPlusFixedAssets;
    }

    /**
     * Converts this LtdScoringData into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "LtdScoringData [" + "accountingPeriod=" + accountingPeriod + ", acidTest="
                + acidTest + ", ageMostRecentCCJ=" + ageMostRecentCCJ + ", auditType=" + auditType
                + ", auditorsQualifications=" + auditorsQualifications
                + ", baseTrendShareholdersFunds=" + baseTrendShareholdersFunds + ", borrowingRatio="
                + borrowingRatio + ", capitalEmployed=" + capitalEmployed
                + ", capitalEmployedPercentTotalAssets=" + capitalEmployedPercentTotalAssets
                + ", companyAge=" + companyAge + ", companyClass=" + companyClass
                + ", consAccounts=" + consAccounts + ", creditPeriod=" + creditPeriod
                + ", currAccsAvailabe=" + currAccsAvailabe + ", currency=" + currency
                + ", currentLiabilitiesPercentTotalAssets=" + currentLiabilitiesPercentTotalAssets
                + ", currentratio=" + currentratio + ", dateOfAccounts=" + dateOfAccounts
                + ", debtGearing=" + debtGearing + ", directorsCIFASFlag=" + directorsCIFASFlag
                + ", directorsNOCFlag=" + directorsNOCFlag + ", dividends=" + dividends
                + ", dormancyFlag=" + dormancyFlag + ", equityGearing=" + equityGearing
                + ", ficheDate=" + ficheDate + ", filedAccsType=" + filedAccsType + ", fixedAssets="
                + fixedAssets + ", grossAssets=" + grossAssets + ", hasSubsidiaries="
                + hasSubsidiaries + ", highestValueCCJ=" + highestValueCCJ + ", incompleteDirsFlag="
                + incompleteDirsFlag + ", intangibleAssets=" + intangibleAssets + ", isSubsidiary="
                + isSubsidiary + ", issuedCapital=" + issuedCapital + ", lastDerogatoryItem="
                + lastDerogatoryItem + ", latenessAccounts=" + latenessAccounts
                + ", latestAccountsType=" + latestAccountsType + ", legalStatus=" + legalStatus
                + ", limitedCompanyDelphiPayment=" + limitedCompanyDelphiPayment
                + ", limitedCompanyDelphiRisk=" + limitedCompanyDelphiRisk
                + ", limitedCompanyDelphiCAIS=" + limitedCompanyDelphiCAIS
                + ", liquidityStandardRatio=" + liquidityStandardRatio + ", netWorth=" + netWorth
                + ", numAppointmentsLast12=" + numAppointmentsLast12
                + ", numApprovalVolArrangement=" + numApprovalVolArrangement
                + ", numApptAdministrator=" + numApptAdministrator + ", numApptCompLiquidator="
                + numApptCompLiquidator + ", numApptReceiver=" + numApptReceiver
                + ", numApptVolLiquidator=" + numApptVolLiquidator + ", numCompanyDissolved="
                + numCompanyDissolved + ", numCompanyReinstated=" + numCompanyReinstated
                + ", numCompletionsVolArrangement=" + numCompletionsVolArrangement
                + ", numCurrDirs=" + numCurrDirs + ", numDirsHoldingShares=" + numDirsHoldingShares
                + ", numDirsIncorpAgents=" + numDirsIncorpAgents + ", numDischargeAdministrator="
                + numDischargeAdministrator + ", numDismissedPetition=" + numDismissedPetition
                + ", numDisqCurrDirs=" + numDisqCurrDirs + ", numEmployees=" + numEmployees
                + ", numIntentionToDissolve=" + numIntentionToDissolve + ", numMeetingsCreditors="
                + numMeetingsCreditors + ", numMemArtsChangesLast12Months="
                + numMemArtsChangesLast12Months + ", numPetitionCompWindUp=" + numPetitionCompWindUp
                + ", numReceiverCeasing=" + numReceiverCeasing
                + ", numRegOfficeChangesLast12Months=" + numRegOfficeChangesLast12Months
                + ", numResolutionWindUp=" + numResolutionWindUp
                + ", numRevocationVoluntaryArrangement=" + numRevocationVoluntaryArrangement
                + ", numSatMortgages=" + numSatMortgages + ", numSuspensionVolArrangement="
                + numSuspensionVolArrangement + ", numUnsatMortgages=" + numUnsatMortgages
                + ", numUnsatPartSatMortgages=" + numUnsatPartSatMortgages + ", numWindUpOrders="
                + numWindUpOrders + ", numYearsAccosAvailable=" + numYearsAccosAvailable
                + ", numYearsPreTaxProfitLessThan0Last4Years="
                + numYearsPreTaxProfitLessThan0Last4Years + ", numberCCJs0To72=" + numberCCJs0To72
                + ", numberCCJs13To24=" + numberCCJs13To24 + ", numberCCJs25To36="
                + numberCCJs25To36 + ", numberCCJs37To48=" + numberCCJs37To48
                + ", numberCCJs49To60=" + numberCCJs49To60 + ", numberCCJs61To72="
                + numberCCJs61To72 + ", numberCCJsLast12Months=" + numberCCJsLast12Months
                + ", numberDaysToFile=" + numberDaysToFile + ", oldestCurrDirAge="
                + oldestCurrDirAge + ", outOfDateFlag=" + outOfDateFlag
                + ", percentChangeCapitalEmployed=" + percentChangeCapitalEmployed
                + ", percentChangeCurrentRatio=" + percentChangeCurrentRatio
                + ", percentChangePreTaxProfitLoss=" + percentChangePreTaxProfitLoss
                + ", percentChangeShareholdersFunds=" + percentChangeShareholdersFunds
                + ", percentChangeTotalAssets=" + percentChangeTotalAssets
                + ", percentageDirsResidentUK=" + percentageDirsResidentUK
                + ", preTaxMarginQuartile=" + preTaxMarginQuartile + ", preTaxProfitLoss="
                + preTaxProfitLoss + ", preTaxProfitMargin=" + preTaxProfitMargin
                + ", prevAccountsDormancyFlag=" + prevAccountsDormancyFlag + ", prevAccsAvailabile="
                + prevAccsAvailabile + ", prevAccsConsAccounts=" + prevAccsConsAccounts
                + ", prevAccsCurrency=" + prevAccsCurrency + ", proportionCurrDirsToPrevDirLast12="
                + proportionCurrDirsToPrevDirLast12 + ", regOfficeCIFASIndicator="
                + regOfficeCIFASIndicator + ", region=" + region + ", reportUpdateFlag="
                + reportUpdateFlag + ", retainedEarnings=" + retainedEarnings + ", retainedProfit="
                + retainedProfit + ", returnOnAssets=" + returnOnAssets
                + ", returnOnAssetsQuartile=" + returnOnAssetsQuartile + ", returnOnCapital="
                + returnOnCapital + ", revaluationReserves=" + revaluationReserves
                + ", sICInformation1980=" + sICInformation1980 + ", sICInformation1992="
                + sICInformation1992 + ", shareholdersFunds=" + shareholdersFunds + ", shortLoans="
                + shortLoans + ", stocksWorkInProgressPercentCurrentAssets="
                + stocksWorkInProgressPercentCurrentAssets + ", timeSinceLastAccsSubmitted="
                + timeSinceLastAccsSubmitted + ", timeSinceLastApprovalVolArrangement="
                + timeSinceLastApprovalVolArrangement + ", timeSinceLastApptAdministrator="
                + timeSinceLastApptAdministrator + ", timeSinceLastApptCompLiquidator="
                + timeSinceLastApptCompLiquidator + ", timeSinceLastApptReceiver="
                + timeSinceLastApptReceiver + ", timeSinceLastApptVolLiquidator="
                + timeSinceLastApptVolLiquidator + ", timeSinceLastCompanyDissolved="
                + timeSinceLastCompanyDissolved + ", timeSinceLastCompanyReinstated="
                + timeSinceLastCompanyReinstated + ", timeSinceLastCompletionVolArrangement="
                + timeSinceLastCompletionVolArrangement + ", timeSinceLastDerogatoryItem="
                + timeSinceLastDerogatoryItem + ", timeSinceLastDirAppt=" + timeSinceLastDirAppt
                + ", timeSinceLastDischargeAdministrator=" + timeSinceLastDischargeAdministrator
                + ", timeSinceLastDismissedPetition=" + timeSinceLastDismissedPetition
                + ", timeSinceLastIntentionToDissolve=" + timeSinceLastIntentionToDissolve
                + ", timeSinceLastMeetingCreditors=" + timeSinceLastMeetingCreditors
                + ", timeSinceLastPetitionCompWindUp=" + timeSinceLastPetitionCompWindUp
                + ", timeSinceLastReceiverCeasing=" + timeSinceLastReceiverCeasing
                + ", timeSinceLastRegOfficeChange=" + timeSinceLastRegOfficeChange
                + ", timeSinceLastResolutionWindUp=" + timeSinceLastResolutionWindUp
                + ", timeSinceLastRetsSubmitted=" + timeSinceLastRetsSubmitted
                + ", timeSinceLastRevocationVolArrangement=" + timeSinceLastRevocationVolArrangement
                + ", timeSinceLastSuspensionVolArrangement=" + timeSinceLastSuspensionVolArrangement
                + ", timeSinceLastWindUpHearing=" + timeSinceLastWindUpHearing
                + ", timeSinceLastWindUpOrder=" + timeSinceLastWindUpOrder + ", totAssetsEmp="
                + totAssetsEmp + ", totValCCJsPropShareFunds=" + totValCCJsPropShareFunds
                + ", totalAssets=" + totalAssets + ", totalCurrentAssets=" + totalCurrentAssets
                + ", totalCurrentLiabilities=" + totalCurrentLiabilities
                + ", totalFixedAssetsPercentTotalAssets=" + totalFixedAssetsPercentTotalAssets
                + ", totalLongTermLiabilities=" + totalLongTermLiabilities + ", totalTurnover="
                + totalTurnover + ", turnoverPerEmp=" + turnoverPerEmp
                + ", valCCJsLast24MonthsPropShareFunds=" + valCCJsLast24MonthsPropShareFunds
                + ", valueCCJs0To72=" + valueCCJs0To72 + ", valueCCJs13To24=" + valueCCJs13To24
                + ", valueCCJs25To36=" + valueCCJs25To36 + ", valueCCJs37To48=" + valueCCJs37To48
                + ", valueCCJs49To60=" + valueCCJs49To60 + ", valueCCJs61To72=" + valueCCJs61To72
                + ", valueCCJsLast12Months=" + valueCCJsLast12Months + ", valueMostRecentCCJ="
                + valueMostRecentCCJ + ", workingCapital=" + workingCapital
                + ", workingCapitalPercentCurrentPlusFixedAssets="
                + workingCapitalPercentCurrentPlusFixedAssets + "]";
    }

    /**
     * Builds a new {@link LtdScoringData.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link LtdScoringData.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .accountingPeriod(getAccountingPeriod())
                .acidTest(getAcidTest())
                .ageMostRecentCCJ(getAgeMostRecentCCJ())
                .auditType(getAuditType())
                .auditorsQualifications(getAuditorsQualifications())
                .baseTrendShareholdersFunds(getBaseTrendShareholdersFunds())
                .borrowingRatio(getBorrowingRatio())
                .capitalEmployed(getCapitalEmployed())
                .capitalEmployedPercentTotalAssets(getCapitalEmployedPercentTotalAssets())
                .companyAge(getCompanyAge())
                .companyClass(getCompanyClass())
                .consAccounts(getConsAccounts())
                .creditPeriod(getCreditPeriod())
                .currAccsAvailabe(getCurrAccsAvailabe())
                .currency(getCurrency())
                .currentLiabilitiesPercentTotalAssets(getCurrentLiabilitiesPercentTotalAssets())
                .currentratio(getCurrentratio())
                .dateOfAccounts(getDateOfAccounts())
                .debtGearing(getDebtGearing())
                .directorsCIFASFlag(getDirectorsCIFASFlag())
                .directorsNOCFlag(getDirectorsNOCFlag())
                .dividends(getDividends())
                .dormancyFlag(getDormancyFlag())
                .equityGearing(getEquityGearing())
                .ficheDate(getFicheDate())
                .filedAccsType(getFiledAccsType())
                .fixedAssets(getFixedAssets())
                .grossAssets(getGrossAssets())
                .hasSubsidiaries(getHasSubsidiaries())
                .highestValueCCJ(getHighestValueCCJ())
                .incompleteDirsFlag(getIncompleteDirsFlag())
                .intangibleAssets(getIntangibleAssets())
                .isSubsidiary(getIsSubsidiary())
                .issuedCapital(getIssuedCapital())
                .lastDerogatoryItem(getLastDerogatoryItem())
                .latenessAccounts(getLatenessAccounts())
                .latestAccountsType(getLatestAccountsType())
                .legalStatus(getLegalStatus())
                .limitedCompanyDelphiPayment(getLimitedCompanyDelphiPayment())
                .limitedCompanyDelphiRisk(getLimitedCompanyDelphiRisk())
                .limitedCompanyDelphiCAIS(getLimitedCompanyDelphiCAIS())
                .liquidityStandardRatio(getLiquidityStandardRatio())
                .netWorth(getNetWorth())
                .numAppointmentsLast12(getNumAppointmentsLast12())
                .numApprovalVolArrangement(getNumApprovalVolArrangement())
                .numApptAdministrator(getNumApptAdministrator())
                .numApptCompLiquidator(getNumApptCompLiquidator())
                .numApptReceiver(getNumApptReceiver())
                .numApptVolLiquidator(getNumApptVolLiquidator())
                .numCompanyDissolved(getNumCompanyDissolved())
                .numCompanyReinstated(getNumCompanyReinstated())
                .numCompletionsVolArrangement(getNumCompletionsVolArrangement())
                .numCurrDirs(getNumCurrDirs())
                .numDirsHoldingShares(getNumDirsHoldingShares())
                .numDirsIncorpAgents(getNumDirsIncorpAgents())
                .numDischargeAdministrator(getNumDischargeAdministrator())
                .numDismissedPetition(getNumDismissedPetition())
                .numDisqCurrDirs(getNumDisqCurrDirs())
                .numEmployees(getNumEmployees())
                .numIntentionToDissolve(getNumIntentionToDissolve())
                .numMeetingsCreditors(getNumMeetingsCreditors())
                .numMemArtsChangesLast12Months(getNumMemArtsChangesLast12Months())
                .numPetitionCompWindUp(getNumPetitionCompWindUp())
                .numReceiverCeasing(getNumReceiverCeasing())
                .numRegOfficeChangesLast12Months(getNumRegOfficeChangesLast12Months())
                .numResolutionWindUp(getNumResolutionWindUp())
                .numRevocationVoluntaryArrangement(getNumRevocationVoluntaryArrangement())
                .numSatMortgages(getNumSatMortgages())
                .numSuspensionVolArrangement(getNumSuspensionVolArrangement())
                .numUnsatMortgages(getNumUnsatMortgages())
                .numUnsatPartSatMortgages(getNumUnsatPartSatMortgages())
                .numWindUpOrders(getNumWindUpOrders())
                .numYearsAccosAvailable(getNumYearsAccosAvailable())
                .numYearsPreTaxProfitLessThan0Last4Years(getNumYearsPreTaxProfitLessThan0Last4Years())
                .numberCCJs0To72(getNumberCCJs0To72())
                .numberCCJs13To24(getNumberCCJs13To24())
                .numberCCJs25To36(getNumberCCJs25To36())
                .numberCCJs37To48(getNumberCCJs37To48())
                .numberCCJs49To60(getNumberCCJs49To60())
                .numberCCJs61To72(getNumberCCJs61To72())
                .numberCCJsLast12Months(getNumberCCJsLast12Months())
                .numberDaysToFile(getNumberDaysToFile())
                .oldestCurrDirAge(getOldestCurrDirAge())
                .outOfDateFlag(getOutOfDateFlag())
                .percentChangeCapitalEmployed(getPercentChangeCapitalEmployed())
                .percentChangeCurrentRatio(getPercentChangeCurrentRatio())
                .percentChangePreTaxProfitLoss(getPercentChangePreTaxProfitLoss())
                .percentChangeShareholdersFunds(getPercentChangeShareholdersFunds())
                .percentChangeTotalAssets(getPercentChangeTotalAssets())
                .percentageDirsResidentUK(getPercentageDirsResidentUK())
                .preTaxMarginQuartile(getPreTaxMarginQuartile())
                .preTaxProfitLoss(getPreTaxProfitLoss())
                .preTaxProfitMargin(getPreTaxProfitMargin())
                .prevAccountsDormancyFlag(getPrevAccountsDormancyFlag())
                .prevAccsAvailabile(getPrevAccsAvailabile())
                .prevAccsConsAccounts(getPrevAccsConsAccounts())
                .prevAccsCurrency(getPrevAccsCurrency())
                .proportionCurrDirsToPrevDirLast12(getProportionCurrDirsToPrevDirLast12())
                .regOfficeCIFASIndicator(getRegOfficeCIFASIndicator())
                .region(getRegion())
                .reportUpdateFlag(getReportUpdateFlag())
                .retainedEarnings(getRetainedEarnings())
                .retainedProfit(getRetainedProfit())
                .returnOnAssets(getReturnOnAssets())
                .returnOnAssetsQuartile(getReturnOnAssetsQuartile())
                .returnOnCapital(getReturnOnCapital())
                .revaluationReserves(getRevaluationReserves())
                .sICInformation1980(getSICInformation1980())
                .sICInformation1992(getSICInformation1992())
                .shareholdersFunds(getShareholdersFunds())
                .shortLoans(getShortLoans())
                .stocksWorkInProgressPercentCurrentAssets(getStocksWorkInProgressPercentCurrentAssets())
                .timeSinceLastAccsSubmitted(getTimeSinceLastAccsSubmitted())
                .timeSinceLastApprovalVolArrangement(getTimeSinceLastApprovalVolArrangement())
                .timeSinceLastApptAdministrator(getTimeSinceLastApptAdministrator())
                .timeSinceLastApptCompLiquidator(getTimeSinceLastApptCompLiquidator())
                .timeSinceLastApptReceiver(getTimeSinceLastApptReceiver())
                .timeSinceLastApptVolLiquidator(getTimeSinceLastApptVolLiquidator())
                .timeSinceLastCompanyDissolved(getTimeSinceLastCompanyDissolved())
                .timeSinceLastCompanyReinstated(getTimeSinceLastCompanyReinstated())
                .timeSinceLastCompletionVolArrangement(getTimeSinceLastCompletionVolArrangement())
                .timeSinceLastDerogatoryItem(getTimeSinceLastDerogatoryItem())
                .timeSinceLastDirAppt(getTimeSinceLastDirAppt())
                .timeSinceLastDischargeAdministrator(getTimeSinceLastDischargeAdministrator())
                .timeSinceLastDismissedPetition(getTimeSinceLastDismissedPetition())
                .timeSinceLastIntentionToDissolve(getTimeSinceLastIntentionToDissolve())
                .timeSinceLastMeetingCreditors(getTimeSinceLastMeetingCreditors())
                .timeSinceLastPetitionCompWindUp(getTimeSinceLastPetitionCompWindUp())
                .timeSinceLastReceiverCeasing(getTimeSinceLastReceiverCeasing())
                .timeSinceLastRegOfficeChange(getTimeSinceLastRegOfficeChange())
                .timeSinceLastResolutionWindUp(getTimeSinceLastResolutionWindUp())
                .timeSinceLastRetsSubmitted(getTimeSinceLastRetsSubmitted())
                .timeSinceLastRevocationVolArrangement(getTimeSinceLastRevocationVolArrangement())
                .timeSinceLastSuspensionVolArrangement(getTimeSinceLastSuspensionVolArrangement())
                .timeSinceLastWindUpHearing(getTimeSinceLastWindUpHearing())
                .timeSinceLastWindUpOrder(getTimeSinceLastWindUpOrder())
                .totAssetsEmp(getTotAssetsEmp())
                .totValCCJsPropShareFunds(getTotValCCJsPropShareFunds())
                .totalAssets(getTotalAssets())
                .totalCurrentAssets(getTotalCurrentAssets())
                .totalCurrentLiabilities(getTotalCurrentLiabilities())
                .totalFixedAssetsPercentTotalAssets(getTotalFixedAssetsPercentTotalAssets())
                .totalLongTermLiabilities(getTotalLongTermLiabilities())
                .totalTurnover(getTotalTurnover())
                .turnoverPerEmp(getTurnoverPerEmp())
                .valCCJsLast24MonthsPropShareFunds(getValCCJsLast24MonthsPropShareFunds())
                .valueCCJs0To72(getValueCCJs0To72())
                .valueCCJs13To24(getValueCCJs13To24())
                .valueCCJs25To36(getValueCCJs25To36())
                .valueCCJs37To48(getValueCCJs37To48())
                .valueCCJs49To60(getValueCCJs49To60())
                .valueCCJs61To72(getValueCCJs61To72())
                .valueCCJsLast12Months(getValueCCJsLast12Months())
                .valueMostRecentCCJ(getValueMostRecentCCJ())
                .workingCapital(getWorkingCapital())
                .workingCapitalPercentCurrentPlusFixedAssets(getWorkingCapitalPercentCurrentPlusFixedAssets());
        return builder;
    }

    /**
     * Class to build instances of {@link LtdScoringData}.
     */
    public static class Builder {
        private Integer accountingPeriod;
        private Double acidTest;
        private Integer ageMostRecentCCJ;
        private String auditType;
        private String auditorsQualifications;
        private Integer baseTrendShareholdersFunds;
        private Double borrowingRatio;
        private Double capitalEmployed;
        private Double capitalEmployedPercentTotalAssets;
        private String companyAge;
        private String companyClass;
        private String consAccounts;
        private Double creditPeriod;
        private String currAccsAvailabe;
        private String currency;
        private Double currentLiabilitiesPercentTotalAssets;
        private Double currentratio;
        private String dateOfAccounts;
        private Double debtGearing;
        private String directorsCIFASFlag;
        private String directorsNOCFlag;
        private Double dividends;
        private String dormancyFlag;
        private Double equityGearing;
        private String ficheDate;
        private String filedAccsType;
        private Double fixedAssets;
        private Double grossAssets;
        private String hasSubsidiaries;
        private Double highestValueCCJ;
        private String incompleteDirsFlag;
        private Double intangibleAssets;
        private String isSubsidiary;
        private Double issuedCapital;
        private String lastDerogatoryItem;
        private String latenessAccounts;
        private String latestAccountsType;
        private String legalStatus;
        private List<LimitedCompanyDelphiPayment> limitedCompanyDelphiPayment;
        private List<LimitedCompanyDelphiRisk> limitedCompanyDelphiRisk;
        private LimitedCompanyDelphiCAIS limitedCompanyDelphiCAIS;
        private Double liquidityStandardRatio;
        private Double netWorth;
        private Double numAppointmentsLast12;
        private Integer numApprovalVolArrangement;
        private Integer numApptAdministrator;
        private Integer numApptCompLiquidator;
        private Integer numApptReceiver;
        private Integer numApptVolLiquidator;
        private Integer numCompanyDissolved;
        private Integer numCompanyReinstated;
        private Integer numCompletionsVolArrangement;
        private Integer numCurrDirs;
        private Integer numDirsHoldingShares;
        private Integer numDirsIncorpAgents;
        private Integer numDischargeAdministrator;
        private Integer numDismissedPetition;
        private Integer numDisqCurrDirs;
        private Double numEmployees;
        private Integer numIntentionToDissolve;
        private Integer numMeetingsCreditors;
        private Integer numMemArtsChangesLast12Months;
        private Integer numPetitionCompWindUp;
        private Integer numReceiverCeasing;
        private Integer numRegOfficeChangesLast12Months;
        private Integer numResolutionWindUp;
        private Integer numRevocationVoluntaryArrangement;
        private Integer numSatMortgages;
        private Integer numSuspensionVolArrangement;
        private Integer numUnsatMortgages;
        private Integer numUnsatPartSatMortgages;
        private Integer numWindUpOrders;
        private Integer numYearsAccosAvailable;
        private Integer numYearsPreTaxProfitLessThan0Last4Years;
        private Integer numberCCJs0To72;
        private Integer numberCCJs13To24;
        private Integer numberCCJs25To36;
        private Integer numberCCJs37To48;
        private Integer numberCCJs49To60;
        private Integer numberCCJs61To72;
        private Integer numberCCJsLast12Months;
        private Integer numberDaysToFile;
        private Integer oldestCurrDirAge;
        private String outOfDateFlag;
        private Double percentChangeCapitalEmployed;
        private Double percentChangeCurrentRatio;
        private Double percentChangePreTaxProfitLoss;
        private Double percentChangeShareholdersFunds;
        private Double percentChangeTotalAssets;
        private Double percentageDirsResidentUK;
        private Integer preTaxMarginQuartile;
        private Double preTaxProfitLoss;
        private Double preTaxProfitMargin;
        private String prevAccountsDormancyFlag;
        private String prevAccsAvailabile;
        private String prevAccsConsAccounts;
        private String prevAccsCurrency;
        private Double proportionCurrDirsToPrevDirLast12;
        private String regOfficeCIFASIndicator;
        private String region;
        private String reportUpdateFlag;
        private Double retainedEarnings;
        private Double retainedProfit;
        private Double returnOnAssets;
        private Integer returnOnAssetsQuartile;
        private Double returnOnCapital;
        private Double revaluationReserves;
        private SICInfo1980 sICInformation1980;
        private SICInfo1992 sICInformation1992;
        private Double shareholdersFunds;
        private Double shortLoans;
        private Double stocksWorkInProgressPercentCurrentAssets;
        private Integer timeSinceLastAccsSubmitted;
        private Double timeSinceLastApprovalVolArrangement;
        private Double timeSinceLastApptAdministrator;
        private Double timeSinceLastApptCompLiquidator;
        private Double timeSinceLastApptReceiver;
        private Double timeSinceLastApptVolLiquidator;
        private Double timeSinceLastCompanyDissolved;
        private Double timeSinceLastCompanyReinstated;
        private Double timeSinceLastCompletionVolArrangement;
        private Double timeSinceLastDerogatoryItem;
        private Integer timeSinceLastDirAppt;
        private Double timeSinceLastDischargeAdministrator;
        private Double timeSinceLastDismissedPetition;
        private Double timeSinceLastIntentionToDissolve;
        private Double timeSinceLastMeetingCreditors;
        private Double timeSinceLastPetitionCompWindUp;
        private Double timeSinceLastReceiverCeasing;
        private Integer timeSinceLastRegOfficeChange;
        private Double timeSinceLastResolutionWindUp;
        private Integer timeSinceLastRetsSubmitted;
        private Double timeSinceLastRevocationVolArrangement;
        private Double timeSinceLastSuspensionVolArrangement;
        private Integer timeSinceLastWindUpHearing;
        private Double timeSinceLastWindUpOrder;
        private Double totAssetsEmp;
        private Double totValCCJsPropShareFunds;
        private Double totalAssets;
        private Double totalCurrentAssets;
        private Double totalCurrentLiabilities;
        private Double totalFixedAssetsPercentTotalAssets;
        private Double totalLongTermLiabilities;
        private Double totalTurnover;
        private Double turnoverPerEmp;
        private Double valCCJsLast24MonthsPropShareFunds;
        private Double valueCCJs0To72;
        private Double valueCCJs13To24;
        private Double valueCCJs25To36;
        private Double valueCCJs37To48;
        private Double valueCCJs49To60;
        private Double valueCCJs61To72;
        private Double valueCCJsLast12Months;
        private Double valueMostRecentCCJ;
        private Double workingCapital;
        private Double workingCapitalPercentCurrentPlusFixedAssets;



        /**
         * Setter for accountingPeriod.
         * @param  accountingPeriod  Integer value for accountingPeriod.
         * @return Builder
         */
        public Builder accountingPeriod(Integer accountingPeriod) {
            this.accountingPeriod = accountingPeriod;
            return this;
        }

        /**
         * Setter for acidTest.
         * @param  acidTest  Double value for acidTest.
         * @return Builder
         */
        public Builder acidTest(Double acidTest) {
            this.acidTest = acidTest;
            return this;
        }

        /**
         * Setter for ageMostRecentCCJ.
         * @param  ageMostRecentCCJ  Integer value for ageMostRecentCCJ.
         * @return Builder
         */
        public Builder ageMostRecentCCJ(Integer ageMostRecentCCJ) {
            this.ageMostRecentCCJ = ageMostRecentCCJ;
            return this;
        }

        /**
         * Setter for auditType.
         * @param  auditType  String value for auditType.
         * @return Builder
         */
        public Builder auditType(String auditType) {
            this.auditType = auditType;
            return this;
        }

        /**
         * Setter for auditorsQualifications.
         * @param  auditorsQualifications  String value for auditorsQualifications.
         * @return Builder
         */
        public Builder auditorsQualifications(String auditorsQualifications) {
            this.auditorsQualifications = auditorsQualifications;
            return this;
        }

        /**
         * Setter for baseTrendShareholdersFunds.
         * @param  baseTrendShareholdersFunds  Integer value for baseTrendShareholdersFunds.
         * @return Builder
         */
        public Builder baseTrendShareholdersFunds(Integer baseTrendShareholdersFunds) {
            this.baseTrendShareholdersFunds = baseTrendShareholdersFunds;
            return this;
        }

        /**
         * Setter for borrowingRatio.
         * @param  borrowingRatio  Double value for borrowingRatio.
         * @return Builder
         */
        public Builder borrowingRatio(Double borrowingRatio) {
            this.borrowingRatio = borrowingRatio;
            return this;
        }

        /**
         * Setter for capitalEmployed.
         * @param  capitalEmployed  Double value for capitalEmployed.
         * @return Builder
         */
        public Builder capitalEmployed(Double capitalEmployed) {
            this.capitalEmployed = capitalEmployed;
            return this;
        }

        /**
         * Setter for capitalEmployedPercentTotalAssets.
         * @param  capitalEmployedPercentTotalAssets  Double value for
         *         capitalEmployedPercentTotalAssets.
         * @return Builder
         */
        public Builder capitalEmployedPercentTotalAssets(
                Double capitalEmployedPercentTotalAssets) {
            this.capitalEmployedPercentTotalAssets = capitalEmployedPercentTotalAssets;
            return this;
        }

        /**
         * Setter for companyAge.
         * @param  companyAge  String value for companyAge.
         * @return Builder
         */
        public Builder companyAge(String companyAge) {
            this.companyAge = companyAge;
            return this;
        }

        /**
         * Setter for companyClass.
         * @param  companyClass  String value for companyClass.
         * @return Builder
         */
        public Builder companyClass(String companyClass) {
            this.companyClass = companyClass;
            return this;
        }

        /**
         * Setter for consAccounts.
         * @param  consAccounts  String value for consAccounts.
         * @return Builder
         */
        public Builder consAccounts(String consAccounts) {
            this.consAccounts = consAccounts;
            return this;
        }

        /**
         * Setter for creditPeriod.
         * @param  creditPeriod  Double value for creditPeriod.
         * @return Builder
         */
        public Builder creditPeriod(Double creditPeriod) {
            this.creditPeriod = creditPeriod;
            return this;
        }

        /**
         * Setter for currAccsAvailabe.
         * @param  currAccsAvailabe  String value for currAccsAvailabe.
         * @return Builder
         */
        public Builder currAccsAvailabe(String currAccsAvailabe) {
            this.currAccsAvailabe = currAccsAvailabe;
            return this;
        }

        /**
         * Setter for currency.
         * @param  currency  String value for currency.
         * @return Builder
         */
        public Builder currency(String currency) {
            this.currency = currency;
            return this;
        }

        /**
         * Setter for currentLiabilitiesPercentTotalAssets.
         * @param  currentLiabilitiesPercentTotalAssets  Double value for
         *         currentLiabilitiesPercentTotalAssets.
         * @return Builder
         */
        public Builder currentLiabilitiesPercentTotalAssets(
                Double currentLiabilitiesPercentTotalAssets) {
            this.currentLiabilitiesPercentTotalAssets = currentLiabilitiesPercentTotalAssets;
            return this;
        }

        /**
         * Setter for currentratio.
         * @param  currentratio  Double value for currentratio.
         * @return Builder
         */
        public Builder currentratio(Double currentratio) {
            this.currentratio = currentratio;
            return this;
        }

        /**
         * Setter for dateOfAccounts.
         * @param  dateOfAccounts  String value for dateOfAccounts.
         * @return Builder
         */
        public Builder dateOfAccounts(String dateOfAccounts) {
            this.dateOfAccounts = dateOfAccounts;
            return this;
        }

        /**
         * Setter for debtGearing.
         * @param  debtGearing  Double value for debtGearing.
         * @return Builder
         */
        public Builder debtGearing(Double debtGearing) {
            this.debtGearing = debtGearing;
            return this;
        }

        /**
         * Setter for directorsCIFASFlag.
         * @param  directorsCIFASFlag  String value for directorsCIFASFlag.
         * @return Builder
         */
        public Builder directorsCIFASFlag(String directorsCIFASFlag) {
            this.directorsCIFASFlag = directorsCIFASFlag;
            return this;
        }

        /**
         * Setter for directorsNOCFlag.
         * @param  directorsNOCFlag  String value for directorsNOCFlag.
         * @return Builder
         */
        public Builder directorsNOCFlag(String directorsNOCFlag) {
            this.directorsNOCFlag = directorsNOCFlag;
            return this;
        }

        /**
         * Setter for dividends.
         * @param  dividends  Double value for dividends.
         * @return Builder
         */
        public Builder dividends(Double dividends) {
            this.dividends = dividends;
            return this;
        }

        /**
         * Setter for dormancyFlag.
         * @param  dormancyFlag  String value for dormancyFlag.
         * @return Builder
         */
        public Builder dormancyFlag(String dormancyFlag) {
            this.dormancyFlag = dormancyFlag;
            return this;
        }

        /**
         * Setter for equityGearing.
         * @param  equityGearing  Double value for equityGearing.
         * @return Builder
         */
        public Builder equityGearing(Double equityGearing) {
            this.equityGearing = equityGearing;
            return this;
        }

        /**
         * Setter for ficheDate.
         * @param  ficheDate  String value for ficheDate.
         * @return Builder
         */
        public Builder ficheDate(String ficheDate) {
            this.ficheDate = ficheDate;
            return this;
        }

        /**
         * Setter for filedAccsType.
         * @param  filedAccsType  String value for filedAccsType.
         * @return Builder
         */
        public Builder filedAccsType(String filedAccsType) {
            this.filedAccsType = filedAccsType;
            return this;
        }

        /**
         * Setter for fixedAssets.
         * @param  fixedAssets  Double value for fixedAssets.
         * @return Builder
         */
        public Builder fixedAssets(Double fixedAssets) {
            this.fixedAssets = fixedAssets;
            return this;
        }

        /**
         * Setter for grossAssets.
         * @param  grossAssets  Double value for grossAssets.
         * @return Builder
         */
        public Builder grossAssets(Double grossAssets) {
            this.grossAssets = grossAssets;
            return this;
        }

        /**
         * Setter for hasSubsidiaries.
         * @param  hasSubsidiaries  String value for hasSubsidiaries.
         * @return Builder
         */
        public Builder hasSubsidiaries(String hasSubsidiaries) {
            this.hasSubsidiaries = hasSubsidiaries;
            return this;
        }

        /**
         * Setter for highestValueCCJ.
         * @param  highestValueCCJ  Double value for highestValueCCJ.
         * @return Builder
         */
        public Builder highestValueCCJ(Double highestValueCCJ) {
            this.highestValueCCJ = highestValueCCJ;
            return this;
        }

        /**
         * Setter for incompleteDirsFlag.
         * @param  incompleteDirsFlag  String value for incompleteDirsFlag.
         * @return Builder
         */
        public Builder incompleteDirsFlag(String incompleteDirsFlag) {
            this.incompleteDirsFlag = incompleteDirsFlag;
            return this;
        }

        /**
         * Setter for intangibleAssets.
         * @param  intangibleAssets  Double value for intangibleAssets.
         * @return Builder
         */
        public Builder intangibleAssets(Double intangibleAssets) {
            this.intangibleAssets = intangibleAssets;
            return this;
        }

        /**
         * Setter for isSubsidiary.
         * @param  isSubsidiary  String value for isSubsidiary.
         * @return Builder
         */
        public Builder isSubsidiary(String isSubsidiary) {
            this.isSubsidiary = isSubsidiary;
            return this;
        }

        /**
         * Setter for issuedCapital.
         * @param  issuedCapital  Double value for issuedCapital.
         * @return Builder
         */
        public Builder issuedCapital(Double issuedCapital) {
            this.issuedCapital = issuedCapital;
            return this;
        }

        /**
         * Setter for lastDerogatoryItem.
         * @param  lastDerogatoryItem  String value for lastDerogatoryItem.
         * @return Builder
         */
        public Builder lastDerogatoryItem(String lastDerogatoryItem) {
            this.lastDerogatoryItem = lastDerogatoryItem;
            return this;
        }

        /**
         * Setter for latenessAccounts.
         * @param  latenessAccounts  String value for latenessAccounts.
         * @return Builder
         */
        public Builder latenessAccounts(String latenessAccounts) {
            this.latenessAccounts = latenessAccounts;
            return this;
        }

        /**
         * Setter for latestAccountsType.
         * @param  latestAccountsType  String value for latestAccountsType.
         * @return Builder
         */
        public Builder latestAccountsType(String latestAccountsType) {
            this.latestAccountsType = latestAccountsType;
            return this;
        }

        /**
         * Setter for legalStatus.
         * @param  legalStatus  String value for legalStatus.
         * @return Builder
         */
        public Builder legalStatus(String legalStatus) {
            this.legalStatus = legalStatus;
            return this;
        }

        /**
         * Setter for limitedCompanyDelphiPayment.
         * @param  limitedCompanyDelphiPayment  List of LimitedCompanyDelphiPayment value for
         *         limitedCompanyDelphiPayment.
         * @return Builder
         */
        public Builder limitedCompanyDelphiPayment(
                List<LimitedCompanyDelphiPayment> limitedCompanyDelphiPayment) {
            this.limitedCompanyDelphiPayment = limitedCompanyDelphiPayment;
            return this;
        }

        /**
         * Setter for limitedCompanyDelphiRisk.
         * @param  limitedCompanyDelphiRisk  List of LimitedCompanyDelphiRisk value for
         *         limitedCompanyDelphiRisk.
         * @return Builder
         */
        public Builder limitedCompanyDelphiRisk(
                List<LimitedCompanyDelphiRisk> limitedCompanyDelphiRisk) {
            this.limitedCompanyDelphiRisk = limitedCompanyDelphiRisk;
            return this;
        }

        /**
         * Setter for limitedCompanyDelphiCAIS.
         * @param  limitedCompanyDelphiCAIS  LimitedCompanyDelphiCAIS value for
         *         limitedCompanyDelphiCAIS.
         * @return Builder
         */
        public Builder limitedCompanyDelphiCAIS(
                LimitedCompanyDelphiCAIS limitedCompanyDelphiCAIS) {
            this.limitedCompanyDelphiCAIS = limitedCompanyDelphiCAIS;
            return this;
        }

        /**
         * Setter for liquidityStandardRatio.
         * @param  liquidityStandardRatio  Double value for liquidityStandardRatio.
         * @return Builder
         */
        public Builder liquidityStandardRatio(Double liquidityStandardRatio) {
            this.liquidityStandardRatio = liquidityStandardRatio;
            return this;
        }

        /**
         * Setter for netWorth.
         * @param  netWorth  Double value for netWorth.
         * @return Builder
         */
        public Builder netWorth(Double netWorth) {
            this.netWorth = netWorth;
            return this;
        }

        /**
         * Setter for numAppointmentsLast12.
         * @param  numAppointmentsLast12  Double value for numAppointmentsLast12.
         * @return Builder
         */
        public Builder numAppointmentsLast12(Double numAppointmentsLast12) {
            this.numAppointmentsLast12 = numAppointmentsLast12;
            return this;
        }

        /**
         * Setter for numApprovalVolArrangement.
         * @param  numApprovalVolArrangement  Integer value for numApprovalVolArrangement.
         * @return Builder
         */
        public Builder numApprovalVolArrangement(Integer numApprovalVolArrangement) {
            this.numApprovalVolArrangement = numApprovalVolArrangement;
            return this;
        }

        /**
         * Setter for numApptAdministrator.
         * @param  numApptAdministrator  Integer value for numApptAdministrator.
         * @return Builder
         */
        public Builder numApptAdministrator(Integer numApptAdministrator) {
            this.numApptAdministrator = numApptAdministrator;
            return this;
        }

        /**
         * Setter for numApptCompLiquidator.
         * @param  numApptCompLiquidator  Integer value for numApptCompLiquidator.
         * @return Builder
         */
        public Builder numApptCompLiquidator(Integer numApptCompLiquidator) {
            this.numApptCompLiquidator = numApptCompLiquidator;
            return this;
        }

        /**
         * Setter for numApptReceiver.
         * @param  numApptReceiver  Integer value for numApptReceiver.
         * @return Builder
         */
        public Builder numApptReceiver(Integer numApptReceiver) {
            this.numApptReceiver = numApptReceiver;
            return this;
        }

        /**
         * Setter for numApptVolLiquidator.
         * @param  numApptVolLiquidator  Integer value for numApptVolLiquidator.
         * @return Builder
         */
        public Builder numApptVolLiquidator(Integer numApptVolLiquidator) {
            this.numApptVolLiquidator = numApptVolLiquidator;
            return this;
        }

        /**
         * Setter for numCompanyDissolved.
         * @param  numCompanyDissolved  Integer value for numCompanyDissolved.
         * @return Builder
         */
        public Builder numCompanyDissolved(Integer numCompanyDissolved) {
            this.numCompanyDissolved = numCompanyDissolved;
            return this;
        }

        /**
         * Setter for numCompanyReinstated.
         * @param  numCompanyReinstated  Integer value for numCompanyReinstated.
         * @return Builder
         */
        public Builder numCompanyReinstated(Integer numCompanyReinstated) {
            this.numCompanyReinstated = numCompanyReinstated;
            return this;
        }

        /**
         * Setter for numCompletionsVolArrangement.
         * @param  numCompletionsVolArrangement  Integer value for numCompletionsVolArrangement.
         * @return Builder
         */
        public Builder numCompletionsVolArrangement(Integer numCompletionsVolArrangement) {
            this.numCompletionsVolArrangement = numCompletionsVolArrangement;
            return this;
        }

        /**
         * Setter for numCurrDirs.
         * @param  numCurrDirs  Integer value for numCurrDirs.
         * @return Builder
         */
        public Builder numCurrDirs(Integer numCurrDirs) {
            this.numCurrDirs = numCurrDirs;
            return this;
        }

        /**
         * Setter for numDirsHoldingShares.
         * @param  numDirsHoldingShares  Integer value for numDirsHoldingShares.
         * @return Builder
         */
        public Builder numDirsHoldingShares(Integer numDirsHoldingShares) {
            this.numDirsHoldingShares = numDirsHoldingShares;
            return this;
        }

        /**
         * Setter for numDirsIncorpAgents.
         * @param  numDirsIncorpAgents  Integer value for numDirsIncorpAgents.
         * @return Builder
         */
        public Builder numDirsIncorpAgents(Integer numDirsIncorpAgents) {
            this.numDirsIncorpAgents = numDirsIncorpAgents;
            return this;
        }

        /**
         * Setter for numDischargeAdministrator.
         * @param  numDischargeAdministrator  Integer value for numDischargeAdministrator.
         * @return Builder
         */
        public Builder numDischargeAdministrator(Integer numDischargeAdministrator) {
            this.numDischargeAdministrator = numDischargeAdministrator;
            return this;
        }

        /**
         * Setter for numDismissedPetition.
         * @param  numDismissedPetition  Integer value for numDismissedPetition.
         * @return Builder
         */
        public Builder numDismissedPetition(Integer numDismissedPetition) {
            this.numDismissedPetition = numDismissedPetition;
            return this;
        }

        /**
         * Setter for numDisqCurrDirs.
         * @param  numDisqCurrDirs  Integer value for numDisqCurrDirs.
         * @return Builder
         */
        public Builder numDisqCurrDirs(Integer numDisqCurrDirs) {
            this.numDisqCurrDirs = numDisqCurrDirs;
            return this;
        }

        /**
         * Setter for numEmployees.
         * @param  numEmployees  Double value for numEmployees.
         * @return Builder
         */
        public Builder numEmployees(Double numEmployees) {
            this.numEmployees = numEmployees;
            return this;
        }

        /**
         * Setter for numIntentionToDissolve.
         * @param  numIntentionToDissolve  Integer value for numIntentionToDissolve.
         * @return Builder
         */
        public Builder numIntentionToDissolve(Integer numIntentionToDissolve) {
            this.numIntentionToDissolve = numIntentionToDissolve;
            return this;
        }

        /**
         * Setter for numMeetingsCreditors.
         * @param  numMeetingsCreditors  Integer value for numMeetingsCreditors.
         * @return Builder
         */
        public Builder numMeetingsCreditors(Integer numMeetingsCreditors) {
            this.numMeetingsCreditors = numMeetingsCreditors;
            return this;
        }

        /**
         * Setter for numMemArtsChangesLast12Months.
         * @param  numMemArtsChangesLast12Months  Integer value for numMemArtsChangesLast12Months.
         * @return Builder
         */
        public Builder numMemArtsChangesLast12Months(Integer numMemArtsChangesLast12Months) {
            this.numMemArtsChangesLast12Months = numMemArtsChangesLast12Months;
            return this;
        }

        /**
         * Setter for numPetitionCompWindUp.
         * @param  numPetitionCompWindUp  Integer value for numPetitionCompWindUp.
         * @return Builder
         */
        public Builder numPetitionCompWindUp(Integer numPetitionCompWindUp) {
            this.numPetitionCompWindUp = numPetitionCompWindUp;
            return this;
        }

        /**
         * Setter for numReceiverCeasing.
         * @param  numReceiverCeasing  Integer value for numReceiverCeasing.
         * @return Builder
         */
        public Builder numReceiverCeasing(Integer numReceiverCeasing) {
            this.numReceiverCeasing = numReceiverCeasing;
            return this;
        }

        /**
         * Setter for numRegOfficeChangesLast12Months.
         * @param  numRegOfficeChangesLast12Months  Integer value for
         *         numRegOfficeChangesLast12Months.
         * @return Builder
         */
        public Builder numRegOfficeChangesLast12Months(Integer numRegOfficeChangesLast12Months) {
            this.numRegOfficeChangesLast12Months = numRegOfficeChangesLast12Months;
            return this;
        }

        /**
         * Setter for numResolutionWindUp.
         * @param  numResolutionWindUp  Integer value for numResolutionWindUp.
         * @return Builder
         */
        public Builder numResolutionWindUp(Integer numResolutionWindUp) {
            this.numResolutionWindUp = numResolutionWindUp;
            return this;
        }

        /**
         * Setter for numRevocationVoluntaryArrangement.
         * @param  numRevocationVoluntaryArrangement  Integer value for
         *         numRevocationVoluntaryArrangement.
         * @return Builder
         */
        public Builder numRevocationVoluntaryArrangement(
                Integer numRevocationVoluntaryArrangement) {
            this.numRevocationVoluntaryArrangement = numRevocationVoluntaryArrangement;
            return this;
        }

        /**
         * Setter for numSatMortgages.
         * @param  numSatMortgages  Integer value for numSatMortgages.
         * @return Builder
         */
        public Builder numSatMortgages(Integer numSatMortgages) {
            this.numSatMortgages = numSatMortgages;
            return this;
        }

        /**
         * Setter for numSuspensionVolArrangement.
         * @param  numSuspensionVolArrangement  Integer value for numSuspensionVolArrangement.
         * @return Builder
         */
        public Builder numSuspensionVolArrangement(Integer numSuspensionVolArrangement) {
            this.numSuspensionVolArrangement = numSuspensionVolArrangement;
            return this;
        }

        /**
         * Setter for numUnsatMortgages.
         * @param  numUnsatMortgages  Integer value for numUnsatMortgages.
         * @return Builder
         */
        public Builder numUnsatMortgages(Integer numUnsatMortgages) {
            this.numUnsatMortgages = numUnsatMortgages;
            return this;
        }

        /**
         * Setter for numUnsatPartSatMortgages.
         * @param  numUnsatPartSatMortgages  Integer value for numUnsatPartSatMortgages.
         * @return Builder
         */
        public Builder numUnsatPartSatMortgages(Integer numUnsatPartSatMortgages) {
            this.numUnsatPartSatMortgages = numUnsatPartSatMortgages;
            return this;
        }

        /**
         * Setter for numWindUpOrders.
         * @param  numWindUpOrders  Integer value for numWindUpOrders.
         * @return Builder
         */
        public Builder numWindUpOrders(Integer numWindUpOrders) {
            this.numWindUpOrders = numWindUpOrders;
            return this;
        }

        /**
         * Setter for numYearsAccosAvailable.
         * @param  numYearsAccosAvailable  Integer value for numYearsAccosAvailable.
         * @return Builder
         */
        public Builder numYearsAccosAvailable(Integer numYearsAccosAvailable) {
            this.numYearsAccosAvailable = numYearsAccosAvailable;
            return this;
        }

        /**
         * Setter for numYearsPreTaxProfitLessThan0Last4Years.
         * @param  numYearsPreTaxProfitLessThan0Last4Years  Integer value for
         *         numYearsPreTaxProfitLessThan0Last4Years.
         * @return Builder
         */
        public Builder numYearsPreTaxProfitLessThan0Last4Years(
                Integer numYearsPreTaxProfitLessThan0Last4Years) {
            this.numYearsPreTaxProfitLessThan0Last4Years = numYearsPreTaxProfitLessThan0Last4Years;
            return this;
        }

        /**
         * Setter for numberCCJs0To72.
         * @param  numberCCJs0To72  Integer value for numberCCJs0To72.
         * @return Builder
         */
        public Builder numberCCJs0To72(Integer numberCCJs0To72) {
            this.numberCCJs0To72 = numberCCJs0To72;
            return this;
        }

        /**
         * Setter for numberCCJs13To24.
         * @param  numberCCJs13To24  Integer value for numberCCJs13To24.
         * @return Builder
         */
        public Builder numberCCJs13To24(Integer numberCCJs13To24) {
            this.numberCCJs13To24 = numberCCJs13To24;
            return this;
        }

        /**
         * Setter for numberCCJs25To36.
         * @param  numberCCJs25To36  Integer value for numberCCJs25To36.
         * @return Builder
         */
        public Builder numberCCJs25To36(Integer numberCCJs25To36) {
            this.numberCCJs25To36 = numberCCJs25To36;
            return this;
        }

        /**
         * Setter for numberCCJs37To48.
         * @param  numberCCJs37To48  Integer value for numberCCJs37To48.
         * @return Builder
         */
        public Builder numberCCJs37To48(Integer numberCCJs37To48) {
            this.numberCCJs37To48 = numberCCJs37To48;
            return this;
        }

        /**
         * Setter for numberCCJs49To60.
         * @param  numberCCJs49To60  Integer value for numberCCJs49To60.
         * @return Builder
         */
        public Builder numberCCJs49To60(Integer numberCCJs49To60) {
            this.numberCCJs49To60 = numberCCJs49To60;
            return this;
        }

        /**
         * Setter for numberCCJs61To72.
         * @param  numberCCJs61To72  Integer value for numberCCJs61To72.
         * @return Builder
         */
        public Builder numberCCJs61To72(Integer numberCCJs61To72) {
            this.numberCCJs61To72 = numberCCJs61To72;
            return this;
        }

        /**
         * Setter for numberCCJsLast12Months.
         * @param  numberCCJsLast12Months  Integer value for numberCCJsLast12Months.
         * @return Builder
         */
        public Builder numberCCJsLast12Months(Integer numberCCJsLast12Months) {
            this.numberCCJsLast12Months = numberCCJsLast12Months;
            return this;
        }

        /**
         * Setter for numberDaysToFile.
         * @param  numberDaysToFile  Integer value for numberDaysToFile.
         * @return Builder
         */
        public Builder numberDaysToFile(Integer numberDaysToFile) {
            this.numberDaysToFile = numberDaysToFile;
            return this;
        }

        /**
         * Setter for oldestCurrDirAge.
         * @param  oldestCurrDirAge  Integer value for oldestCurrDirAge.
         * @return Builder
         */
        public Builder oldestCurrDirAge(Integer oldestCurrDirAge) {
            this.oldestCurrDirAge = oldestCurrDirAge;
            return this;
        }

        /**
         * Setter for outOfDateFlag.
         * @param  outOfDateFlag  String value for outOfDateFlag.
         * @return Builder
         */
        public Builder outOfDateFlag(String outOfDateFlag) {
            this.outOfDateFlag = outOfDateFlag;
            return this;
        }

        /**
         * Setter for percentChangeCapitalEmployed.
         * @param  percentChangeCapitalEmployed  Double value for percentChangeCapitalEmployed.
         * @return Builder
         */
        public Builder percentChangeCapitalEmployed(Double percentChangeCapitalEmployed) {
            this.percentChangeCapitalEmployed = percentChangeCapitalEmployed;
            return this;
        }

        /**
         * Setter for percentChangeCurrentRatio.
         * @param  percentChangeCurrentRatio  Double value for percentChangeCurrentRatio.
         * @return Builder
         */
        public Builder percentChangeCurrentRatio(Double percentChangeCurrentRatio) {
            this.percentChangeCurrentRatio = percentChangeCurrentRatio;
            return this;
        }

        /**
         * Setter for percentChangePreTaxProfitLoss.
         * @param  percentChangePreTaxProfitLoss  Double value for percentChangePreTaxProfitLoss.
         * @return Builder
         */
        public Builder percentChangePreTaxProfitLoss(Double percentChangePreTaxProfitLoss) {
            this.percentChangePreTaxProfitLoss = percentChangePreTaxProfitLoss;
            return this;
        }

        /**
         * Setter for percentChangeShareholdersFunds.
         * @param  percentChangeShareholdersFunds  Double value for percentChangeShareholdersFunds.
         * @return Builder
         */
        public Builder percentChangeShareholdersFunds(Double percentChangeShareholdersFunds) {
            this.percentChangeShareholdersFunds = percentChangeShareholdersFunds;
            return this;
        }

        /**
         * Setter for percentChangeTotalAssets.
         * @param  percentChangeTotalAssets  Double value for percentChangeTotalAssets.
         * @return Builder
         */
        public Builder percentChangeTotalAssets(Double percentChangeTotalAssets) {
            this.percentChangeTotalAssets = percentChangeTotalAssets;
            return this;
        }

        /**
         * Setter for percentageDirsResidentUK.
         * @param  percentageDirsResidentUK  Double value for percentageDirsResidentUK.
         * @return Builder
         */
        public Builder percentageDirsResidentUK(Double percentageDirsResidentUK) {
            this.percentageDirsResidentUK = percentageDirsResidentUK;
            return this;
        }

        /**
         * Setter for preTaxMarginQuartile.
         * @param  preTaxMarginQuartile  Integer value for preTaxMarginQuartile.
         * @return Builder
         */
        public Builder preTaxMarginQuartile(Integer preTaxMarginQuartile) {
            this.preTaxMarginQuartile = preTaxMarginQuartile;
            return this;
        }

        /**
         * Setter for preTaxProfitLoss.
         * @param  preTaxProfitLoss  Double value for preTaxProfitLoss.
         * @return Builder
         */
        public Builder preTaxProfitLoss(Double preTaxProfitLoss) {
            this.preTaxProfitLoss = preTaxProfitLoss;
            return this;
        }

        /**
         * Setter for preTaxProfitMargin.
         * @param  preTaxProfitMargin  Double value for preTaxProfitMargin.
         * @return Builder
         */
        public Builder preTaxProfitMargin(Double preTaxProfitMargin) {
            this.preTaxProfitMargin = preTaxProfitMargin;
            return this;
        }

        /**
         * Setter for prevAccountsDormancyFlag.
         * @param  prevAccountsDormancyFlag  String value for prevAccountsDormancyFlag.
         * @return Builder
         */
        public Builder prevAccountsDormancyFlag(String prevAccountsDormancyFlag) {
            this.prevAccountsDormancyFlag = prevAccountsDormancyFlag;
            return this;
        }

        /**
         * Setter for prevAccsAvailabile.
         * @param  prevAccsAvailabile  String value for prevAccsAvailabile.
         * @return Builder
         */
        public Builder prevAccsAvailabile(String prevAccsAvailabile) {
            this.prevAccsAvailabile = prevAccsAvailabile;
            return this;
        }

        /**
         * Setter for prevAccsConsAccounts.
         * @param  prevAccsConsAccounts  String value for prevAccsConsAccounts.
         * @return Builder
         */
        public Builder prevAccsConsAccounts(String prevAccsConsAccounts) {
            this.prevAccsConsAccounts = prevAccsConsAccounts;
            return this;
        }

        /**
         * Setter for prevAccsCurrency.
         * @param  prevAccsCurrency  String value for prevAccsCurrency.
         * @return Builder
         */
        public Builder prevAccsCurrency(String prevAccsCurrency) {
            this.prevAccsCurrency = prevAccsCurrency;
            return this;
        }

        /**
         * Setter for proportionCurrDirsToPrevDirLast12.
         * @param  proportionCurrDirsToPrevDirLast12  Double value for
         *         proportionCurrDirsToPrevDirLast12.
         * @return Builder
         */
        public Builder proportionCurrDirsToPrevDirLast12(
                Double proportionCurrDirsToPrevDirLast12) {
            this.proportionCurrDirsToPrevDirLast12 = proportionCurrDirsToPrevDirLast12;
            return this;
        }

        /**
         * Setter for regOfficeCIFASIndicator.
         * @param  regOfficeCIFASIndicator  String value for regOfficeCIFASIndicator.
         * @return Builder
         */
        public Builder regOfficeCIFASIndicator(String regOfficeCIFASIndicator) {
            this.regOfficeCIFASIndicator = regOfficeCIFASIndicator;
            return this;
        }

        /**
         * Setter for region.
         * @param  region  String value for region.
         * @return Builder
         */
        public Builder region(String region) {
            this.region = region;
            return this;
        }

        /**
         * Setter for reportUpdateFlag.
         * @param  reportUpdateFlag  String value for reportUpdateFlag.
         * @return Builder
         */
        public Builder reportUpdateFlag(String reportUpdateFlag) {
            this.reportUpdateFlag = reportUpdateFlag;
            return this;
        }

        /**
         * Setter for retainedEarnings.
         * @param  retainedEarnings  Double value for retainedEarnings.
         * @return Builder
         */
        public Builder retainedEarnings(Double retainedEarnings) {
            this.retainedEarnings = retainedEarnings;
            return this;
        }

        /**
         * Setter for retainedProfit.
         * @param  retainedProfit  Double value for retainedProfit.
         * @return Builder
         */
        public Builder retainedProfit(Double retainedProfit) {
            this.retainedProfit = retainedProfit;
            return this;
        }

        /**
         * Setter for returnOnAssets.
         * @param  returnOnAssets  Double value for returnOnAssets.
         * @return Builder
         */
        public Builder returnOnAssets(Double returnOnAssets) {
            this.returnOnAssets = returnOnAssets;
            return this;
        }

        /**
         * Setter for returnOnAssetsQuartile.
         * @param  returnOnAssetsQuartile  Integer value for returnOnAssetsQuartile.
         * @return Builder
         */
        public Builder returnOnAssetsQuartile(Integer returnOnAssetsQuartile) {
            this.returnOnAssetsQuartile = returnOnAssetsQuartile;
            return this;
        }

        /**
         * Setter for returnOnCapital.
         * @param  returnOnCapital  Double value for returnOnCapital.
         * @return Builder
         */
        public Builder returnOnCapital(Double returnOnCapital) {
            this.returnOnCapital = returnOnCapital;
            return this;
        }

        /**
         * Setter for revaluationReserves.
         * @param  revaluationReserves  Double value for revaluationReserves.
         * @return Builder
         */
        public Builder revaluationReserves(Double revaluationReserves) {
            this.revaluationReserves = revaluationReserves;
            return this;
        }

        /**
         * Setter for sICInformation1980.
         * @param  sICInformation1980  SICInfo1980 value for sICInformation1980.
         * @return Builder
         */
        public Builder sICInformation1980(SICInfo1980 sICInformation1980) {
            this.sICInformation1980 = sICInformation1980;
            return this;
        }

        /**
         * Setter for sICInformation1992.
         * @param  sICInformation1992  SICInfo1992 value for sICInformation1992.
         * @return Builder
         */
        public Builder sICInformation1992(SICInfo1992 sICInformation1992) {
            this.sICInformation1992 = sICInformation1992;
            return this;
        }

        /**
         * Setter for shareholdersFunds.
         * @param  shareholdersFunds  Double value for shareholdersFunds.
         * @return Builder
         */
        public Builder shareholdersFunds(Double shareholdersFunds) {
            this.shareholdersFunds = shareholdersFunds;
            return this;
        }

        /**
         * Setter for shortLoans.
         * @param  shortLoans  Double value for shortLoans.
         * @return Builder
         */
        public Builder shortLoans(Double shortLoans) {
            this.shortLoans = shortLoans;
            return this;
        }

        /**
         * Setter for stocksWorkInProgressPercentCurrentAssets.
         * @param  stocksWorkInProgressPercentCurrentAssets  Double value for
         *         stocksWorkInProgressPercentCurrentAssets.
         * @return Builder
         */
        public Builder stocksWorkInProgressPercentCurrentAssets(
                Double stocksWorkInProgressPercentCurrentAssets) {
            this.stocksWorkInProgressPercentCurrentAssets =
                    stocksWorkInProgressPercentCurrentAssets;
            return this;
        }

        /**
         * Setter for timeSinceLastAccsSubmitted.
         * @param  timeSinceLastAccsSubmitted  Integer value for timeSinceLastAccsSubmitted.
         * @return Builder
         */
        public Builder timeSinceLastAccsSubmitted(Integer timeSinceLastAccsSubmitted) {
            this.timeSinceLastAccsSubmitted = timeSinceLastAccsSubmitted;
            return this;
        }

        /**
         * Setter for timeSinceLastApprovalVolArrangement.
         * @param  timeSinceLastApprovalVolArrangement  Double value for
         *         timeSinceLastApprovalVolArrangement.
         * @return Builder
         */
        public Builder timeSinceLastApprovalVolArrangement(
                Double timeSinceLastApprovalVolArrangement) {
            this.timeSinceLastApprovalVolArrangement = timeSinceLastApprovalVolArrangement;
            return this;
        }

        /**
         * Setter for timeSinceLastApptAdministrator.
         * @param  timeSinceLastApptAdministrator  Double value for timeSinceLastApptAdministrator.
         * @return Builder
         */
        public Builder timeSinceLastApptAdministrator(Double timeSinceLastApptAdministrator) {
            this.timeSinceLastApptAdministrator = timeSinceLastApptAdministrator;
            return this;
        }

        /**
         * Setter for timeSinceLastApptCompLiquidator.
         * @param  timeSinceLastApptCompLiquidator  Double value for
         *         timeSinceLastApptCompLiquidator.
         * @return Builder
         */
        public Builder timeSinceLastApptCompLiquidator(Double timeSinceLastApptCompLiquidator) {
            this.timeSinceLastApptCompLiquidator = timeSinceLastApptCompLiquidator;
            return this;
        }

        /**
         * Setter for timeSinceLastApptReceiver.
         * @param  timeSinceLastApptReceiver  Double value for timeSinceLastApptReceiver.
         * @return Builder
         */
        public Builder timeSinceLastApptReceiver(Double timeSinceLastApptReceiver) {
            this.timeSinceLastApptReceiver = timeSinceLastApptReceiver;
            return this;
        }

        /**
         * Setter for timeSinceLastApptVolLiquidator.
         * @param  timeSinceLastApptVolLiquidator  Double value for timeSinceLastApptVolLiquidator.
         * @return Builder
         */
        public Builder timeSinceLastApptVolLiquidator(Double timeSinceLastApptVolLiquidator) {
            this.timeSinceLastApptVolLiquidator = timeSinceLastApptVolLiquidator;
            return this;
        }

        /**
         * Setter for timeSinceLastCompanyDissolved.
         * @param  timeSinceLastCompanyDissolved  Double value for timeSinceLastCompanyDissolved.
         * @return Builder
         */
        public Builder timeSinceLastCompanyDissolved(Double timeSinceLastCompanyDissolved) {
            this.timeSinceLastCompanyDissolved = timeSinceLastCompanyDissolved;
            return this;
        }

        /**
         * Setter for timeSinceLastCompanyReinstated.
         * @param  timeSinceLastCompanyReinstated  Double value for timeSinceLastCompanyReinstated.
         * @return Builder
         */
        public Builder timeSinceLastCompanyReinstated(Double timeSinceLastCompanyReinstated) {
            this.timeSinceLastCompanyReinstated = timeSinceLastCompanyReinstated;
            return this;
        }

        /**
         * Setter for timeSinceLastCompletionVolArrangement.
         * @param  timeSinceLastCompletionVolArrangement  Double value for
         *         timeSinceLastCompletionVolArrangement.
         * @return Builder
         */
        public Builder timeSinceLastCompletionVolArrangement(
                Double timeSinceLastCompletionVolArrangement) {
            this.timeSinceLastCompletionVolArrangement = timeSinceLastCompletionVolArrangement;
            return this;
        }

        /**
         * Setter for timeSinceLastDerogatoryItem.
         * @param  timeSinceLastDerogatoryItem  Double value for timeSinceLastDerogatoryItem.
         * @return Builder
         */
        public Builder timeSinceLastDerogatoryItem(Double timeSinceLastDerogatoryItem) {
            this.timeSinceLastDerogatoryItem = timeSinceLastDerogatoryItem;
            return this;
        }

        /**
         * Setter for timeSinceLastDirAppt.
         * @param  timeSinceLastDirAppt  Integer value for timeSinceLastDirAppt.
         * @return Builder
         */
        public Builder timeSinceLastDirAppt(Integer timeSinceLastDirAppt) {
            this.timeSinceLastDirAppt = timeSinceLastDirAppt;
            return this;
        }

        /**
         * Setter for timeSinceLastDischargeAdministrator.
         * @param  timeSinceLastDischargeAdministrator  Double value for
         *         timeSinceLastDischargeAdministrator.
         * @return Builder
         */
        public Builder timeSinceLastDischargeAdministrator(
                Double timeSinceLastDischargeAdministrator) {
            this.timeSinceLastDischargeAdministrator = timeSinceLastDischargeAdministrator;
            return this;
        }

        /**
         * Setter for timeSinceLastDismissedPetition.
         * @param  timeSinceLastDismissedPetition  Double value for timeSinceLastDismissedPetition.
         * @return Builder
         */
        public Builder timeSinceLastDismissedPetition(Double timeSinceLastDismissedPetition) {
            this.timeSinceLastDismissedPetition = timeSinceLastDismissedPetition;
            return this;
        }

        /**
         * Setter for timeSinceLastIntentionToDissolve.
         * @param  timeSinceLastIntentionToDissolve  Double value for
         *         timeSinceLastIntentionToDissolve.
         * @return Builder
         */
        public Builder timeSinceLastIntentionToDissolve(Double timeSinceLastIntentionToDissolve) {
            this.timeSinceLastIntentionToDissolve = timeSinceLastIntentionToDissolve;
            return this;
        }

        /**
         * Setter for timeSinceLastMeetingCreditors.
         * @param  timeSinceLastMeetingCreditors  Double value for timeSinceLastMeetingCreditors.
         * @return Builder
         */
        public Builder timeSinceLastMeetingCreditors(Double timeSinceLastMeetingCreditors) {
            this.timeSinceLastMeetingCreditors = timeSinceLastMeetingCreditors;
            return this;
        }

        /**
         * Setter for timeSinceLastPetitionCompWindUp.
         * @param  timeSinceLastPetitionCompWindUp  Double value for
         *         timeSinceLastPetitionCompWindUp.
         * @return Builder
         */
        public Builder timeSinceLastPetitionCompWindUp(Double timeSinceLastPetitionCompWindUp) {
            this.timeSinceLastPetitionCompWindUp = timeSinceLastPetitionCompWindUp;
            return this;
        }

        /**
         * Setter for timeSinceLastReceiverCeasing.
         * @param  timeSinceLastReceiverCeasing  Double value for timeSinceLastReceiverCeasing.
         * @return Builder
         */
        public Builder timeSinceLastReceiverCeasing(Double timeSinceLastReceiverCeasing) {
            this.timeSinceLastReceiverCeasing = timeSinceLastReceiverCeasing;
            return this;
        }

        /**
         * Setter for timeSinceLastRegOfficeChange.
         * @param  timeSinceLastRegOfficeChange  Integer value for timeSinceLastRegOfficeChange.
         * @return Builder
         */
        public Builder timeSinceLastRegOfficeChange(Integer timeSinceLastRegOfficeChange) {
            this.timeSinceLastRegOfficeChange = timeSinceLastRegOfficeChange;
            return this;
        }

        /**
         * Setter for timeSinceLastResolutionWindUp.
         * @param  timeSinceLastResolutionWindUp  Double value for timeSinceLastResolutionWindUp.
         * @return Builder
         */
        public Builder timeSinceLastResolutionWindUp(Double timeSinceLastResolutionWindUp) {
            this.timeSinceLastResolutionWindUp = timeSinceLastResolutionWindUp;
            return this;
        }

        /**
         * Setter for timeSinceLastRetsSubmitted.
         * @param  timeSinceLastRetsSubmitted  Integer value for timeSinceLastRetsSubmitted.
         * @return Builder
         */
        public Builder timeSinceLastRetsSubmitted(Integer timeSinceLastRetsSubmitted) {
            this.timeSinceLastRetsSubmitted = timeSinceLastRetsSubmitted;
            return this;
        }

        /**
         * Setter for timeSinceLastRevocationVolArrangement.
         * @param  timeSinceLastRevocationVolArrangement  Double value for
         *         timeSinceLastRevocationVolArrangement.
         * @return Builder
         */
        public Builder timeSinceLastRevocationVolArrangement(
                Double timeSinceLastRevocationVolArrangement) {
            this.timeSinceLastRevocationVolArrangement = timeSinceLastRevocationVolArrangement;
            return this;
        }

        /**
         * Setter for timeSinceLastSuspensionVolArrangement.
         * @param  timeSinceLastSuspensionVolArrangement  Double value for
         *         timeSinceLastSuspensionVolArrangement.
         * @return Builder
         */
        public Builder timeSinceLastSuspensionVolArrangement(
                Double timeSinceLastSuspensionVolArrangement) {
            this.timeSinceLastSuspensionVolArrangement = timeSinceLastSuspensionVolArrangement;
            return this;
        }

        /**
         * Setter for timeSinceLastWindUpHearing.
         * @param  timeSinceLastWindUpHearing  Integer value for timeSinceLastWindUpHearing.
         * @return Builder
         */
        public Builder timeSinceLastWindUpHearing(Integer timeSinceLastWindUpHearing) {
            this.timeSinceLastWindUpHearing = timeSinceLastWindUpHearing;
            return this;
        }

        /**
         * Setter for timeSinceLastWindUpOrder.
         * @param  timeSinceLastWindUpOrder  Double value for timeSinceLastWindUpOrder.
         * @return Builder
         */
        public Builder timeSinceLastWindUpOrder(Double timeSinceLastWindUpOrder) {
            this.timeSinceLastWindUpOrder = timeSinceLastWindUpOrder;
            return this;
        }

        /**
         * Setter for totAssetsEmp.
         * @param  totAssetsEmp  Double value for totAssetsEmp.
         * @return Builder
         */
        public Builder totAssetsEmp(Double totAssetsEmp) {
            this.totAssetsEmp = totAssetsEmp;
            return this;
        }

        /**
         * Setter for totValCCJsPropShareFunds.
         * @param  totValCCJsPropShareFunds  Double value for totValCCJsPropShareFunds.
         * @return Builder
         */
        public Builder totValCCJsPropShareFunds(Double totValCCJsPropShareFunds) {
            this.totValCCJsPropShareFunds = totValCCJsPropShareFunds;
            return this;
        }

        /**
         * Setter for totalAssets.
         * @param  totalAssets  Double value for totalAssets.
         * @return Builder
         */
        public Builder totalAssets(Double totalAssets) {
            this.totalAssets = totalAssets;
            return this;
        }

        /**
         * Setter for totalCurrentAssets.
         * @param  totalCurrentAssets  Double value for totalCurrentAssets.
         * @return Builder
         */
        public Builder totalCurrentAssets(Double totalCurrentAssets) {
            this.totalCurrentAssets = totalCurrentAssets;
            return this;
        }

        /**
         * Setter for totalCurrentLiabilities.
         * @param  totalCurrentLiabilities  Double value for totalCurrentLiabilities.
         * @return Builder
         */
        public Builder totalCurrentLiabilities(Double totalCurrentLiabilities) {
            this.totalCurrentLiabilities = totalCurrentLiabilities;
            return this;
        }

        /**
         * Setter for totalFixedAssetsPercentTotalAssets.
         * @param  totalFixedAssetsPercentTotalAssets  Double value for
         *         totalFixedAssetsPercentTotalAssets.
         * @return Builder
         */
        public Builder totalFixedAssetsPercentTotalAssets(
                Double totalFixedAssetsPercentTotalAssets) {
            this.totalFixedAssetsPercentTotalAssets = totalFixedAssetsPercentTotalAssets;
            return this;
        }

        /**
         * Setter for totalLongTermLiabilities.
         * @param  totalLongTermLiabilities  Double value for totalLongTermLiabilities.
         * @return Builder
         */
        public Builder totalLongTermLiabilities(Double totalLongTermLiabilities) {
            this.totalLongTermLiabilities = totalLongTermLiabilities;
            return this;
        }

        /**
         * Setter for totalTurnover.
         * @param  totalTurnover  Double value for totalTurnover.
         * @return Builder
         */
        public Builder totalTurnover(Double totalTurnover) {
            this.totalTurnover = totalTurnover;
            return this;
        }

        /**
         * Setter for turnoverPerEmp.
         * @param  turnoverPerEmp  Double value for turnoverPerEmp.
         * @return Builder
         */
        public Builder turnoverPerEmp(Double turnoverPerEmp) {
            this.turnoverPerEmp = turnoverPerEmp;
            return this;
        }

        /**
         * Setter for valCCJsLast24MonthsPropShareFunds.
         * @param  valCCJsLast24MonthsPropShareFunds  Double value for
         *         valCCJsLast24MonthsPropShareFunds.
         * @return Builder
         */
        public Builder valCCJsLast24MonthsPropShareFunds(
                Double valCCJsLast24MonthsPropShareFunds) {
            this.valCCJsLast24MonthsPropShareFunds = valCCJsLast24MonthsPropShareFunds;
            return this;
        }

        /**
         * Setter for valueCCJs0To72.
         * @param  valueCCJs0To72  Double value for valueCCJs0To72.
         * @return Builder
         */
        public Builder valueCCJs0To72(Double valueCCJs0To72) {
            this.valueCCJs0To72 = valueCCJs0To72;
            return this;
        }

        /**
         * Setter for valueCCJs13To24.
         * @param  valueCCJs13To24  Double value for valueCCJs13To24.
         * @return Builder
         */
        public Builder valueCCJs13To24(Double valueCCJs13To24) {
            this.valueCCJs13To24 = valueCCJs13To24;
            return this;
        }

        /**
         * Setter for valueCCJs25To36.
         * @param  valueCCJs25To36  Double value for valueCCJs25To36.
         * @return Builder
         */
        public Builder valueCCJs25To36(Double valueCCJs25To36) {
            this.valueCCJs25To36 = valueCCJs25To36;
            return this;
        }

        /**
         * Setter for valueCCJs37To48.
         * @param  valueCCJs37To48  Double value for valueCCJs37To48.
         * @return Builder
         */
        public Builder valueCCJs37To48(Double valueCCJs37To48) {
            this.valueCCJs37To48 = valueCCJs37To48;
            return this;
        }

        /**
         * Setter for valueCCJs49To60.
         * @param  valueCCJs49To60  Double value for valueCCJs49To60.
         * @return Builder
         */
        public Builder valueCCJs49To60(Double valueCCJs49To60) {
            this.valueCCJs49To60 = valueCCJs49To60;
            return this;
        }

        /**
         * Setter for valueCCJs61To72.
         * @param  valueCCJs61To72  Double value for valueCCJs61To72.
         * @return Builder
         */
        public Builder valueCCJs61To72(Double valueCCJs61To72) {
            this.valueCCJs61To72 = valueCCJs61To72;
            return this;
        }

        /**
         * Setter for valueCCJsLast12Months.
         * @param  valueCCJsLast12Months  Double value for valueCCJsLast12Months.
         * @return Builder
         */
        public Builder valueCCJsLast12Months(Double valueCCJsLast12Months) {
            this.valueCCJsLast12Months = valueCCJsLast12Months;
            return this;
        }

        /**
         * Setter for valueMostRecentCCJ.
         * @param  valueMostRecentCCJ  Double value for valueMostRecentCCJ.
         * @return Builder
         */
        public Builder valueMostRecentCCJ(Double valueMostRecentCCJ) {
            this.valueMostRecentCCJ = valueMostRecentCCJ;
            return this;
        }

        /**
         * Setter for workingCapital.
         * @param  workingCapital  Double value for workingCapital.
         * @return Builder
         */
        public Builder workingCapital(Double workingCapital) {
            this.workingCapital = workingCapital;
            return this;
        }

        /**
         * Setter for workingCapitalPercentCurrentPlusFixedAssets.
         * @param  workingCapitalPercentCurrentPlusFixedAssets  Double value for
         *         workingCapitalPercentCurrentPlusFixedAssets.
         * @return Builder
         */
        public Builder workingCapitalPercentCurrentPlusFixedAssets(
                Double workingCapitalPercentCurrentPlusFixedAssets) {
            this.workingCapitalPercentCurrentPlusFixedAssets =
                    workingCapitalPercentCurrentPlusFixedAssets;
            return this;
        }

        /**
         * Builds a new {@link LtdScoringData} object using the set fields.
         * @return {@link LtdScoringData}
         */
        public LtdScoringData build() {
            return new LtdScoringData(accountingPeriod, acidTest, ageMostRecentCCJ, auditType,
                    auditorsQualifications, baseTrendShareholdersFunds, borrowingRatio,
                    capitalEmployed, capitalEmployedPercentTotalAssets, companyAge, companyClass,
                    consAccounts, creditPeriod, currAccsAvailabe, currency,
                    currentLiabilitiesPercentTotalAssets, currentratio, dateOfAccounts, debtGearing,
                    directorsCIFASFlag, directorsNOCFlag, dividends, dormancyFlag, equityGearing,
                    ficheDate, filedAccsType, fixedAssets, grossAssets, hasSubsidiaries,
                    highestValueCCJ, incompleteDirsFlag, intangibleAssets, isSubsidiary,
                    issuedCapital, lastDerogatoryItem, latenessAccounts, latestAccountsType,
                    legalStatus, limitedCompanyDelphiPayment, limitedCompanyDelphiRisk,
                    limitedCompanyDelphiCAIS, liquidityStandardRatio, netWorth,
                    numAppointmentsLast12, numApprovalVolArrangement, numApptAdministrator,
                    numApptCompLiquidator, numApptReceiver, numApptVolLiquidator,
                    numCompanyDissolved, numCompanyReinstated, numCompletionsVolArrangement,
                    numCurrDirs, numDirsHoldingShares, numDirsIncorpAgents,
                    numDischargeAdministrator, numDismissedPetition, numDisqCurrDirs, numEmployees,
                    numIntentionToDissolve, numMeetingsCreditors, numMemArtsChangesLast12Months,
                    numPetitionCompWindUp, numReceiverCeasing, numRegOfficeChangesLast12Months,
                    numResolutionWindUp, numRevocationVoluntaryArrangement, numSatMortgages,
                    numSuspensionVolArrangement, numUnsatMortgages, numUnsatPartSatMortgages,
                    numWindUpOrders, numYearsAccosAvailable,
                    numYearsPreTaxProfitLessThan0Last4Years, numberCCJs0To72, numberCCJs13To24,
                    numberCCJs25To36, numberCCJs37To48, numberCCJs49To60, numberCCJs61To72,
                    numberCCJsLast12Months, numberDaysToFile, oldestCurrDirAge, outOfDateFlag,
                    percentChangeCapitalEmployed, percentChangeCurrentRatio,
                    percentChangePreTaxProfitLoss, percentChangeShareholdersFunds,
                    percentChangeTotalAssets, percentageDirsResidentUK, preTaxMarginQuartile,
                    preTaxProfitLoss, preTaxProfitMargin, prevAccountsDormancyFlag,
                    prevAccsAvailabile, prevAccsConsAccounts, prevAccsCurrency,
                    proportionCurrDirsToPrevDirLast12, regOfficeCIFASIndicator, region,
                    reportUpdateFlag, retainedEarnings, retainedProfit, returnOnAssets,
                    returnOnAssetsQuartile, returnOnCapital, revaluationReserves,
                    sICInformation1980, sICInformation1992, shareholdersFunds, shortLoans,
                    stocksWorkInProgressPercentCurrentAssets, timeSinceLastAccsSubmitted,
                    timeSinceLastApprovalVolArrangement, timeSinceLastApptAdministrator,
                    timeSinceLastApptCompLiquidator, timeSinceLastApptReceiver,
                    timeSinceLastApptVolLiquidator, timeSinceLastCompanyDissolved,
                    timeSinceLastCompanyReinstated, timeSinceLastCompletionVolArrangement,
                    timeSinceLastDerogatoryItem, timeSinceLastDirAppt,
                    timeSinceLastDischargeAdministrator, timeSinceLastDismissedPetition,
                    timeSinceLastIntentionToDissolve, timeSinceLastMeetingCreditors,
                    timeSinceLastPetitionCompWindUp, timeSinceLastReceiverCeasing,
                    timeSinceLastRegOfficeChange, timeSinceLastResolutionWindUp,
                    timeSinceLastRetsSubmitted, timeSinceLastRevocationVolArrangement,
                    timeSinceLastSuspensionVolArrangement, timeSinceLastWindUpHearing,
                    timeSinceLastWindUpOrder, totAssetsEmp, totValCCJsPropShareFunds, totalAssets,
                    totalCurrentAssets, totalCurrentLiabilities, totalFixedAssetsPercentTotalAssets,
                    totalLongTermLiabilities, totalTurnover, turnoverPerEmp,
                    valCCJsLast24MonthsPropShareFunds, valueCCJs0To72, valueCCJs13To24,
                    valueCCJs25To36, valueCCJs37To48, valueCCJs49To60, valueCCJs61To72,
                    valueCCJsLast12Months, valueMostRecentCCJ, workingCapital,
                    workingCapitalPercentCurrentPlusFixedAssets);
        }
    }
}
