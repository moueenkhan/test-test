/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for LtdPaymentFull type.
 */
public class LtdPaymentFull {
    private Integer avgDBT12Mnths;
    private Integer avgDBT3Mnths;
    private Integer avgDBT6Mnths;
    private List<CommonTerms> commonTerms;
    private List<CompDebitMonthly> companyDBTMonthly;
    private Integer companyNumMnths;
    private String fastestMonth;
    private Integer fastestPayment;
    private Integer indAvgDBT12Mnths;
    private Integer indAvgDBT3Mnths;
    private Integer indAvgDBT6Mnths;
    private List<IndDebitMonthly> indDBTMonthly;
    private Integer indNumberDBT100K;
    private Integer indNumberDBT100KPlus;
    private Integer indNumberDBT10K;
    private Integer indNumberDBT1K;
    private String indPaymentPattern;
    private Integer industryNumMnths;
    private String industrySICDesc;
    private Integer numCommonTerms;
    private Double numberCashFirst;
    private Double numberCollection;
    private Integer numberDBT100K;
    private Integer numberDBT100KPlus;
    private Integer numberDBT10K;
    private Integer numberDBT1K;
    private String paymentPattern;
    private String paymentToTerms;
    private String slowestMonth;
    private Integer slowestPayment;
    private String suppPaymentPattern;
    private List<UnpaidAccountsDetails> unpaidAccountsDetails;
    private Double valCollection;

    /**
     * Default constructor.
     */
    public LtdPaymentFull() {
    }

    /**
     * Initialization constructor.
     * @param  avgDBT12Mnths  Integer value for avgDBT12Mnths.
     * @param  avgDBT3Mnths  Integer value for avgDBT3Mnths.
     * @param  avgDBT6Mnths  Integer value for avgDBT6Mnths.
     * @param  commonTerms  List of CommonTerms value for commonTerms.
     * @param  companyDBTMonthly  List of CompDebitMonthly value for companyDBTMonthly.
     * @param  companyNumMnths  Integer value for companyNumMnths.
     * @param  fastestMonth  String value for fastestMonth.
     * @param  fastestPayment  Integer value for fastestPayment.
     * @param  indAvgDBT12Mnths  Integer value for indAvgDBT12Mnths.
     * @param  indAvgDBT3Mnths  Integer value for indAvgDBT3Mnths.
     * @param  indAvgDBT6Mnths  Integer value for indAvgDBT6Mnths.
     * @param  indDBTMonthly  List of IndDebitMonthly value for indDBTMonthly.
     * @param  indNumberDBT100K  Integer value for indNumberDBT100K.
     * @param  indNumberDBT100KPlus  Integer value for indNumberDBT100KPlus.
     * @param  indNumberDBT10K  Integer value for indNumberDBT10K.
     * @param  indNumberDBT1K  Integer value for indNumberDBT1K.
     * @param  indPaymentPattern  String value for indPaymentPattern.
     * @param  industryNumMnths  Integer value for industryNumMnths.
     * @param  industrySICDesc  String value for industrySICDesc.
     * @param  numCommonTerms  Integer value for numCommonTerms.
     * @param  numberCashFirst  Double value for numberCashFirst.
     * @param  numberCollection  Double value for numberCollection.
     * @param  numberDBT100K  Integer value for numberDBT100K.
     * @param  numberDBT100KPlus  Integer value for numberDBT100KPlus.
     * @param  numberDBT10K  Integer value for numberDBT10K.
     * @param  numberDBT1K  Integer value for numberDBT1K.
     * @param  paymentPattern  String value for paymentPattern.
     * @param  paymentToTerms  String value for paymentToTerms.
     * @param  slowestMonth  String value for slowestMonth.
     * @param  slowestPayment  Integer value for slowestPayment.
     * @param  suppPaymentPattern  String value for suppPaymentPattern.
     * @param  unpaidAccountsDetails  List of UnpaidAccountsDetails value for unpaidAccountsDetails.
     * @param  valCollection  Double value for valCollection.
     */
    public LtdPaymentFull(
            Integer avgDBT12Mnths,
            Integer avgDBT3Mnths,
            Integer avgDBT6Mnths,
            List<CommonTerms> commonTerms,
            List<CompDebitMonthly> companyDBTMonthly,
            Integer companyNumMnths,
            String fastestMonth,
            Integer fastestPayment,
            Integer indAvgDBT12Mnths,
            Integer indAvgDBT3Mnths,
            Integer indAvgDBT6Mnths,
            List<IndDebitMonthly> indDBTMonthly,
            Integer indNumberDBT100K,
            Integer indNumberDBT100KPlus,
            Integer indNumberDBT10K,
            Integer indNumberDBT1K,
            String indPaymentPattern,
            Integer industryNumMnths,
            String industrySICDesc,
            Integer numCommonTerms,
            Double numberCashFirst,
            Double numberCollection,
            Integer numberDBT100K,
            Integer numberDBT100KPlus,
            Integer numberDBT10K,
            Integer numberDBT1K,
            String paymentPattern,
            String paymentToTerms,
            String slowestMonth,
            Integer slowestPayment,
            String suppPaymentPattern,
            List<UnpaidAccountsDetails> unpaidAccountsDetails,
            Double valCollection) {
        this.avgDBT12Mnths = avgDBT12Mnths;
        this.avgDBT3Mnths = avgDBT3Mnths;
        this.avgDBT6Mnths = avgDBT6Mnths;
        this.commonTerms = commonTerms;
        this.companyDBTMonthly = companyDBTMonthly;
        this.companyNumMnths = companyNumMnths;
        this.fastestMonth = fastestMonth;
        this.fastestPayment = fastestPayment;
        this.indAvgDBT12Mnths = indAvgDBT12Mnths;
        this.indAvgDBT3Mnths = indAvgDBT3Mnths;
        this.indAvgDBT6Mnths = indAvgDBT6Mnths;
        this.indDBTMonthly = indDBTMonthly;
        this.indNumberDBT100K = indNumberDBT100K;
        this.indNumberDBT100KPlus = indNumberDBT100KPlus;
        this.indNumberDBT10K = indNumberDBT10K;
        this.indNumberDBT1K = indNumberDBT1K;
        this.indPaymentPattern = indPaymentPattern;
        this.industryNumMnths = industryNumMnths;
        this.industrySICDesc = industrySICDesc;
        this.numCommonTerms = numCommonTerms;
        this.numberCashFirst = numberCashFirst;
        this.numberCollection = numberCollection;
        this.numberDBT100K = numberDBT100K;
        this.numberDBT100KPlus = numberDBT100KPlus;
        this.numberDBT10K = numberDBT10K;
        this.numberDBT1K = numberDBT1K;
        this.paymentPattern = paymentPattern;
        this.paymentToTerms = paymentToTerms;
        this.slowestMonth = slowestMonth;
        this.slowestPayment = slowestPayment;
        this.suppPaymentPattern = suppPaymentPattern;
        this.unpaidAccountsDetails = unpaidAccountsDetails;
        this.valCollection = valCollection;
    }

    /**
     * Getter for AvgDBT12Mnths.
     * Average number of days beyond terms for payment over the previous 12 months for the limited
     * company
     * @return Returns the Integer
     */
    @JsonGetter("AvgDBT12Mnths")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getAvgDBT12Mnths() {
        return avgDBT12Mnths;
    }

    /**
     * Setter for AvgDBT12Mnths.
     * Average number of days beyond terms for payment over the previous 12 months for the limited
     * company
     * @param avgDBT12Mnths Value for Integer
     */
    @JsonSetter("AvgDBT12Mnths")
    public void setAvgDBT12Mnths(Integer avgDBT12Mnths) {
        this.avgDBT12Mnths = avgDBT12Mnths;
    }

    /**
     * Getter for AvgDBT3Mnths.
     * Average number of days beyond terms for payment over the previous 3 months for the limited
     * company
     * @return Returns the Integer
     */
    @JsonGetter("AvgDBT3Mnths")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getAvgDBT3Mnths() {
        return avgDBT3Mnths;
    }

    /**
     * Setter for AvgDBT3Mnths.
     * Average number of days beyond terms for payment over the previous 3 months for the limited
     * company
     * @param avgDBT3Mnths Value for Integer
     */
    @JsonSetter("AvgDBT3Mnths")
    public void setAvgDBT3Mnths(Integer avgDBT3Mnths) {
        this.avgDBT3Mnths = avgDBT3Mnths;
    }

    /**
     * Getter for AvgDBT6Mnths.
     * Average number of days beyond terms for payment over the previous 6 months for the limited
     * company
     * @return Returns the Integer
     */
    @JsonGetter("AvgDBT6Mnths")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getAvgDBT6Mnths() {
        return avgDBT6Mnths;
    }

    /**
     * Setter for AvgDBT6Mnths.
     * Average number of days beyond terms for payment over the previous 6 months for the limited
     * company
     * @param avgDBT6Mnths Value for Integer
     */
    @JsonSetter("AvgDBT6Mnths")
    public void setAvgDBT6Mnths(Integer avgDBT6Mnths) {
        this.avgDBT6Mnths = avgDBT6Mnths;
    }

    /**
     * Getter for CommonTerms.
     * @return Returns the List of CommonTerms
     */
    @JsonGetter("CommonTerms")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<CommonTerms> getCommonTerms() {
        return commonTerms;
    }

    /**
     * Setter for CommonTerms.
     * @param commonTerms Value for List of CommonTerms
     */
    @JsonSetter("CommonTerms")
    public void setCommonTerms(List<CommonTerms> commonTerms) {
        this.commonTerms = commonTerms;
    }

    /**
     * Getter for CompanyDBTMonthly.
     * @return Returns the List of CompDebitMonthly
     */
    @JsonGetter("CompanyDBTMonthly")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<CompDebitMonthly> getCompanyDBTMonthly() {
        return companyDBTMonthly;
    }

    /**
     * Setter for CompanyDBTMonthly.
     * @param companyDBTMonthly Value for List of CompDebitMonthly
     */
    @JsonSetter("CompanyDBTMonthly")
    public void setCompanyDBTMonthly(List<CompDebitMonthly> companyDBTMonthly) {
        this.companyDBTMonthly = companyDBTMonthly;
    }

    /**
     * Getter for CompanyNumMnths.
     * Number of days beyond terms months for the limited company
     * @return Returns the Integer
     */
    @JsonGetter("CompanyNumMnths")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getCompanyNumMnths() {
        return companyNumMnths;
    }

    /**
     * Setter for CompanyNumMnths.
     * Number of days beyond terms months for the limited company
     * @param companyNumMnths Value for Integer
     */
    @JsonSetter("CompanyNumMnths")
    public void setCompanyNumMnths(Integer companyNumMnths) {
        this.companyNumMnths = companyNumMnths;
    }

    /**
     * Getter for FastestMonth.
     * Month where number of days beyond terms for payment has the lowest average value for the
     * limited company (yyyy-mm)
     * @return Returns the String
     */
    @JsonGetter("FastestMonth")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getFastestMonth() {
        return fastestMonth;
    }

    /**
     * Setter for FastestMonth.
     * Month where number of days beyond terms for payment has the lowest average value for the
     * limited company (yyyy-mm)
     * @param fastestMonth Value for String
     */
    @JsonSetter("FastestMonth")
    public void setFastestMonth(String fastestMonth) {
        this.fastestMonth = fastestMonth;
    }

    /**
     * Getter for FastestPayment.
     * Number of days beyond terms for payment in the month with the lowest average value for the
     * limited company
     * @return Returns the Integer
     */
    @JsonGetter("FastestPayment")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getFastestPayment() {
        return fastestPayment;
    }

    /**
     * Setter for FastestPayment.
     * Number of days beyond terms for payment in the month with the lowest average value for the
     * limited company
     * @param fastestPayment Value for Integer
     */
    @JsonSetter("FastestPayment")
    public void setFastestPayment(Integer fastestPayment) {
        this.fastestPayment = fastestPayment;
    }

    /**
     * Getter for IndAvgDBT12Mnths.
     * Average number of days beyond terms for payment over the previous 12 months as an industry
     * average
     * @return Returns the Integer
     */
    @JsonGetter("IndAvgDBT12Mnths")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getIndAvgDBT12Mnths() {
        return indAvgDBT12Mnths;
    }

    /**
     * Setter for IndAvgDBT12Mnths.
     * Average number of days beyond terms for payment over the previous 12 months as an industry
     * average
     * @param indAvgDBT12Mnths Value for Integer
     */
    @JsonSetter("IndAvgDBT12Mnths")
    public void setIndAvgDBT12Mnths(Integer indAvgDBT12Mnths) {
        this.indAvgDBT12Mnths = indAvgDBT12Mnths;
    }

    /**
     * Getter for IndAvgDBT3Mnths.
     * Average number of days beyond terms for payment over the previous 3 months as an industry
     * average=
     * @return Returns the Integer
     */
    @JsonGetter("IndAvgDBT3Mnths")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getIndAvgDBT3Mnths() {
        return indAvgDBT3Mnths;
    }

    /**
     * Setter for IndAvgDBT3Mnths.
     * Average number of days beyond terms for payment over the previous 3 months as an industry
     * average=
     * @param indAvgDBT3Mnths Value for Integer
     */
    @JsonSetter("IndAvgDBT3Mnths")
    public void setIndAvgDBT3Mnths(Integer indAvgDBT3Mnths) {
        this.indAvgDBT3Mnths = indAvgDBT3Mnths;
    }

    /**
     * Getter for IndAvgDBT6Mnths.
     * Average number of days beyond terms for payment over the previous 6 months as an industry
     * average
     * @return Returns the Integer
     */
    @JsonGetter("IndAvgDBT6Mnths")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getIndAvgDBT6Mnths() {
        return indAvgDBT6Mnths;
    }

    /**
     * Setter for IndAvgDBT6Mnths.
     * Average number of days beyond terms for payment over the previous 6 months as an industry
     * average
     * @param indAvgDBT6Mnths Value for Integer
     */
    @JsonSetter("IndAvgDBT6Mnths")
    public void setIndAvgDBT6Mnths(Integer indAvgDBT6Mnths) {
        this.indAvgDBT6Mnths = indAvgDBT6Mnths;
    }

    /**
     * Getter for IndDBTMonthly.
     * @return Returns the List of IndDebitMonthly
     */
    @JsonGetter("IndDBTMonthly")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<IndDebitMonthly> getIndDBTMonthly() {
        return indDBTMonthly;
    }

    /**
     * Setter for IndDBTMonthly.
     * @param indDBTMonthly Value for List of IndDebitMonthly
     */
    @JsonSetter("IndDBTMonthly")
    public void setIndDBTMonthly(List<IndDebitMonthly> indDBTMonthly) {
        this.indDBTMonthly = indDBTMonthly;
    }

    /**
     * Getter for IndNumberDBT100K.
     * Number of payments beyond terms where amount is in the range &pound; to &pound; 100,000 as an
     * industry average
     * @return Returns the Integer
     */
    @JsonGetter("IndNumberDBT100K")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getIndNumberDBT100K() {
        return indNumberDBT100K;
    }

    /**
     * Setter for IndNumberDBT100K.
     * Number of payments beyond terms where amount is in the range &pound; to &pound; 100,000 as an
     * industry average
     * @param indNumberDBT100K Value for Integer
     */
    @JsonSetter("IndNumberDBT100K")
    public void setIndNumberDBT100K(Integer indNumberDBT100K) {
        this.indNumberDBT100K = indNumberDBT100K;
    }

    /**
     * Getter for IndNumberDBT100KPlus.
     * Number of payments beyond terms where amount exceeds &pound; 100,000 as an industry average
     * @return Returns the Integer
     */
    @JsonGetter("IndNumberDBT100KPlus")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getIndNumberDBT100KPlus() {
        return indNumberDBT100KPlus;
    }

    /**
     * Setter for IndNumberDBT100KPlus.
     * Number of payments beyond terms where amount exceeds &pound; 100,000 as an industry average
     * @param indNumberDBT100KPlus Value for Integer
     */
    @JsonSetter("IndNumberDBT100KPlus")
    public void setIndNumberDBT100KPlus(Integer indNumberDBT100KPlus) {
        this.indNumberDBT100KPlus = indNumberDBT100KPlus;
    }

    /**
     * Getter for IndNumberDBT10K.
     * Number of payments beyond terms where amount is in the range &pound; 1,000 to &pound;10,000
     * as an industry average
     * @return Returns the Integer
     */
    @JsonGetter("IndNumberDBT10K")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getIndNumberDBT10K() {
        return indNumberDBT10K;
    }

    /**
     * Setter for IndNumberDBT10K.
     * Number of payments beyond terms where amount is in the range &pound; 1,000 to &pound;10,000
     * as an industry average
     * @param indNumberDBT10K Value for Integer
     */
    @JsonSetter("IndNumberDBT10K")
    public void setIndNumberDBT10K(Integer indNumberDBT10K) {
        this.indNumberDBT10K = indNumberDBT10K;
    }

    /**
     * Getter for IndNumberDBT1K.
     * Number of payments beyond terms where amount is up to &pound; 1,000 as an industry average
     * @return Returns the Integer
     */
    @JsonGetter("IndNumberDBT1K")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getIndNumberDBT1K() {
        return indNumberDBT1K;
    }

    /**
     * Setter for IndNumberDBT1K.
     * Number of payments beyond terms where amount is up to &pound; 1,000 as an industry average
     * @param indNumberDBT1K Value for Integer
     */
    @JsonSetter("IndNumberDBT1K")
    public void setIndNumberDBT1K(Integer indNumberDBT1K) {
        this.indNumberDBT1K = indNumberDBT1K;
    }

    /**
     * Getter for IndPaymentPattern.
     * Analysis of the payment pattern for the industry - C = Consistent; S = Slower; F = Faster
     * @return Returns the String
     */
    @JsonGetter("IndPaymentPattern")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getIndPaymentPattern() {
        return indPaymentPattern;
    }

    /**
     * Setter for IndPaymentPattern.
     * Analysis of the payment pattern for the industry - C = Consistent; S = Slower; F = Faster
     * @param indPaymentPattern Value for String
     */
    @JsonSetter("IndPaymentPattern")
    public void setIndPaymentPattern(String indPaymentPattern) {
        this.indPaymentPattern = indPaymentPattern;
    }

    /**
     * Getter for IndustryNumMnths.
     * Number of Industry days beyond terms months
     * @return Returns the Integer
     */
    @JsonGetter("IndustryNumMnths")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getIndustryNumMnths() {
        return industryNumMnths;
    }

    /**
     * Setter for IndustryNumMnths.
     * Number of Industry days beyond terms months
     * @param industryNumMnths Value for Integer
     */
    @JsonSetter("IndustryNumMnths")
    public void setIndustryNumMnths(Integer industryNumMnths) {
        this.industryNumMnths = industryNumMnths;
    }

    /**
     * Getter for IndustrySICDesc.
     * The description associated with the SIC code
     * @return Returns the String
     */
    @JsonGetter("IndustrySICDesc")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getIndustrySICDesc() {
        return industrySICDesc;
    }

    /**
     * Setter for IndustrySICDesc.
     * The description associated with the SIC code
     * @param industrySICDesc Value for String
     */
    @JsonSetter("IndustrySICDesc")
    public void setIndustrySICDesc(String industrySICDesc) {
        this.industrySICDesc = industrySICDesc;
    }

    /**
     * Getter for NumCommonTerms.
     * Number of common terms
     * @return Returns the Integer
     */
    @JsonGetter("NumCommonTerms")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumCommonTerms() {
        return numCommonTerms;
    }

    /**
     * Setter for NumCommonTerms.
     * Number of common terms
     * @param numCommonTerms Value for Integer
     */
    @JsonSetter("NumCommonTerms")
    public void setNumCommonTerms(Integer numCommonTerms) {
        this.numCommonTerms = numCommonTerms;
    }

    /**
     * Getter for NumberCashFirst.
     * Number of accounts that are Cash First or Pro forma
     * @return Returns the Double
     */
    @JsonGetter("NumberCashFirst")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getNumberCashFirst() {
        return numberCashFirst;
    }

    /**
     * Setter for NumberCashFirst.
     * Number of accounts that are Cash First or Pro forma
     * @param numberCashFirst Value for Double
     */
    @JsonSetter("NumberCashFirst")
    public void setNumberCashFirst(Double numberCashFirst) {
        this.numberCashFirst = numberCashFirst;
    }

    /**
     * Getter for NumberCollection.
     * Number of accounts that are Collection
     * @return Returns the Double
     */
    @JsonGetter("NumberCollection")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getNumberCollection() {
        return numberCollection;
    }

    /**
     * Setter for NumberCollection.
     * Number of accounts that are Collection
     * @param numberCollection Value for Double
     */
    @JsonSetter("NumberCollection")
    public void setNumberCollection(Double numberCollection) {
        this.numberCollection = numberCollection;
    }

    /**
     * Getter for NumberDBT100K.
     * Number of payments beyond terms where amount is in the range &pound; 10,000 to &pound;
     * 100,000 for the limited company
     * @return Returns the Integer
     */
    @JsonGetter("NumberDBT100K")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumberDBT100K() {
        return numberDBT100K;
    }

    /**
     * Setter for NumberDBT100K.
     * Number of payments beyond terms where amount is in the range &pound; 10,000 to &pound;
     * 100,000 for the limited company
     * @param numberDBT100K Value for Integer
     */
    @JsonSetter("NumberDBT100K")
    public void setNumberDBT100K(Integer numberDBT100K) {
        this.numberDBT100K = numberDBT100K;
    }

    /**
     * Getter for NumberDBT100KPlus.
     * Number of payments beyond terms where amount exceeds &pound;100,000 for the limited company
     * @return Returns the Integer
     */
    @JsonGetter("NumberDBT100KPlus")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumberDBT100KPlus() {
        return numberDBT100KPlus;
    }

    /**
     * Setter for NumberDBT100KPlus.
     * Number of payments beyond terms where amount exceeds &pound;100,000 for the limited company
     * @param numberDBT100KPlus Value for Integer
     */
    @JsonSetter("NumberDBT100KPlus")
    public void setNumberDBT100KPlus(Integer numberDBT100KPlus) {
        this.numberDBT100KPlus = numberDBT100KPlus;
    }

    /**
     * Getter for NumberDBT10K.
     * Number of payments beyond terms where amount is in the range &pound;1,000 to &pound;10,000
     * for the limited company
     * @return Returns the Integer
     */
    @JsonGetter("NumberDBT10K")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumberDBT10K() {
        return numberDBT10K;
    }

    /**
     * Setter for NumberDBT10K.
     * Number of payments beyond terms where amount is in the range &pound;1,000 to &pound;10,000
     * for the limited company
     * @param numberDBT10K Value for Integer
     */
    @JsonSetter("NumberDBT10K")
    public void setNumberDBT10K(Integer numberDBT10K) {
        this.numberDBT10K = numberDBT10K;
    }

    /**
     * Getter for NumberDBT1K.
     * Number of payments beyond terms where amount is up to &pound;1,000 for the limited company
     * @return Returns the Integer
     */
    @JsonGetter("NumberDBT1K")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumberDBT1K() {
        return numberDBT1K;
    }

    /**
     * Setter for NumberDBT1K.
     * Number of payments beyond terms where amount is up to &pound;1,000 for the limited company
     * @param numberDBT1K Value for Integer
     */
    @JsonSetter("NumberDBT1K")
    public void setNumberDBT1K(Integer numberDBT1K) {
        this.numberDBT1K = numberDBT1K;
    }

    /**
     * Getter for PaymentPattern.
     * Analysis of the payment pattern for the limited company - C = Consistent; W = Worsening; N =
     * Noticeable Worsening; S = Significant Worsening; I = Improvement; O = Noticeable Improvement;
     * T = Significant Improvement
     * @return Returns the String
     */
    @JsonGetter("PaymentPattern")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPaymentPattern() {
        return paymentPattern;
    }

    /**
     * Setter for PaymentPattern.
     * Analysis of the payment pattern for the limited company - C = Consistent; W = Worsening; N =
     * Noticeable Worsening; S = Significant Worsening; I = Improvement; O = Noticeable Improvement;
     * T = Significant Improvement
     * @param paymentPattern Value for String
     */
    @JsonSetter("PaymentPattern")
    public void setPaymentPattern(String paymentPattern) {
        this.paymentPattern = paymentPattern;
    }

    /**
     * Getter for PaymentToTerms.
     * Analysis of the payment to terms for the limited company - B = Beyond Terms; W = Within Terms
     * @return Returns the String
     */
    @JsonGetter("PaymentToTerms")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPaymentToTerms() {
        return paymentToTerms;
    }

    /**
     * Setter for PaymentToTerms.
     * Analysis of the payment to terms for the limited company - B = Beyond Terms; W = Within Terms
     * @param paymentToTerms Value for String
     */
    @JsonSetter("PaymentToTerms")
    public void setPaymentToTerms(String paymentToTerms) {
        this.paymentToTerms = paymentToTerms;
    }

    /**
     * Getter for SlowestMonth.
     * Month where number of days beyond terms for payment has the highest average value for the
     * limited company (yyyy-mm)
     * @return Returns the String
     */
    @JsonGetter("SlowestMonth")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSlowestMonth() {
        return slowestMonth;
    }

    /**
     * Setter for SlowestMonth.
     * Month where number of days beyond terms for payment has the highest average value for the
     * limited company (yyyy-mm)
     * @param slowestMonth Value for String
     */
    @JsonSetter("SlowestMonth")
    public void setSlowestMonth(String slowestMonth) {
        this.slowestMonth = slowestMonth;
    }

    /**
     * Getter for SlowestPayment.
     * Number of days beyond terms for payment in the month with the highest average value for the
     * limited company
     * @return Returns the Integer
     */
    @JsonGetter("SlowestPayment")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getSlowestPayment() {
        return slowestPayment;
    }

    /**
     * Setter for SlowestPayment.
     * Number of days beyond terms for payment in the month with the highest average value for the
     * limited company
     * @param slowestPayment Value for Integer
     */
    @JsonSetter("SlowestPayment")
    public void setSlowestPayment(Integer slowestPayment) {
        this.slowestPayment = slowestPayment;
    }

    /**
     * Getter for SuppPaymentPattern.
     * Analysis of the Supplier payment pattern - N = No or little difference; S = Slower; F =
     * Faster
     * @return Returns the String
     */
    @JsonGetter("SuppPaymentPattern")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSuppPaymentPattern() {
        return suppPaymentPattern;
    }

    /**
     * Setter for SuppPaymentPattern.
     * Analysis of the Supplier payment pattern - N = No or little difference; S = Slower; F =
     * Faster
     * @param suppPaymentPattern Value for String
     */
    @JsonSetter("SuppPaymentPattern")
    public void setSuppPaymentPattern(String suppPaymentPattern) {
        this.suppPaymentPattern = suppPaymentPattern;
    }

    /**
     * Getter for UnpaidAccountsDetails.
     * @return Returns the List of UnpaidAccountsDetails
     */
    @JsonGetter("UnpaidAccountsDetails")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<UnpaidAccountsDetails> getUnpaidAccountsDetails() {
        return unpaidAccountsDetails;
    }

    /**
     * Setter for UnpaidAccountsDetails.
     * @param unpaidAccountsDetails Value for List of UnpaidAccountsDetails
     */
    @JsonSetter("UnpaidAccountsDetails")
    public void setUnpaidAccountsDetails(List<UnpaidAccountsDetails> unpaidAccountsDetails) {
        this.unpaidAccountsDetails = unpaidAccountsDetails;
    }

    /**
     * Getter for ValCollection.
     * Value of accounts that are Collection
     * @return Returns the Double
     */
    @JsonGetter("ValCollection")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getValCollection() {
        return valCollection;
    }

    /**
     * Setter for ValCollection.
     * Value of accounts that are Collection
     * @param valCollection Value for Double
     */
    @JsonSetter("ValCollection")
    public void setValCollection(Double valCollection) {
        this.valCollection = valCollection;
    }

    /**
     * Converts this LtdPaymentFull into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "LtdPaymentFull [" + "avgDBT12Mnths=" + avgDBT12Mnths + ", avgDBT3Mnths="
                + avgDBT3Mnths + ", avgDBT6Mnths=" + avgDBT6Mnths + ", commonTerms=" + commonTerms
                + ", companyDBTMonthly=" + companyDBTMonthly + ", companyNumMnths="
                + companyNumMnths + ", fastestMonth=" + fastestMonth + ", fastestPayment="
                + fastestPayment + ", indAvgDBT12Mnths=" + indAvgDBT12Mnths + ", indAvgDBT3Mnths="
                + indAvgDBT3Mnths + ", indAvgDBT6Mnths=" + indAvgDBT6Mnths + ", indDBTMonthly="
                + indDBTMonthly + ", indNumberDBT100K=" + indNumberDBT100K
                + ", indNumberDBT100KPlus=" + indNumberDBT100KPlus + ", indNumberDBT10K="
                + indNumberDBT10K + ", indNumberDBT1K=" + indNumberDBT1K + ", indPaymentPattern="
                + indPaymentPattern + ", industryNumMnths=" + industryNumMnths
                + ", industrySICDesc=" + industrySICDesc + ", numCommonTerms=" + numCommonTerms
                + ", numberCashFirst=" + numberCashFirst + ", numberCollection=" + numberCollection
                + ", numberDBT100K=" + numberDBT100K + ", numberDBT100KPlus=" + numberDBT100KPlus
                + ", numberDBT10K=" + numberDBT10K + ", numberDBT1K=" + numberDBT1K
                + ", paymentPattern=" + paymentPattern + ", paymentToTerms=" + paymentToTerms
                + ", slowestMonth=" + slowestMonth + ", slowestPayment=" + slowestPayment
                + ", suppPaymentPattern=" + suppPaymentPattern + ", unpaidAccountsDetails="
                + unpaidAccountsDetails + ", valCollection=" + valCollection + "]";
    }

    /**
     * Builds a new {@link LtdPaymentFull.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link LtdPaymentFull.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .avgDBT12Mnths(getAvgDBT12Mnths())
                .avgDBT3Mnths(getAvgDBT3Mnths())
                .avgDBT6Mnths(getAvgDBT6Mnths())
                .commonTerms(getCommonTerms())
                .companyDBTMonthly(getCompanyDBTMonthly())
                .companyNumMnths(getCompanyNumMnths())
                .fastestMonth(getFastestMonth())
                .fastestPayment(getFastestPayment())
                .indAvgDBT12Mnths(getIndAvgDBT12Mnths())
                .indAvgDBT3Mnths(getIndAvgDBT3Mnths())
                .indAvgDBT6Mnths(getIndAvgDBT6Mnths())
                .indDBTMonthly(getIndDBTMonthly())
                .indNumberDBT100K(getIndNumberDBT100K())
                .indNumberDBT100KPlus(getIndNumberDBT100KPlus())
                .indNumberDBT10K(getIndNumberDBT10K())
                .indNumberDBT1K(getIndNumberDBT1K())
                .indPaymentPattern(getIndPaymentPattern())
                .industryNumMnths(getIndustryNumMnths())
                .industrySICDesc(getIndustrySICDesc())
                .numCommonTerms(getNumCommonTerms())
                .numberCashFirst(getNumberCashFirst())
                .numberCollection(getNumberCollection())
                .numberDBT100K(getNumberDBT100K())
                .numberDBT100KPlus(getNumberDBT100KPlus())
                .numberDBT10K(getNumberDBT10K())
                .numberDBT1K(getNumberDBT1K())
                .paymentPattern(getPaymentPattern())
                .paymentToTerms(getPaymentToTerms())
                .slowestMonth(getSlowestMonth())
                .slowestPayment(getSlowestPayment())
                .suppPaymentPattern(getSuppPaymentPattern())
                .unpaidAccountsDetails(getUnpaidAccountsDetails())
                .valCollection(getValCollection());
        return builder;
    }

    /**
     * Class to build instances of {@link LtdPaymentFull}.
     */
    public static class Builder {
        private Integer avgDBT12Mnths;
        private Integer avgDBT3Mnths;
        private Integer avgDBT6Mnths;
        private List<CommonTerms> commonTerms;
        private List<CompDebitMonthly> companyDBTMonthly;
        private Integer companyNumMnths;
        private String fastestMonth;
        private Integer fastestPayment;
        private Integer indAvgDBT12Mnths;
        private Integer indAvgDBT3Mnths;
        private Integer indAvgDBT6Mnths;
        private List<IndDebitMonthly> indDBTMonthly;
        private Integer indNumberDBT100K;
        private Integer indNumberDBT100KPlus;
        private Integer indNumberDBT10K;
        private Integer indNumberDBT1K;
        private String indPaymentPattern;
        private Integer industryNumMnths;
        private String industrySICDesc;
        private Integer numCommonTerms;
        private Double numberCashFirst;
        private Double numberCollection;
        private Integer numberDBT100K;
        private Integer numberDBT100KPlus;
        private Integer numberDBT10K;
        private Integer numberDBT1K;
        private String paymentPattern;
        private String paymentToTerms;
        private String slowestMonth;
        private Integer slowestPayment;
        private String suppPaymentPattern;
        private List<UnpaidAccountsDetails> unpaidAccountsDetails;
        private Double valCollection;



        /**
         * Setter for avgDBT12Mnths.
         * @param  avgDBT12Mnths  Integer value for avgDBT12Mnths.
         * @return Builder
         */
        public Builder avgDBT12Mnths(Integer avgDBT12Mnths) {
            this.avgDBT12Mnths = avgDBT12Mnths;
            return this;
        }

        /**
         * Setter for avgDBT3Mnths.
         * @param  avgDBT3Mnths  Integer value for avgDBT3Mnths.
         * @return Builder
         */
        public Builder avgDBT3Mnths(Integer avgDBT3Mnths) {
            this.avgDBT3Mnths = avgDBT3Mnths;
            return this;
        }

        /**
         * Setter for avgDBT6Mnths.
         * @param  avgDBT6Mnths  Integer value for avgDBT6Mnths.
         * @return Builder
         */
        public Builder avgDBT6Mnths(Integer avgDBT6Mnths) {
            this.avgDBT6Mnths = avgDBT6Mnths;
            return this;
        }

        /**
         * Setter for commonTerms.
         * @param  commonTerms  List of CommonTerms value for commonTerms.
         * @return Builder
         */
        public Builder commonTerms(List<CommonTerms> commonTerms) {
            this.commonTerms = commonTerms;
            return this;
        }

        /**
         * Setter for companyDBTMonthly.
         * @param  companyDBTMonthly  List of CompDebitMonthly value for companyDBTMonthly.
         * @return Builder
         */
        public Builder companyDBTMonthly(List<CompDebitMonthly> companyDBTMonthly) {
            this.companyDBTMonthly = companyDBTMonthly;
            return this;
        }

        /**
         * Setter for companyNumMnths.
         * @param  companyNumMnths  Integer value for companyNumMnths.
         * @return Builder
         */
        public Builder companyNumMnths(Integer companyNumMnths) {
            this.companyNumMnths = companyNumMnths;
            return this;
        }

        /**
         * Setter for fastestMonth.
         * @param  fastestMonth  String value for fastestMonth.
         * @return Builder
         */
        public Builder fastestMonth(String fastestMonth) {
            this.fastestMonth = fastestMonth;
            return this;
        }

        /**
         * Setter for fastestPayment.
         * @param  fastestPayment  Integer value for fastestPayment.
         * @return Builder
         */
        public Builder fastestPayment(Integer fastestPayment) {
            this.fastestPayment = fastestPayment;
            return this;
        }

        /**
         * Setter for indAvgDBT12Mnths.
         * @param  indAvgDBT12Mnths  Integer value for indAvgDBT12Mnths.
         * @return Builder
         */
        public Builder indAvgDBT12Mnths(Integer indAvgDBT12Mnths) {
            this.indAvgDBT12Mnths = indAvgDBT12Mnths;
            return this;
        }

        /**
         * Setter for indAvgDBT3Mnths.
         * @param  indAvgDBT3Mnths  Integer value for indAvgDBT3Mnths.
         * @return Builder
         */
        public Builder indAvgDBT3Mnths(Integer indAvgDBT3Mnths) {
            this.indAvgDBT3Mnths = indAvgDBT3Mnths;
            return this;
        }

        /**
         * Setter for indAvgDBT6Mnths.
         * @param  indAvgDBT6Mnths  Integer value for indAvgDBT6Mnths.
         * @return Builder
         */
        public Builder indAvgDBT6Mnths(Integer indAvgDBT6Mnths) {
            this.indAvgDBT6Mnths = indAvgDBT6Mnths;
            return this;
        }

        /**
         * Setter for indDBTMonthly.
         * @param  indDBTMonthly  List of IndDebitMonthly value for indDBTMonthly.
         * @return Builder
         */
        public Builder indDBTMonthly(List<IndDebitMonthly> indDBTMonthly) {
            this.indDBTMonthly = indDBTMonthly;
            return this;
        }

        /**
         * Setter for indNumberDBT100K.
         * @param  indNumberDBT100K  Integer value for indNumberDBT100K.
         * @return Builder
         */
        public Builder indNumberDBT100K(Integer indNumberDBT100K) {
            this.indNumberDBT100K = indNumberDBT100K;
            return this;
        }

        /**
         * Setter for indNumberDBT100KPlus.
         * @param  indNumberDBT100KPlus  Integer value for indNumberDBT100KPlus.
         * @return Builder
         */
        public Builder indNumberDBT100KPlus(Integer indNumberDBT100KPlus) {
            this.indNumberDBT100KPlus = indNumberDBT100KPlus;
            return this;
        }

        /**
         * Setter for indNumberDBT10K.
         * @param  indNumberDBT10K  Integer value for indNumberDBT10K.
         * @return Builder
         */
        public Builder indNumberDBT10K(Integer indNumberDBT10K) {
            this.indNumberDBT10K = indNumberDBT10K;
            return this;
        }

        /**
         * Setter for indNumberDBT1K.
         * @param  indNumberDBT1K  Integer value for indNumberDBT1K.
         * @return Builder
         */
        public Builder indNumberDBT1K(Integer indNumberDBT1K) {
            this.indNumberDBT1K = indNumberDBT1K;
            return this;
        }

        /**
         * Setter for indPaymentPattern.
         * @param  indPaymentPattern  String value for indPaymentPattern.
         * @return Builder
         */
        public Builder indPaymentPattern(String indPaymentPattern) {
            this.indPaymentPattern = indPaymentPattern;
            return this;
        }

        /**
         * Setter for industryNumMnths.
         * @param  industryNumMnths  Integer value for industryNumMnths.
         * @return Builder
         */
        public Builder industryNumMnths(Integer industryNumMnths) {
            this.industryNumMnths = industryNumMnths;
            return this;
        }

        /**
         * Setter for industrySICDesc.
         * @param  industrySICDesc  String value for industrySICDesc.
         * @return Builder
         */
        public Builder industrySICDesc(String industrySICDesc) {
            this.industrySICDesc = industrySICDesc;
            return this;
        }

        /**
         * Setter for numCommonTerms.
         * @param  numCommonTerms  Integer value for numCommonTerms.
         * @return Builder
         */
        public Builder numCommonTerms(Integer numCommonTerms) {
            this.numCommonTerms = numCommonTerms;
            return this;
        }

        /**
         * Setter for numberCashFirst.
         * @param  numberCashFirst  Double value for numberCashFirst.
         * @return Builder
         */
        public Builder numberCashFirst(Double numberCashFirst) {
            this.numberCashFirst = numberCashFirst;
            return this;
        }

        /**
         * Setter for numberCollection.
         * @param  numberCollection  Double value for numberCollection.
         * @return Builder
         */
        public Builder numberCollection(Double numberCollection) {
            this.numberCollection = numberCollection;
            return this;
        }

        /**
         * Setter for numberDBT100K.
         * @param  numberDBT100K  Integer value for numberDBT100K.
         * @return Builder
         */
        public Builder numberDBT100K(Integer numberDBT100K) {
            this.numberDBT100K = numberDBT100K;
            return this;
        }

        /**
         * Setter for numberDBT100KPlus.
         * @param  numberDBT100KPlus  Integer value for numberDBT100KPlus.
         * @return Builder
         */
        public Builder numberDBT100KPlus(Integer numberDBT100KPlus) {
            this.numberDBT100KPlus = numberDBT100KPlus;
            return this;
        }

        /**
         * Setter for numberDBT10K.
         * @param  numberDBT10K  Integer value for numberDBT10K.
         * @return Builder
         */
        public Builder numberDBT10K(Integer numberDBT10K) {
            this.numberDBT10K = numberDBT10K;
            return this;
        }

        /**
         * Setter for numberDBT1K.
         * @param  numberDBT1K  Integer value for numberDBT1K.
         * @return Builder
         */
        public Builder numberDBT1K(Integer numberDBT1K) {
            this.numberDBT1K = numberDBT1K;
            return this;
        }

        /**
         * Setter for paymentPattern.
         * @param  paymentPattern  String value for paymentPattern.
         * @return Builder
         */
        public Builder paymentPattern(String paymentPattern) {
            this.paymentPattern = paymentPattern;
            return this;
        }

        /**
         * Setter for paymentToTerms.
         * @param  paymentToTerms  String value for paymentToTerms.
         * @return Builder
         */
        public Builder paymentToTerms(String paymentToTerms) {
            this.paymentToTerms = paymentToTerms;
            return this;
        }

        /**
         * Setter for slowestMonth.
         * @param  slowestMonth  String value for slowestMonth.
         * @return Builder
         */
        public Builder slowestMonth(String slowestMonth) {
            this.slowestMonth = slowestMonth;
            return this;
        }

        /**
         * Setter for slowestPayment.
         * @param  slowestPayment  Integer value for slowestPayment.
         * @return Builder
         */
        public Builder slowestPayment(Integer slowestPayment) {
            this.slowestPayment = slowestPayment;
            return this;
        }

        /**
         * Setter for suppPaymentPattern.
         * @param  suppPaymentPattern  String value for suppPaymentPattern.
         * @return Builder
         */
        public Builder suppPaymentPattern(String suppPaymentPattern) {
            this.suppPaymentPattern = suppPaymentPattern;
            return this;
        }

        /**
         * Setter for unpaidAccountsDetails.
         * @param  unpaidAccountsDetails  List of UnpaidAccountsDetails value for
         *         unpaidAccountsDetails.
         * @return Builder
         */
        public Builder unpaidAccountsDetails(List<UnpaidAccountsDetails> unpaidAccountsDetails) {
            this.unpaidAccountsDetails = unpaidAccountsDetails;
            return this;
        }

        /**
         * Setter for valCollection.
         * @param  valCollection  Double value for valCollection.
         * @return Builder
         */
        public Builder valCollection(Double valCollection) {
            this.valCollection = valCollection;
            return this;
        }

        /**
         * Builds a new {@link LtdPaymentFull} object using the set fields.
         * @return {@link LtdPaymentFull}
         */
        public LtdPaymentFull build() {
            return new LtdPaymentFull(avgDBT12Mnths, avgDBT3Mnths, avgDBT6Mnths, commonTerms,
                    companyDBTMonthly, companyNumMnths, fastestMonth, fastestPayment,
                    indAvgDBT12Mnths, indAvgDBT3Mnths, indAvgDBT6Mnths, indDBTMonthly,
                    indNumberDBT100K, indNumberDBT100KPlus, indNumberDBT10K, indNumberDBT1K,
                    indPaymentPattern, industryNumMnths, industrySICDesc, numCommonTerms,
                    numberCashFirst, numberCollection, numberDBT100K, numberDBT100KPlus,
                    numberDBT10K, numberDBT1K, paymentPattern, paymentToTerms, slowestMonth,
                    slowestPayment, suppPaymentPattern, unpaidAccountsDetails, valCollection);
        }
    }
}
