/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for LocalityResolution type.
 */
public class LocalityResolution {
    private List<OutputLocation> location;
    private ArrayOfStringLR warning;

    /**
     * Default constructor.
     */
    public LocalityResolution() {
    }

    /**
     * Initialization constructor.
     * @param  location  List of OutputLocation value for location.
     * @param  warning  ArrayOfStringLR value for warning.
     */
    public LocalityResolution(
            List<OutputLocation> location,
            ArrayOfStringLR warning) {
        this.location = location;
        this.warning = warning;
    }

    /**
     * Getter for Location.
     * @return Returns the List of OutputLocation
     */
    @JsonGetter("Location")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<OutputLocation> getLocation() {
        return location;
    }

    /**
     * Setter for Location.
     * @param location Value for List of OutputLocation
     */
    @JsonSetter("Location")
    public void setLocation(List<OutputLocation> location) {
        this.location = location;
    }

    /**
     * Getter for Warning.
     * @return Returns the ArrayOfStringLR
     */
    @JsonGetter("Warning")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ArrayOfStringLR getWarning() {
        return warning;
    }

    /**
     * Setter for Warning.
     * @param warning Value for ArrayOfStringLR
     */
    @JsonSetter("Warning")
    public void setWarning(ArrayOfStringLR warning) {
        this.warning = warning;
    }

    /**
     * Converts this LocalityResolution into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "LocalityResolution [" + "location=" + location + ", warning=" + warning + "]";
    }

    /**
     * Builds a new {@link LocalityResolution.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link LocalityResolution.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .location(getLocation())
                .warning(getWarning());
        return builder;
    }

    /**
     * Class to build instances of {@link LocalityResolution}.
     */
    public static class Builder {
        private List<OutputLocation> location;
        private ArrayOfStringLR warning;



        /**
         * Setter for location.
         * @param  location  List of OutputLocation value for location.
         * @return Builder
         */
        public Builder location(List<OutputLocation> location) {
            this.location = location;
            return this;
        }

        /**
         * Setter for warning.
         * @param  warning  ArrayOfStringLR value for warning.
         * @return Builder
         */
        public Builder warning(ArrayOfStringLR warning) {
            this.warning = warning;
            return this;
        }

        /**
         * Builds a new {@link LocalityResolution} object using the set fields.
         * @return {@link LocalityResolution}
         */
        public LocalityResolution build() {
            return new LocalityResolution(location, warning);
        }
    }
}
