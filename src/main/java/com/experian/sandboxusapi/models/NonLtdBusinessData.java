/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for NonLtdBusinessData type.
 */
public class NonLtdBusinessData {
    private String nonLimitedKey;
    private String businessName;
    private String ownershipStartDate;
    private String ownershipEndDate;
    private Identification identification;
    private CommercialDelphi commercialDelphi;
    private CommercialCAISScore commercialCAISScore;
    private AllCAISSummary allCAISSummary;
    private OwnCAISSummary ownCAISSummary;
    private PaymentPerformance paymentPerformance;
    private NonLimitedCompanyCIFAS nonLimitedCompanyCIFAS;
    private CCJNonLtd cCJs;
    private Bankruptcies bankruptcies;
    private DelphiHistoryAndScore commercialDelphiHistory;
    private ScoringData scoringData;
    private BusinessLinks businessLinks;
    private NoticeOfCorrection noticeOfCorrection;
    private List<NonLtdCAISAccountDetail> nonLtdCAISAccountDetail;
    private DirectorData directorData;
    private AddressResolutionOutput addressResolutionOutput;
    private Error error;

    /**
     * Default constructor.
     */
    public NonLtdBusinessData() {
    }

    /**
     * Initialization constructor.
     * @param  nonLimitedKey  String value for nonLimitedKey.
     * @param  businessName  String value for businessName.
     * @param  ownershipStartDate  String value for ownershipStartDate.
     * @param  ownershipEndDate  String value for ownershipEndDate.
     * @param  identification  Identification value for identification.
     * @param  commercialDelphi  CommercialDelphi value for commercialDelphi.
     * @param  commercialCAISScore  CommercialCAISScore value for commercialCAISScore.
     * @param  allCAISSummary  AllCAISSummary value for allCAISSummary.
     * @param  ownCAISSummary  OwnCAISSummary value for ownCAISSummary.
     * @param  paymentPerformance  PaymentPerformance value for paymentPerformance.
     * @param  nonLimitedCompanyCIFAS  NonLimitedCompanyCIFAS value for nonLimitedCompanyCIFAS.
     * @param  cCJs  CCJNonLtd value for cCJs.
     * @param  bankruptcies  Bankruptcies value for bankruptcies.
     * @param  commercialDelphiHistory  DelphiHistoryAndScore value for commercialDelphiHistory.
     * @param  scoringData  ScoringData value for scoringData.
     * @param  businessLinks  BusinessLinks value for businessLinks.
     * @param  noticeOfCorrection  NoticeOfCorrection value for noticeOfCorrection.
     * @param  nonLtdCAISAccountDetail  List of NonLtdCAISAccountDetail value for
     *         nonLtdCAISAccountDetail.
     * @param  directorData  DirectorData value for directorData.
     * @param  addressResolutionOutput  AddressResolutionOutput value for addressResolutionOutput.
     * @param  error  Error value for error.
     */
    public NonLtdBusinessData(
            String nonLimitedKey,
            String businessName,
            String ownershipStartDate,
            String ownershipEndDate,
            Identification identification,
            CommercialDelphi commercialDelphi,
            CommercialCAISScore commercialCAISScore,
            AllCAISSummary allCAISSummary,
            OwnCAISSummary ownCAISSummary,
            PaymentPerformance paymentPerformance,
            NonLimitedCompanyCIFAS nonLimitedCompanyCIFAS,
            CCJNonLtd cCJs,
            Bankruptcies bankruptcies,
            DelphiHistoryAndScore commercialDelphiHistory,
            ScoringData scoringData,
            BusinessLinks businessLinks,
            NoticeOfCorrection noticeOfCorrection,
            List<NonLtdCAISAccountDetail> nonLtdCAISAccountDetail,
            DirectorData directorData,
            AddressResolutionOutput addressResolutionOutput,
            Error error) {
        this.nonLimitedKey = nonLimitedKey;
        this.businessName = businessName;
        this.ownershipStartDate = ownershipStartDate;
        this.ownershipEndDate = ownershipEndDate;
        this.identification = identification;
        this.commercialDelphi = commercialDelphi;
        this.commercialCAISScore = commercialCAISScore;
        this.allCAISSummary = allCAISSummary;
        this.ownCAISSummary = ownCAISSummary;
        this.paymentPerformance = paymentPerformance;
        this.nonLimitedCompanyCIFAS = nonLimitedCompanyCIFAS;
        this.cCJs = cCJs;
        this.bankruptcies = bankruptcies;
        this.commercialDelphiHistory = commercialDelphiHistory;
        this.scoringData = scoringData;
        this.businessLinks = businessLinks;
        this.noticeOfCorrection = noticeOfCorrection;
        this.nonLtdCAISAccountDetail = nonLtdCAISAccountDetail;
        this.directorData = directorData;
        this.addressResolutionOutput = addressResolutionOutput;
        this.error = error;
    }

    /**
     * Getter for NonLimitedKey.
     * Unique identifier for the non-limited business
     * @return Returns the String
     */
    @JsonGetter("NonLimitedKey")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getNonLimitedKey() {
        return nonLimitedKey;
    }

    /**
     * Setter for NonLimitedKey.
     * Unique identifier for the non-limited business
     * @param nonLimitedKey Value for String
     */
    @JsonSetter("NonLimitedKey")
    public void setNonLimitedKey(String nonLimitedKey) {
        this.nonLimitedKey = nonLimitedKey;
    }

    /**
     * Getter for BusinessName.
     * Name of non-limited business
     * @return Returns the String
     */
    @JsonGetter("BusinessName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBusinessName() {
        return businessName;
    }

    /**
     * Setter for BusinessName.
     * Name of non-limited business
     * @param businessName Value for String
     */
    @JsonSetter("BusinessName")
    public void setBusinessName(String businessName) {
        this.businessName = businessName;
    }

    /**
     * Getter for OwnershipStartDate.
     * The date when most recently known ownership started (yyyy-mm-dd)
     * @return Returns the String
     */
    @JsonGetter("OwnershipStartDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getOwnershipStartDate() {
        return ownershipStartDate;
    }

    /**
     * Setter for OwnershipStartDate.
     * The date when most recently known ownership started (yyyy-mm-dd)
     * @param ownershipStartDate Value for String
     */
    @JsonSetter("OwnershipStartDate")
    public void setOwnershipStartDate(String ownershipStartDate) {
        this.ownershipStartDate = ownershipStartDate;
    }

    /**
     * Getter for OwnershipEndDate.
     * The date when most recently known ownership ended (yyyy-mm-dd)
     * @return Returns the String
     */
    @JsonGetter("OwnershipEndDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getOwnershipEndDate() {
        return ownershipEndDate;
    }

    /**
     * Setter for OwnershipEndDate.
     * The date when most recently known ownership ended (yyyy-mm-dd)
     * @param ownershipEndDate Value for String
     */
    @JsonSetter("OwnershipEndDate")
    public void setOwnershipEndDate(String ownershipEndDate) {
        this.ownershipEndDate = ownershipEndDate;
    }

    /**
     * Getter for Identification.
     * @return Returns the Identification
     */
    @JsonGetter("Identification")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Identification getIdentification() {
        return identification;
    }

    /**
     * Setter for Identification.
     * @param identification Value for Identification
     */
    @JsonSetter("Identification")
    public void setIdentification(Identification identification) {
        this.identification = identification;
    }

    /**
     * Getter for CommercialDelphi.
     * @return Returns the CommercialDelphi
     */
    @JsonGetter("CommercialDelphi")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CommercialDelphi getCommercialDelphi() {
        return commercialDelphi;
    }

    /**
     * Setter for CommercialDelphi.
     * @param commercialDelphi Value for CommercialDelphi
     */
    @JsonSetter("CommercialDelphi")
    public void setCommercialDelphi(CommercialDelphi commercialDelphi) {
        this.commercialDelphi = commercialDelphi;
    }

    /**
     * Getter for CommercialCAISScore.
     * @return Returns the CommercialCAISScore
     */
    @JsonGetter("CommercialCAISScore")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CommercialCAISScore getCommercialCAISScore() {
        return commercialCAISScore;
    }

    /**
     * Setter for CommercialCAISScore.
     * @param commercialCAISScore Value for CommercialCAISScore
     */
    @JsonSetter("CommercialCAISScore")
    public void setCommercialCAISScore(CommercialCAISScore commercialCAISScore) {
        this.commercialCAISScore = commercialCAISScore;
    }

    /**
     * Getter for AllCAISSummary.
     * @return Returns the AllCAISSummary
     */
    @JsonGetter("AllCAISSummary")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public AllCAISSummary getAllCAISSummary() {
        return allCAISSummary;
    }

    /**
     * Setter for AllCAISSummary.
     * @param allCAISSummary Value for AllCAISSummary
     */
    @JsonSetter("AllCAISSummary")
    public void setAllCAISSummary(AllCAISSummary allCAISSummary) {
        this.allCAISSummary = allCAISSummary;
    }

    /**
     * Getter for OwnCAISSummary.
     * @return Returns the OwnCAISSummary
     */
    @JsonGetter("OwnCAISSummary")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public OwnCAISSummary getOwnCAISSummary() {
        return ownCAISSummary;
    }

    /**
     * Setter for OwnCAISSummary.
     * @param ownCAISSummary Value for OwnCAISSummary
     */
    @JsonSetter("OwnCAISSummary")
    public void setOwnCAISSummary(OwnCAISSummary ownCAISSummary) {
        this.ownCAISSummary = ownCAISSummary;
    }

    /**
     * Getter for PaymentPerformance.
     * @return Returns the PaymentPerformance
     */
    @JsonGetter("PaymentPerformance")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public PaymentPerformance getPaymentPerformance() {
        return paymentPerformance;
    }

    /**
     * Setter for PaymentPerformance.
     * @param paymentPerformance Value for PaymentPerformance
     */
    @JsonSetter("PaymentPerformance")
    public void setPaymentPerformance(PaymentPerformance paymentPerformance) {
        this.paymentPerformance = paymentPerformance;
    }

    /**
     * Getter for NonLimitedCompanyCIFAS.
     * @return Returns the NonLimitedCompanyCIFAS
     */
    @JsonGetter("NonLimitedCompanyCIFAS")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public NonLimitedCompanyCIFAS getNonLimitedCompanyCIFAS() {
        return nonLimitedCompanyCIFAS;
    }

    /**
     * Setter for NonLimitedCompanyCIFAS.
     * @param nonLimitedCompanyCIFAS Value for NonLimitedCompanyCIFAS
     */
    @JsonSetter("NonLimitedCompanyCIFAS")
    public void setNonLimitedCompanyCIFAS(NonLimitedCompanyCIFAS nonLimitedCompanyCIFAS) {
        this.nonLimitedCompanyCIFAS = nonLimitedCompanyCIFAS;
    }

    /**
     * Getter for CCJs.
     * @return Returns the CCJNonLtd
     */
    @JsonGetter("CCJs")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CCJNonLtd getCCJs() {
        return cCJs;
    }

    /**
     * Setter for CCJs.
     * @param cCJs Value for CCJNonLtd
     */
    @JsonSetter("CCJs")
    public void setCCJs(CCJNonLtd cCJs) {
        this.cCJs = cCJs;
    }

    /**
     * Getter for Bankruptcies.
     * @return Returns the Bankruptcies
     */
    @JsonGetter("Bankruptcies")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Bankruptcies getBankruptcies() {
        return bankruptcies;
    }

    /**
     * Setter for Bankruptcies.
     * @param bankruptcies Value for Bankruptcies
     */
    @JsonSetter("Bankruptcies")
    public void setBankruptcies(Bankruptcies bankruptcies) {
        this.bankruptcies = bankruptcies;
    }

    /**
     * Getter for CommercialDelphiHistory.
     * @return Returns the DelphiHistoryAndScore
     */
    @JsonGetter("CommercialDelphiHistory")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public DelphiHistoryAndScore getCommercialDelphiHistory() {
        return commercialDelphiHistory;
    }

    /**
     * Setter for CommercialDelphiHistory.
     * @param commercialDelphiHistory Value for DelphiHistoryAndScore
     */
    @JsonSetter("CommercialDelphiHistory")
    public void setCommercialDelphiHistory(DelphiHistoryAndScore commercialDelphiHistory) {
        this.commercialDelphiHistory = commercialDelphiHistory;
    }

    /**
     * Getter for ScoringData.
     * @return Returns the ScoringData
     */
    @JsonGetter("ScoringData")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ScoringData getScoringData() {
        return scoringData;
    }

    /**
     * Setter for ScoringData.
     * @param scoringData Value for ScoringData
     */
    @JsonSetter("ScoringData")
    public void setScoringData(ScoringData scoringData) {
        this.scoringData = scoringData;
    }

    /**
     * Getter for BusinessLinks.
     * @return Returns the BusinessLinks
     */
    @JsonGetter("BusinessLinks")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public BusinessLinks getBusinessLinks() {
        return businessLinks;
    }

    /**
     * Setter for BusinessLinks.
     * @param businessLinks Value for BusinessLinks
     */
    @JsonSetter("BusinessLinks")
    public void setBusinessLinks(BusinessLinks businessLinks) {
        this.businessLinks = businessLinks;
    }

    /**
     * Getter for NoticeOfCorrection.
     * @return Returns the NoticeOfCorrection
     */
    @JsonGetter("NoticeOfCorrection")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public NoticeOfCorrection getNoticeOfCorrection() {
        return noticeOfCorrection;
    }

    /**
     * Setter for NoticeOfCorrection.
     * @param noticeOfCorrection Value for NoticeOfCorrection
     */
    @JsonSetter("NoticeOfCorrection")
    public void setNoticeOfCorrection(NoticeOfCorrection noticeOfCorrection) {
        this.noticeOfCorrection = noticeOfCorrection;
    }

    /**
     * Getter for NonLtdCAISAccountDetail.
     * @return Returns the List of NonLtdCAISAccountDetail
     */
    @JsonGetter("NonLtdCAISAccountDetail")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<NonLtdCAISAccountDetail> getNonLtdCAISAccountDetail() {
        return nonLtdCAISAccountDetail;
    }

    /**
     * Setter for NonLtdCAISAccountDetail.
     * @param nonLtdCAISAccountDetail Value for List of NonLtdCAISAccountDetail
     */
    @JsonSetter("NonLtdCAISAccountDetail")
    public void setNonLtdCAISAccountDetail(List<NonLtdCAISAccountDetail> nonLtdCAISAccountDetail) {
        this.nonLtdCAISAccountDetail = nonLtdCAISAccountDetail;
    }

    /**
     * Getter for DirectorData.
     * @return Returns the DirectorData
     */
    @JsonGetter("DirectorData")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public DirectorData getDirectorData() {
        return directorData;
    }

    /**
     * Setter for DirectorData.
     * @param directorData Value for DirectorData
     */
    @JsonSetter("DirectorData")
    public void setDirectorData(DirectorData directorData) {
        this.directorData = directorData;
    }

    /**
     * Getter for AddressResolutionOutput.
     * @return Returns the AddressResolutionOutput
     */
    @JsonGetter("AddressResolutionOutput")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public AddressResolutionOutput getAddressResolutionOutput() {
        return addressResolutionOutput;
    }

    /**
     * Setter for AddressResolutionOutput.
     * @param addressResolutionOutput Value for AddressResolutionOutput
     */
    @JsonSetter("AddressResolutionOutput")
    public void setAddressResolutionOutput(AddressResolutionOutput addressResolutionOutput) {
        this.addressResolutionOutput = addressResolutionOutput;
    }

    /**
     * Getter for Error.
     * @return Returns the Error
     */
    @JsonGetter("Error")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Error getError() {
        return error;
    }

    /**
     * Setter for Error.
     * @param error Value for Error
     */
    @JsonSetter("Error")
    public void setError(Error error) {
        this.error = error;
    }

    /**
     * Converts this NonLtdBusinessData into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "NonLtdBusinessData [" + "nonLimitedKey=" + nonLimitedKey + ", businessName="
                + businessName + ", ownershipStartDate=" + ownershipStartDate
                + ", ownershipEndDate=" + ownershipEndDate + ", identification=" + identification
                + ", commercialDelphi=" + commercialDelphi + ", commercialCAISScore="
                + commercialCAISScore + ", allCAISSummary=" + allCAISSummary + ", ownCAISSummary="
                + ownCAISSummary + ", paymentPerformance=" + paymentPerformance
                + ", nonLimitedCompanyCIFAS=" + nonLimitedCompanyCIFAS + ", cCJs=" + cCJs
                + ", bankruptcies=" + bankruptcies + ", commercialDelphiHistory="
                + commercialDelphiHistory + ", scoringData=" + scoringData + ", businessLinks="
                + businessLinks + ", noticeOfCorrection=" + noticeOfCorrection
                + ", nonLtdCAISAccountDetail=" + nonLtdCAISAccountDetail + ", directorData="
                + directorData + ", addressResolutionOutput=" + addressResolutionOutput + ", error="
                + error + "]";
    }

    /**
     * Builds a new {@link NonLtdBusinessData.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link NonLtdBusinessData.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .nonLimitedKey(getNonLimitedKey())
                .businessName(getBusinessName())
                .ownershipStartDate(getOwnershipStartDate())
                .ownershipEndDate(getOwnershipEndDate())
                .identification(getIdentification())
                .commercialDelphi(getCommercialDelphi())
                .commercialCAISScore(getCommercialCAISScore())
                .allCAISSummary(getAllCAISSummary())
                .ownCAISSummary(getOwnCAISSummary())
                .paymentPerformance(getPaymentPerformance())
                .nonLimitedCompanyCIFAS(getNonLimitedCompanyCIFAS())
                .cCJs(getCCJs())
                .bankruptcies(getBankruptcies())
                .commercialDelphiHistory(getCommercialDelphiHistory())
                .scoringData(getScoringData())
                .businessLinks(getBusinessLinks())
                .noticeOfCorrection(getNoticeOfCorrection())
                .nonLtdCAISAccountDetail(getNonLtdCAISAccountDetail())
                .directorData(getDirectorData())
                .addressResolutionOutput(getAddressResolutionOutput())
                .error(getError());
        return builder;
    }

    /**
     * Class to build instances of {@link NonLtdBusinessData}.
     */
    public static class Builder {
        private String nonLimitedKey;
        private String businessName;
        private String ownershipStartDate;
        private String ownershipEndDate;
        private Identification identification;
        private CommercialDelphi commercialDelphi;
        private CommercialCAISScore commercialCAISScore;
        private AllCAISSummary allCAISSummary;
        private OwnCAISSummary ownCAISSummary;
        private PaymentPerformance paymentPerformance;
        private NonLimitedCompanyCIFAS nonLimitedCompanyCIFAS;
        private CCJNonLtd cCJs;
        private Bankruptcies bankruptcies;
        private DelphiHistoryAndScore commercialDelphiHistory;
        private ScoringData scoringData;
        private BusinessLinks businessLinks;
        private NoticeOfCorrection noticeOfCorrection;
        private List<NonLtdCAISAccountDetail> nonLtdCAISAccountDetail;
        private DirectorData directorData;
        private AddressResolutionOutput addressResolutionOutput;
        private Error error;



        /**
         * Setter for nonLimitedKey.
         * @param  nonLimitedKey  String value for nonLimitedKey.
         * @return Builder
         */
        public Builder nonLimitedKey(String nonLimitedKey) {
            this.nonLimitedKey = nonLimitedKey;
            return this;
        }

        /**
         * Setter for businessName.
         * @param  businessName  String value for businessName.
         * @return Builder
         */
        public Builder businessName(String businessName) {
            this.businessName = businessName;
            return this;
        }

        /**
         * Setter for ownershipStartDate.
         * @param  ownershipStartDate  String value for ownershipStartDate.
         * @return Builder
         */
        public Builder ownershipStartDate(String ownershipStartDate) {
            this.ownershipStartDate = ownershipStartDate;
            return this;
        }

        /**
         * Setter for ownershipEndDate.
         * @param  ownershipEndDate  String value for ownershipEndDate.
         * @return Builder
         */
        public Builder ownershipEndDate(String ownershipEndDate) {
            this.ownershipEndDate = ownershipEndDate;
            return this;
        }

        /**
         * Setter for identification.
         * @param  identification  Identification value for identification.
         * @return Builder
         */
        public Builder identification(Identification identification) {
            this.identification = identification;
            return this;
        }

        /**
         * Setter for commercialDelphi.
         * @param  commercialDelphi  CommercialDelphi value for commercialDelphi.
         * @return Builder
         */
        public Builder commercialDelphi(CommercialDelphi commercialDelphi) {
            this.commercialDelphi = commercialDelphi;
            return this;
        }

        /**
         * Setter for commercialCAISScore.
         * @param  commercialCAISScore  CommercialCAISScore value for commercialCAISScore.
         * @return Builder
         */
        public Builder commercialCAISScore(CommercialCAISScore commercialCAISScore) {
            this.commercialCAISScore = commercialCAISScore;
            return this;
        }

        /**
         * Setter for allCAISSummary.
         * @param  allCAISSummary  AllCAISSummary value for allCAISSummary.
         * @return Builder
         */
        public Builder allCAISSummary(AllCAISSummary allCAISSummary) {
            this.allCAISSummary = allCAISSummary;
            return this;
        }

        /**
         * Setter for ownCAISSummary.
         * @param  ownCAISSummary  OwnCAISSummary value for ownCAISSummary.
         * @return Builder
         */
        public Builder ownCAISSummary(OwnCAISSummary ownCAISSummary) {
            this.ownCAISSummary = ownCAISSummary;
            return this;
        }

        /**
         * Setter for paymentPerformance.
         * @param  paymentPerformance  PaymentPerformance value for paymentPerformance.
         * @return Builder
         */
        public Builder paymentPerformance(PaymentPerformance paymentPerformance) {
            this.paymentPerformance = paymentPerformance;
            return this;
        }

        /**
         * Setter for nonLimitedCompanyCIFAS.
         * @param  nonLimitedCompanyCIFAS  NonLimitedCompanyCIFAS value for nonLimitedCompanyCIFAS.
         * @return Builder
         */
        public Builder nonLimitedCompanyCIFAS(NonLimitedCompanyCIFAS nonLimitedCompanyCIFAS) {
            this.nonLimitedCompanyCIFAS = nonLimitedCompanyCIFAS;
            return this;
        }

        /**
         * Setter for cCJs.
         * @param  cCJs  CCJNonLtd value for cCJs.
         * @return Builder
         */
        public Builder cCJs(CCJNonLtd cCJs) {
            this.cCJs = cCJs;
            return this;
        }

        /**
         * Setter for bankruptcies.
         * @param  bankruptcies  Bankruptcies value for bankruptcies.
         * @return Builder
         */
        public Builder bankruptcies(Bankruptcies bankruptcies) {
            this.bankruptcies = bankruptcies;
            return this;
        }

        /**
         * Setter for commercialDelphiHistory.
         * @param  commercialDelphiHistory  DelphiHistoryAndScore value for commercialDelphiHistory.
         * @return Builder
         */
        public Builder commercialDelphiHistory(DelphiHistoryAndScore commercialDelphiHistory) {
            this.commercialDelphiHistory = commercialDelphiHistory;
            return this;
        }

        /**
         * Setter for scoringData.
         * @param  scoringData  ScoringData value for scoringData.
         * @return Builder
         */
        public Builder scoringData(ScoringData scoringData) {
            this.scoringData = scoringData;
            return this;
        }

        /**
         * Setter for businessLinks.
         * @param  businessLinks  BusinessLinks value for businessLinks.
         * @return Builder
         */
        public Builder businessLinks(BusinessLinks businessLinks) {
            this.businessLinks = businessLinks;
            return this;
        }

        /**
         * Setter for noticeOfCorrection.
         * @param  noticeOfCorrection  NoticeOfCorrection value for noticeOfCorrection.
         * @return Builder
         */
        public Builder noticeOfCorrection(NoticeOfCorrection noticeOfCorrection) {
            this.noticeOfCorrection = noticeOfCorrection;
            return this;
        }

        /**
         * Setter for nonLtdCAISAccountDetail.
         * @param  nonLtdCAISAccountDetail  List of NonLtdCAISAccountDetail value for
         *         nonLtdCAISAccountDetail.
         * @return Builder
         */
        public Builder nonLtdCAISAccountDetail(
                List<NonLtdCAISAccountDetail> nonLtdCAISAccountDetail) {
            this.nonLtdCAISAccountDetail = nonLtdCAISAccountDetail;
            return this;
        }

        /**
         * Setter for directorData.
         * @param  directorData  DirectorData value for directorData.
         * @return Builder
         */
        public Builder directorData(DirectorData directorData) {
            this.directorData = directorData;
            return this;
        }

        /**
         * Setter for addressResolutionOutput.
         * @param  addressResolutionOutput  AddressResolutionOutput value for
         *         addressResolutionOutput.
         * @return Builder
         */
        public Builder addressResolutionOutput(AddressResolutionOutput addressResolutionOutput) {
            this.addressResolutionOutput = addressResolutionOutput;
            return this;
        }

        /**
         * Setter for error.
         * @param  error  Error value for error.
         * @return Builder
         */
        public Builder error(Error error) {
            this.error = error;
            return this;
        }

        /**
         * Builds a new {@link NonLtdBusinessData} object using the set fields.
         * @return {@link NonLtdBusinessData}
         */
        public NonLtdBusinessData build() {
            return new NonLtdBusinessData(nonLimitedKey, businessName, ownershipStartDate,
                    ownershipEndDate, identification, commercialDelphi, commercialCAISScore,
                    allCAISSummary, ownCAISSummary, paymentPerformance, nonLimitedCompanyCIFAS,
                    cCJs, bankruptcies, commercialDelphiHistory, scoringData, businessLinks,
                    noticeOfCorrection, nonLtdCAISAccountDetail, directorData,
                    addressResolutionOutput, error);
        }
    }
}
