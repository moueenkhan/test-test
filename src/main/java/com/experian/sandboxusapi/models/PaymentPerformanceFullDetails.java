/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for PaymentPerformanceFullDetails type.
 */
public class PaymentPerformanceFullDetails {
    private String allDataInRange;
    private Integer numberCashFirst;
    private Integer numberCollection;
    private Double valCollection;
    private Integer numberCollectionLast2Years;
    private Integer acctsUnpaid1Month;
    private Integer acctsUnpaid2Months;
    private Integer acctsUnpaid3Months;
    private Integer numberDBT0100;
    private Integer numberDBT100110000;
    private Integer numberDBT1011000;
    private Integer numberDBT10kPlus;
    private Integer avgDBT3Mnths;
    private Integer avgDBT6Mnths;
    private Integer avgDBT12Mnths;
    private Double avgCurrDebt;
    private Double avgDebt3Months;
    private Double avgDebt12Months;
    private String paymentPattern;
    private String paymentToTerms;
    private Integer fastestPayment;
    private String fastestMonth;
    private Integer slowestPayment;
    private String slowestMonth;
    private Integer numMnths;
    private Integer numCommonTerms;
    private List<DebitMonthly> dBTMonthly;
    private List<CommonTerm> commonTerms;
    private PaymentSummary paymentSummary;

    /**
     * Default constructor.
     */
    public PaymentPerformanceFullDetails() {
    }

    /**
     * Initialization constructor.
     * @param  allDataInRange  String value for allDataInRange.
     * @param  numberCashFirst  Integer value for numberCashFirst.
     * @param  numberCollection  Integer value for numberCollection.
     * @param  valCollection  Double value for valCollection.
     * @param  numberCollectionLast2Years  Integer value for numberCollectionLast2Years.
     * @param  acctsUnpaid1Month  Integer value for acctsUnpaid1Month.
     * @param  acctsUnpaid2Months  Integer value for acctsUnpaid2Months.
     * @param  acctsUnpaid3Months  Integer value for acctsUnpaid3Months.
     * @param  numberDBT0100  Integer value for numberDBT0100.
     * @param  numberDBT100110000  Integer value for numberDBT100110000.
     * @param  numberDBT1011000  Integer value for numberDBT1011000.
     * @param  numberDBT10kPlus  Integer value for numberDBT10kPlus.
     * @param  avgDBT3Mnths  Integer value for avgDBT3Mnths.
     * @param  avgDBT6Mnths  Integer value for avgDBT6Mnths.
     * @param  avgDBT12Mnths  Integer value for avgDBT12Mnths.
     * @param  avgCurrDebt  Double value for avgCurrDebt.
     * @param  avgDebt3Months  Double value for avgDebt3Months.
     * @param  avgDebt12Months  Double value for avgDebt12Months.
     * @param  paymentPattern  String value for paymentPattern.
     * @param  paymentToTerms  String value for paymentToTerms.
     * @param  fastestPayment  Integer value for fastestPayment.
     * @param  fastestMonth  String value for fastestMonth.
     * @param  slowestPayment  Integer value for slowestPayment.
     * @param  slowestMonth  String value for slowestMonth.
     * @param  numMnths  Integer value for numMnths.
     * @param  numCommonTerms  Integer value for numCommonTerms.
     * @param  dBTMonthly  List of DebitMonthly value for dBTMonthly.
     * @param  commonTerms  List of CommonTerm value for commonTerms.
     * @param  paymentSummary  PaymentSummary value for paymentSummary.
     */
    public PaymentPerformanceFullDetails(
            String allDataInRange,
            Integer numberCashFirst,
            Integer numberCollection,
            Double valCollection,
            Integer numberCollectionLast2Years,
            Integer acctsUnpaid1Month,
            Integer acctsUnpaid2Months,
            Integer acctsUnpaid3Months,
            Integer numberDBT0100,
            Integer numberDBT100110000,
            Integer numberDBT1011000,
            Integer numberDBT10kPlus,
            Integer avgDBT3Mnths,
            Integer avgDBT6Mnths,
            Integer avgDBT12Mnths,
            Double avgCurrDebt,
            Double avgDebt3Months,
            Double avgDebt12Months,
            String paymentPattern,
            String paymentToTerms,
            Integer fastestPayment,
            String fastestMonth,
            Integer slowestPayment,
            String slowestMonth,
            Integer numMnths,
            Integer numCommonTerms,
            List<DebitMonthly> dBTMonthly,
            List<CommonTerm> commonTerms,
            PaymentSummary paymentSummary) {
        this.allDataInRange = allDataInRange;
        this.numberCashFirst = numberCashFirst;
        this.numberCollection = numberCollection;
        this.valCollection = valCollection;
        this.numberCollectionLast2Years = numberCollectionLast2Years;
        this.acctsUnpaid1Month = acctsUnpaid1Month;
        this.acctsUnpaid2Months = acctsUnpaid2Months;
        this.acctsUnpaid3Months = acctsUnpaid3Months;
        this.numberDBT0100 = numberDBT0100;
        this.numberDBT100110000 = numberDBT100110000;
        this.numberDBT1011000 = numberDBT1011000;
        this.numberDBT10kPlus = numberDBT10kPlus;
        this.avgDBT3Mnths = avgDBT3Mnths;
        this.avgDBT6Mnths = avgDBT6Mnths;
        this.avgDBT12Mnths = avgDBT12Mnths;
        this.avgCurrDebt = avgCurrDebt;
        this.avgDebt3Months = avgDebt3Months;
        this.avgDebt12Months = avgDebt12Months;
        this.paymentPattern = paymentPattern;
        this.paymentToTerms = paymentToTerms;
        this.fastestPayment = fastestPayment;
        this.fastestMonth = fastestMonth;
        this.slowestPayment = slowestPayment;
        this.slowestMonth = slowestMonth;
        this.numMnths = numMnths;
        this.numCommonTerms = numCommonTerms;
        this.dBTMonthly = dBTMonthly;
        this.commonTerms = commonTerms;
        this.paymentSummary = paymentSummary;
    }

    /**
     * Getter for AllDataInRange.
     * Indicator showing whether all the Full Payment data is in the ownership period - G = Yes, L =
     * No
     * @return Returns the String
     */
    @JsonGetter("AllDataInRange")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAllDataInRange() {
        return allDataInRange;
    }

    /**
     * Setter for AllDataInRange.
     * Indicator showing whether all the Full Payment data is in the ownership period - G = Yes, L =
     * No
     * @param allDataInRange Value for String
     */
    @JsonSetter("AllDataInRange")
    public void setAllDataInRange(String allDataInRange) {
        this.allDataInRange = allDataInRange;
    }

    /**
     * Getter for NumberCashFirst.
     * Number of accounts that are Cash First or Pro forma
     * @return Returns the Integer
     */
    @JsonGetter("NumberCashFirst")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumberCashFirst() {
        return numberCashFirst;
    }

    /**
     * Setter for NumberCashFirst.
     * Number of accounts that are Cash First or Pro forma
     * @param numberCashFirst Value for Integer
     */
    @JsonSetter("NumberCashFirst")
    public void setNumberCashFirst(Integer numberCashFirst) {
        this.numberCashFirst = numberCashFirst;
    }

    /**
     * Getter for NumberCollection.
     * Number of accounts that are placed for Collection
     * @return Returns the Integer
     */
    @JsonGetter("NumberCollection")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumberCollection() {
        return numberCollection;
    }

    /**
     * Setter for NumberCollection.
     * Number of accounts that are placed for Collection
     * @param numberCollection Value for Integer
     */
    @JsonSetter("NumberCollection")
    public void setNumberCollection(Integer numberCollection) {
        this.numberCollection = numberCollection;
    }

    /**
     * Getter for ValCollection.
     * Value of accounts that are placed for Collection
     * @return Returns the Double
     */
    @JsonGetter("ValCollection")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getValCollection() {
        return valCollection;
    }

    /**
     * Setter for ValCollection.
     * Value of accounts that are placed for Collection
     * @param valCollection Value for Double
     */
    @JsonSetter("ValCollection")
    public void setValCollection(Double valCollection) {
        this.valCollection = valCollection;
    }

    /**
     * Getter for NumberCollectionLast2Years.
     * Number of accounts that have been placed for Collection in the last 2 years
     * @return Returns the Integer
     */
    @JsonGetter("NumberCollectionLast2Years")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumberCollectionLast2Years() {
        return numberCollectionLast2Years;
    }

    /**
     * Setter for NumberCollectionLast2Years.
     * Number of accounts that have been placed for Collection in the last 2 years
     * @param numberCollectionLast2Years Value for Integer
     */
    @JsonSetter("NumberCollectionLast2Years")
    public void setNumberCollectionLast2Years(Integer numberCollectionLast2Years) {
        this.numberCollectionLast2Years = numberCollectionLast2Years;
    }

    /**
     * Getter for AcctsUnpaid1Month.
     * Number of accounts that have been unpaid for the last month
     * @return Returns the Integer
     */
    @JsonGetter("AcctsUnpaid1Month")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getAcctsUnpaid1Month() {
        return acctsUnpaid1Month;
    }

    /**
     * Setter for AcctsUnpaid1Month.
     * Number of accounts that have been unpaid for the last month
     * @param acctsUnpaid1Month Value for Integer
     */
    @JsonSetter("AcctsUnpaid1Month")
    public void setAcctsUnpaid1Month(Integer acctsUnpaid1Month) {
        this.acctsUnpaid1Month = acctsUnpaid1Month;
    }

    /**
     * Getter for AcctsUnpaid2Months.
     * Number of accounts that have been unpaid for the last 2 months
     * @return Returns the Integer
     */
    @JsonGetter("AcctsUnpaid2Months")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getAcctsUnpaid2Months() {
        return acctsUnpaid2Months;
    }

    /**
     * Setter for AcctsUnpaid2Months.
     * Number of accounts that have been unpaid for the last 2 months
     * @param acctsUnpaid2Months Value for Integer
     */
    @JsonSetter("AcctsUnpaid2Months")
    public void setAcctsUnpaid2Months(Integer acctsUnpaid2Months) {
        this.acctsUnpaid2Months = acctsUnpaid2Months;
    }

    /**
     * Getter for AcctsUnpaid3Months.
     * Number of accounts that have been unpaid for the last 3 months
     * @return Returns the Integer
     */
    @JsonGetter("AcctsUnpaid3Months")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getAcctsUnpaid3Months() {
        return acctsUnpaid3Months;
    }

    /**
     * Setter for AcctsUnpaid3Months.
     * Number of accounts that have been unpaid for the last 3 months
     * @param acctsUnpaid3Months Value for Integer
     */
    @JsonSetter("AcctsUnpaid3Months")
    public void setAcctsUnpaid3Months(Integer acctsUnpaid3Months) {
        this.acctsUnpaid3Months = acctsUnpaid3Months;
    }

    /**
     * Getter for NumberDBT0100.
     * Number of payments beyond terms where amount is up to &pound;1,000 for the non-limited
     * business
     * @return Returns the Integer
     */
    @JsonGetter("NumberDBT0-100")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumberDBT0100() {
        return numberDBT0100;
    }

    /**
     * Setter for NumberDBT0100.
     * Number of payments beyond terms where amount is up to &pound;1,000 for the non-limited
     * business
     * @param numberDBT0100 Value for Integer
     */
    @JsonSetter("NumberDBT0-100")
    public void setNumberDBT0100(Integer numberDBT0100) {
        this.numberDBT0100 = numberDBT0100;
    }

    /**
     * Getter for NumberDBT100110000.
     * Number of payments beyond terms where amount is in the range &pound;1,000 to &pound;10,000
     * for the non-limited business
     * @return Returns the Integer
     */
    @JsonGetter("NumberDBT1001-10000")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumberDBT100110000() {
        return numberDBT100110000;
    }

    /**
     * Setter for NumberDBT100110000.
     * Number of payments beyond terms where amount is in the range &pound;1,000 to &pound;10,000
     * for the non-limited business
     * @param numberDBT100110000 Value for Integer
     */
    @JsonSetter("NumberDBT1001-10000")
    public void setNumberDBT100110000(Integer numberDBT100110000) {
        this.numberDBT100110000 = numberDBT100110000;
    }

    /**
     * Getter for NumberDBT1011000.
     * Number of payments beyond terms where amount is in the range &pound;10,000 to &pound;100,000
     * for the non-limited business
     * @return Returns the Integer
     */
    @JsonGetter("NumberDBT101-1000")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumberDBT1011000() {
        return numberDBT1011000;
    }

    /**
     * Setter for NumberDBT1011000.
     * Number of payments beyond terms where amount is in the range &pound;10,000 to &pound;100,000
     * for the non-limited business
     * @param numberDBT1011000 Value for Integer
     */
    @JsonSetter("NumberDBT101-1000")
    public void setNumberDBT1011000(Integer numberDBT1011000) {
        this.numberDBT1011000 = numberDBT1011000;
    }

    /**
     * Getter for NumberDBT10kPlus.
     * Number of payments beyond terms where amount exceeds &pound;100,000 for the non-limited
     * business
     * @return Returns the Integer
     */
    @JsonGetter("NumberDBT10kPlus")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumberDBT10kPlus() {
        return numberDBT10kPlus;
    }

    /**
     * Setter for NumberDBT10kPlus.
     * Number of payments beyond terms where amount exceeds &pound;100,000 for the non-limited
     * business
     * @param numberDBT10kPlus Value for Integer
     */
    @JsonSetter("NumberDBT10kPlus")
    public void setNumberDBT10kPlus(Integer numberDBT10kPlus) {
        this.numberDBT10kPlus = numberDBT10kPlus;
    }

    /**
     * Getter for AvgDBT3Mnths.
     * Average number of days beyond terms for payment over the previous 3 months for the
     * non-limited business
     * @return Returns the Integer
     */
    @JsonGetter("AvgDBT3Mnths")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getAvgDBT3Mnths() {
        return avgDBT3Mnths;
    }

    /**
     * Setter for AvgDBT3Mnths.
     * Average number of days beyond terms for payment over the previous 3 months for the
     * non-limited business
     * @param avgDBT3Mnths Value for Integer
     */
    @JsonSetter("AvgDBT3Mnths")
    public void setAvgDBT3Mnths(Integer avgDBT3Mnths) {
        this.avgDBT3Mnths = avgDBT3Mnths;
    }

    /**
     * Getter for AvgDBT6Mnths.
     * Average number of days beyond terms for payment over the previous 6 months for the
     * non-limited business
     * @return Returns the Integer
     */
    @JsonGetter("AvgDBT6Mnths")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getAvgDBT6Mnths() {
        return avgDBT6Mnths;
    }

    /**
     * Setter for AvgDBT6Mnths.
     * Average number of days beyond terms for payment over the previous 6 months for the
     * non-limited business
     * @param avgDBT6Mnths Value for Integer
     */
    @JsonSetter("AvgDBT6Mnths")
    public void setAvgDBT6Mnths(Integer avgDBT6Mnths) {
        this.avgDBT6Mnths = avgDBT6Mnths;
    }

    /**
     * Getter for AvgDBT12Mnths.
     * Average number of days beyond terms for payment over the previous 12 months for the
     * non-limited business
     * @return Returns the Integer
     */
    @JsonGetter("AvgDBT12Mnths")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getAvgDBT12Mnths() {
        return avgDBT12Mnths;
    }

    /**
     * Setter for AvgDBT12Mnths.
     * Average number of days beyond terms for payment over the previous 12 months for the
     * non-limited business
     * @param avgDBT12Mnths Value for Integer
     */
    @JsonSetter("AvgDBT12Mnths")
    public void setAvgDBT12Mnths(Integer avgDBT12Mnths) {
        this.avgDBT12Mnths = avgDBT12Mnths;
    }

    /**
     * Getter for AvgCurrDebt.
     * Current average debt for the non-limited business
     * @return Returns the Double
     */
    @JsonGetter("AvgCurrDebt")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getAvgCurrDebt() {
        return avgCurrDebt;
    }

    /**
     * Setter for AvgCurrDebt.
     * Current average debt for the non-limited business
     * @param avgCurrDebt Value for Double
     */
    @JsonSetter("AvgCurrDebt")
    public void setAvgCurrDebt(Double avgCurrDebt) {
        this.avgCurrDebt = avgCurrDebt;
    }

    /**
     * Getter for AvgDebt3Months.
     * Average debt for the non-limited business in last 3 months
     * @return Returns the Double
     */
    @JsonGetter("AvgDebt3Months")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getAvgDebt3Months() {
        return avgDebt3Months;
    }

    /**
     * Setter for AvgDebt3Months.
     * Average debt for the non-limited business in last 3 months
     * @param avgDebt3Months Value for Double
     */
    @JsonSetter("AvgDebt3Months")
    public void setAvgDebt3Months(Double avgDebt3Months) {
        this.avgDebt3Months = avgDebt3Months;
    }

    /**
     * Getter for AvgDebt12Months.
     * Average debt for the non-limited business in last 12 months
     * @return Returns the Double
     */
    @JsonGetter("AvgDebt12Months")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getAvgDebt12Months() {
        return avgDebt12Months;
    }

    /**
     * Setter for AvgDebt12Months.
     * Average debt for the non-limited business in last 12 months
     * @param avgDebt12Months Value for Double
     */
    @JsonSetter("AvgDebt12Months")
    public void setAvgDebt12Months(Double avgDebt12Months) {
        this.avgDebt12Months = avgDebt12Months;
    }

    /**
     * Getter for PaymentPattern.
     * Analysis of the payment pattern for the non-limited business - C = Consistent; W = Worsening;
     * N = Noticeable Worsening; S = Significant Worsening; I = Improvement; O = Noticeable
     * Improvement; T = Significant Improvement
     * @return Returns the String
     */
    @JsonGetter("PaymentPattern")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPaymentPattern() {
        return paymentPattern;
    }

    /**
     * Setter for PaymentPattern.
     * Analysis of the payment pattern for the non-limited business - C = Consistent; W = Worsening;
     * N = Noticeable Worsening; S = Significant Worsening; I = Improvement; O = Noticeable
     * Improvement; T = Significant Improvement
     * @param paymentPattern Value for String
     */
    @JsonSetter("PaymentPattern")
    public void setPaymentPattern(String paymentPattern) {
        this.paymentPattern = paymentPattern;
    }

    /**
     * Getter for PaymentToTerms.
     * Analysis of the payment to terms for the non-limited business - B = Beyond Terms; W = Within
     * Terms
     * @return Returns the String
     */
    @JsonGetter("PaymentToTerms")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPaymentToTerms() {
        return paymentToTerms;
    }

    /**
     * Setter for PaymentToTerms.
     * Analysis of the payment to terms for the non-limited business - B = Beyond Terms; W = Within
     * Terms
     * @param paymentToTerms Value for String
     */
    @JsonSetter("PaymentToTerms")
    public void setPaymentToTerms(String paymentToTerms) {
        this.paymentToTerms = paymentToTerms;
    }

    /**
     * Getter for FastestPayment.
     * Number of days beyond terms for payment in the month with the lowest average value for the
     * non-limited business
     * @return Returns the Integer
     */
    @JsonGetter("FastestPayment")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getFastestPayment() {
        return fastestPayment;
    }

    /**
     * Setter for FastestPayment.
     * Number of days beyond terms for payment in the month with the lowest average value for the
     * non-limited business
     * @param fastestPayment Value for Integer
     */
    @JsonSetter("FastestPayment")
    public void setFastestPayment(Integer fastestPayment) {
        this.fastestPayment = fastestPayment;
    }

    /**
     * Getter for FastestMonth.
     * Month where number of days beyond terms for payment has the lowest average value for the
     * non-limited business (yyyy-mm)
     * @return Returns the String
     */
    @JsonGetter("FastestMonth")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getFastestMonth() {
        return fastestMonth;
    }

    /**
     * Setter for FastestMonth.
     * Month where number of days beyond terms for payment has the lowest average value for the
     * non-limited business (yyyy-mm)
     * @param fastestMonth Value for String
     */
    @JsonSetter("FastestMonth")
    public void setFastestMonth(String fastestMonth) {
        this.fastestMonth = fastestMonth;
    }

    /**
     * Getter for SlowestPayment.
     * Number of days beyond terms for payment in the month with the highest average value for the
     * non-limited business
     * @return Returns the Integer
     */
    @JsonGetter("SlowestPayment")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getSlowestPayment() {
        return slowestPayment;
    }

    /**
     * Setter for SlowestPayment.
     * Number of days beyond terms for payment in the month with the highest average value for the
     * non-limited business
     * @param slowestPayment Value for Integer
     */
    @JsonSetter("SlowestPayment")
    public void setSlowestPayment(Integer slowestPayment) {
        this.slowestPayment = slowestPayment;
    }

    /**
     * Getter for SlowestMonth.
     * Month where number of days beyond terms for payment has the highest average value for the
     * non-limited business (yyyy-mm)
     * @return Returns the String
     */
    @JsonGetter("SlowestMonth")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSlowestMonth() {
        return slowestMonth;
    }

    /**
     * Setter for SlowestMonth.
     * Month where number of days beyond terms for payment has the highest average value for the
     * non-limited business (yyyy-mm)
     * @param slowestMonth Value for String
     */
    @JsonSetter("SlowestMonth")
    public void setSlowestMonth(String slowestMonth) {
        this.slowestMonth = slowestMonth;
    }

    /**
     * Getter for NumMnths.
     * Number of days beyond terms months for the non-limited business
     * @return Returns the Integer
     */
    @JsonGetter("NumMnths")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumMnths() {
        return numMnths;
    }

    /**
     * Setter for NumMnths.
     * Number of days beyond terms months for the non-limited business
     * @param numMnths Value for Integer
     */
    @JsonSetter("NumMnths")
    public void setNumMnths(Integer numMnths) {
        this.numMnths = numMnths;
    }

    /**
     * Getter for NumCommonTerms.
     * Number of common terms
     * @return Returns the Integer
     */
    @JsonGetter("NumCommonTerms")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumCommonTerms() {
        return numCommonTerms;
    }

    /**
     * Setter for NumCommonTerms.
     * Number of common terms
     * @param numCommonTerms Value for Integer
     */
    @JsonSetter("NumCommonTerms")
    public void setNumCommonTerms(Integer numCommonTerms) {
        this.numCommonTerms = numCommonTerms;
    }

    /**
     * Getter for DBTMonthly.
     * @return Returns the List of DebitMonthly
     */
    @JsonGetter("DBTMonthly")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<DebitMonthly> getDBTMonthly() {
        return dBTMonthly;
    }

    /**
     * Setter for DBTMonthly.
     * @param dBTMonthly Value for List of DebitMonthly
     */
    @JsonSetter("DBTMonthly")
    public void setDBTMonthly(List<DebitMonthly> dBTMonthly) {
        this.dBTMonthly = dBTMonthly;
    }

    /**
     * Getter for CommonTerms.
     * @return Returns the List of CommonTerm
     */
    @JsonGetter("CommonTerms")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<CommonTerm> getCommonTerms() {
        return commonTerms;
    }

    /**
     * Setter for CommonTerms.
     * @param commonTerms Value for List of CommonTerm
     */
    @JsonSetter("CommonTerms")
    public void setCommonTerms(List<CommonTerm> commonTerms) {
        this.commonTerms = commonTerms;
    }

    /**
     * Getter for PaymentSummary.
     * @return Returns the PaymentSummary
     */
    @JsonGetter("PaymentSummary")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public PaymentSummary getPaymentSummary() {
        return paymentSummary;
    }

    /**
     * Setter for PaymentSummary.
     * @param paymentSummary Value for PaymentSummary
     */
    @JsonSetter("PaymentSummary")
    public void setPaymentSummary(PaymentSummary paymentSummary) {
        this.paymentSummary = paymentSummary;
    }

    /**
     * Converts this PaymentPerformanceFullDetails into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "PaymentPerformanceFullDetails [" + "allDataInRange=" + allDataInRange
                + ", numberCashFirst=" + numberCashFirst + ", numberCollection=" + numberCollection
                + ", valCollection=" + valCollection + ", numberCollectionLast2Years="
                + numberCollectionLast2Years + ", acctsUnpaid1Month=" + acctsUnpaid1Month
                + ", acctsUnpaid2Months=" + acctsUnpaid2Months + ", acctsUnpaid3Months="
                + acctsUnpaid3Months + ", numberDBT0100=" + numberDBT0100 + ", numberDBT100110000="
                + numberDBT100110000 + ", numberDBT1011000=" + numberDBT1011000
                + ", numberDBT10kPlus=" + numberDBT10kPlus + ", avgDBT3Mnths=" + avgDBT3Mnths
                + ", avgDBT6Mnths=" + avgDBT6Mnths + ", avgDBT12Mnths=" + avgDBT12Mnths
                + ", avgCurrDebt=" + avgCurrDebt + ", avgDebt3Months=" + avgDebt3Months
                + ", avgDebt12Months=" + avgDebt12Months + ", paymentPattern=" + paymentPattern
                + ", paymentToTerms=" + paymentToTerms + ", fastestPayment=" + fastestPayment
                + ", fastestMonth=" + fastestMonth + ", slowestPayment=" + slowestPayment
                + ", slowestMonth=" + slowestMonth + ", numMnths=" + numMnths + ", numCommonTerms="
                + numCommonTerms + ", dBTMonthly=" + dBTMonthly + ", commonTerms=" + commonTerms
                + ", paymentSummary=" + paymentSummary + "]";
    }

    /**
     * Builds a new {@link PaymentPerformanceFullDetails.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link PaymentPerformanceFullDetails.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .allDataInRange(getAllDataInRange())
                .numberCashFirst(getNumberCashFirst())
                .numberCollection(getNumberCollection())
                .valCollection(getValCollection())
                .numberCollectionLast2Years(getNumberCollectionLast2Years())
                .acctsUnpaid1Month(getAcctsUnpaid1Month())
                .acctsUnpaid2Months(getAcctsUnpaid2Months())
                .acctsUnpaid3Months(getAcctsUnpaid3Months())
                .numberDBT0100(getNumberDBT0100())
                .numberDBT100110000(getNumberDBT100110000())
                .numberDBT1011000(getNumberDBT1011000())
                .numberDBT10kPlus(getNumberDBT10kPlus())
                .avgDBT3Mnths(getAvgDBT3Mnths())
                .avgDBT6Mnths(getAvgDBT6Mnths())
                .avgDBT12Mnths(getAvgDBT12Mnths())
                .avgCurrDebt(getAvgCurrDebt())
                .avgDebt3Months(getAvgDebt3Months())
                .avgDebt12Months(getAvgDebt12Months())
                .paymentPattern(getPaymentPattern())
                .paymentToTerms(getPaymentToTerms())
                .fastestPayment(getFastestPayment())
                .fastestMonth(getFastestMonth())
                .slowestPayment(getSlowestPayment())
                .slowestMonth(getSlowestMonth())
                .numMnths(getNumMnths())
                .numCommonTerms(getNumCommonTerms())
                .dBTMonthly(getDBTMonthly())
                .commonTerms(getCommonTerms())
                .paymentSummary(getPaymentSummary());
        return builder;
    }

    /**
     * Class to build instances of {@link PaymentPerformanceFullDetails}.
     */
    public static class Builder {
        private String allDataInRange;
        private Integer numberCashFirst;
        private Integer numberCollection;
        private Double valCollection;
        private Integer numberCollectionLast2Years;
        private Integer acctsUnpaid1Month;
        private Integer acctsUnpaid2Months;
        private Integer acctsUnpaid3Months;
        private Integer numberDBT0100;
        private Integer numberDBT100110000;
        private Integer numberDBT1011000;
        private Integer numberDBT10kPlus;
        private Integer avgDBT3Mnths;
        private Integer avgDBT6Mnths;
        private Integer avgDBT12Mnths;
        private Double avgCurrDebt;
        private Double avgDebt3Months;
        private Double avgDebt12Months;
        private String paymentPattern;
        private String paymentToTerms;
        private Integer fastestPayment;
        private String fastestMonth;
        private Integer slowestPayment;
        private String slowestMonth;
        private Integer numMnths;
        private Integer numCommonTerms;
        private List<DebitMonthly> dBTMonthly;
        private List<CommonTerm> commonTerms;
        private PaymentSummary paymentSummary;



        /**
         * Setter for allDataInRange.
         * @param  allDataInRange  String value for allDataInRange.
         * @return Builder
         */
        public Builder allDataInRange(String allDataInRange) {
            this.allDataInRange = allDataInRange;
            return this;
        }

        /**
         * Setter for numberCashFirst.
         * @param  numberCashFirst  Integer value for numberCashFirst.
         * @return Builder
         */
        public Builder numberCashFirst(Integer numberCashFirst) {
            this.numberCashFirst = numberCashFirst;
            return this;
        }

        /**
         * Setter for numberCollection.
         * @param  numberCollection  Integer value for numberCollection.
         * @return Builder
         */
        public Builder numberCollection(Integer numberCollection) {
            this.numberCollection = numberCollection;
            return this;
        }

        /**
         * Setter for valCollection.
         * @param  valCollection  Double value for valCollection.
         * @return Builder
         */
        public Builder valCollection(Double valCollection) {
            this.valCollection = valCollection;
            return this;
        }

        /**
         * Setter for numberCollectionLast2Years.
         * @param  numberCollectionLast2Years  Integer value for numberCollectionLast2Years.
         * @return Builder
         */
        public Builder numberCollectionLast2Years(Integer numberCollectionLast2Years) {
            this.numberCollectionLast2Years = numberCollectionLast2Years;
            return this;
        }

        /**
         * Setter for acctsUnpaid1Month.
         * @param  acctsUnpaid1Month  Integer value for acctsUnpaid1Month.
         * @return Builder
         */
        public Builder acctsUnpaid1Month(Integer acctsUnpaid1Month) {
            this.acctsUnpaid1Month = acctsUnpaid1Month;
            return this;
        }

        /**
         * Setter for acctsUnpaid2Months.
         * @param  acctsUnpaid2Months  Integer value for acctsUnpaid2Months.
         * @return Builder
         */
        public Builder acctsUnpaid2Months(Integer acctsUnpaid2Months) {
            this.acctsUnpaid2Months = acctsUnpaid2Months;
            return this;
        }

        /**
         * Setter for acctsUnpaid3Months.
         * @param  acctsUnpaid3Months  Integer value for acctsUnpaid3Months.
         * @return Builder
         */
        public Builder acctsUnpaid3Months(Integer acctsUnpaid3Months) {
            this.acctsUnpaid3Months = acctsUnpaid3Months;
            return this;
        }

        /**
         * Setter for numberDBT0100.
         * @param  numberDBT0100  Integer value for numberDBT0100.
         * @return Builder
         */
        public Builder numberDBT0100(Integer numberDBT0100) {
            this.numberDBT0100 = numberDBT0100;
            return this;
        }

        /**
         * Setter for numberDBT100110000.
         * @param  numberDBT100110000  Integer value for numberDBT100110000.
         * @return Builder
         */
        public Builder numberDBT100110000(Integer numberDBT100110000) {
            this.numberDBT100110000 = numberDBT100110000;
            return this;
        }

        /**
         * Setter for numberDBT1011000.
         * @param  numberDBT1011000  Integer value for numberDBT1011000.
         * @return Builder
         */
        public Builder numberDBT1011000(Integer numberDBT1011000) {
            this.numberDBT1011000 = numberDBT1011000;
            return this;
        }

        /**
         * Setter for numberDBT10kPlus.
         * @param  numberDBT10kPlus  Integer value for numberDBT10kPlus.
         * @return Builder
         */
        public Builder numberDBT10kPlus(Integer numberDBT10kPlus) {
            this.numberDBT10kPlus = numberDBT10kPlus;
            return this;
        }

        /**
         * Setter for avgDBT3Mnths.
         * @param  avgDBT3Mnths  Integer value for avgDBT3Mnths.
         * @return Builder
         */
        public Builder avgDBT3Mnths(Integer avgDBT3Mnths) {
            this.avgDBT3Mnths = avgDBT3Mnths;
            return this;
        }

        /**
         * Setter for avgDBT6Mnths.
         * @param  avgDBT6Mnths  Integer value for avgDBT6Mnths.
         * @return Builder
         */
        public Builder avgDBT6Mnths(Integer avgDBT6Mnths) {
            this.avgDBT6Mnths = avgDBT6Mnths;
            return this;
        }

        /**
         * Setter for avgDBT12Mnths.
         * @param  avgDBT12Mnths  Integer value for avgDBT12Mnths.
         * @return Builder
         */
        public Builder avgDBT12Mnths(Integer avgDBT12Mnths) {
            this.avgDBT12Mnths = avgDBT12Mnths;
            return this;
        }

        /**
         * Setter for avgCurrDebt.
         * @param  avgCurrDebt  Double value for avgCurrDebt.
         * @return Builder
         */
        public Builder avgCurrDebt(Double avgCurrDebt) {
            this.avgCurrDebt = avgCurrDebt;
            return this;
        }

        /**
         * Setter for avgDebt3Months.
         * @param  avgDebt3Months  Double value for avgDebt3Months.
         * @return Builder
         */
        public Builder avgDebt3Months(Double avgDebt3Months) {
            this.avgDebt3Months = avgDebt3Months;
            return this;
        }

        /**
         * Setter for avgDebt12Months.
         * @param  avgDebt12Months  Double value for avgDebt12Months.
         * @return Builder
         */
        public Builder avgDebt12Months(Double avgDebt12Months) {
            this.avgDebt12Months = avgDebt12Months;
            return this;
        }

        /**
         * Setter for paymentPattern.
         * @param  paymentPattern  String value for paymentPattern.
         * @return Builder
         */
        public Builder paymentPattern(String paymentPattern) {
            this.paymentPattern = paymentPattern;
            return this;
        }

        /**
         * Setter for paymentToTerms.
         * @param  paymentToTerms  String value for paymentToTerms.
         * @return Builder
         */
        public Builder paymentToTerms(String paymentToTerms) {
            this.paymentToTerms = paymentToTerms;
            return this;
        }

        /**
         * Setter for fastestPayment.
         * @param  fastestPayment  Integer value for fastestPayment.
         * @return Builder
         */
        public Builder fastestPayment(Integer fastestPayment) {
            this.fastestPayment = fastestPayment;
            return this;
        }

        /**
         * Setter for fastestMonth.
         * @param  fastestMonth  String value for fastestMonth.
         * @return Builder
         */
        public Builder fastestMonth(String fastestMonth) {
            this.fastestMonth = fastestMonth;
            return this;
        }

        /**
         * Setter for slowestPayment.
         * @param  slowestPayment  Integer value for slowestPayment.
         * @return Builder
         */
        public Builder slowestPayment(Integer slowestPayment) {
            this.slowestPayment = slowestPayment;
            return this;
        }

        /**
         * Setter for slowestMonth.
         * @param  slowestMonth  String value for slowestMonth.
         * @return Builder
         */
        public Builder slowestMonth(String slowestMonth) {
            this.slowestMonth = slowestMonth;
            return this;
        }

        /**
         * Setter for numMnths.
         * @param  numMnths  Integer value for numMnths.
         * @return Builder
         */
        public Builder numMnths(Integer numMnths) {
            this.numMnths = numMnths;
            return this;
        }

        /**
         * Setter for numCommonTerms.
         * @param  numCommonTerms  Integer value for numCommonTerms.
         * @return Builder
         */
        public Builder numCommonTerms(Integer numCommonTerms) {
            this.numCommonTerms = numCommonTerms;
            return this;
        }

        /**
         * Setter for dBTMonthly.
         * @param  dBTMonthly  List of DebitMonthly value for dBTMonthly.
         * @return Builder
         */
        public Builder dBTMonthly(List<DebitMonthly> dBTMonthly) {
            this.dBTMonthly = dBTMonthly;
            return this;
        }

        /**
         * Setter for commonTerms.
         * @param  commonTerms  List of CommonTerm value for commonTerms.
         * @return Builder
         */
        public Builder commonTerms(List<CommonTerm> commonTerms) {
            this.commonTerms = commonTerms;
            return this;
        }

        /**
         * Setter for paymentSummary.
         * @param  paymentSummary  PaymentSummary value for paymentSummary.
         * @return Builder
         */
        public Builder paymentSummary(PaymentSummary paymentSummary) {
            this.paymentSummary = paymentSummary;
            return this;
        }

        /**
         * Builds a new {@link PaymentPerformanceFullDetails} object using the set fields.
         * @return {@link PaymentPerformanceFullDetails}
         */
        public PaymentPerformanceFullDetails build() {
            return new PaymentPerformanceFullDetails(allDataInRange, numberCashFirst,
                    numberCollection, valCollection, numberCollectionLast2Years, acctsUnpaid1Month,
                    acctsUnpaid2Months, acctsUnpaid3Months, numberDBT0100, numberDBT100110000,
                    numberDBT1011000, numberDBT10kPlus, avgDBT3Mnths, avgDBT6Mnths, avgDBT12Mnths,
                    avgCurrDebt, avgDebt3Months, avgDebt12Months, paymentPattern, paymentToTerms,
                    fastestPayment, fastestMonth, slowestPayment, slowestMonth, numMnths,
                    numCommonTerms, dBTMonthly, commonTerms, paymentSummary);
        }
    }
}
