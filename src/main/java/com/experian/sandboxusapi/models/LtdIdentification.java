/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for LtdIdentification type.
 */
public class LtdIdentification {
    private String legalStatus;
    private String incorporationDate;
    private String dissolutionDate;
    private LtdBusinessLocation registeredOffice;
    private String currency;
    private Double issuedCapital;
    private String asRegisteredOffice;
    private String tradingTelephoneNum;
    private LtdBusinessLocation tradingLocation;
    private String principalActivities;
    private List<SICInfo80> sICInformation1980;
    private List<SICInfo92> sICInformation1992;
    private PreviousNames previousNames;
    private PreviousAddresses previousAddresses;
    private LtdThomsonData thomsonData;
    private FilingDetails filingDetails;
    private Auditor auditor;
    private Bank bank;
    private CROChanges cROChanges;
    private LtdPrevSearches prevSearches;
    private CCLLtd cCLs;

    /**
     * Default constructor.
     */
    public LtdIdentification() {
    }

    /**
     * Initialization constructor.
     * @param  legalStatus  String value for legalStatus.
     * @param  incorporationDate  String value for incorporationDate.
     * @param  dissolutionDate  String value for dissolutionDate.
     * @param  registeredOffice  LtdBusinessLocation value for registeredOffice.
     * @param  currency  String value for currency.
     * @param  issuedCapital  Double value for issuedCapital.
     * @param  asRegisteredOffice  String value for asRegisteredOffice.
     * @param  tradingTelephoneNum  String value for tradingTelephoneNum.
     * @param  tradingLocation  LtdBusinessLocation value for tradingLocation.
     * @param  principalActivities  String value for principalActivities.
     * @param  sICInformation1980  List of SICInfo80 value for sICInformation1980.
     * @param  sICInformation1992  List of SICInfo92 value for sICInformation1992.
     * @param  previousNames  PreviousNames value for previousNames.
     * @param  previousAddresses  PreviousAddresses value for previousAddresses.
     * @param  thomsonData  LtdThomsonData value for thomsonData.
     * @param  filingDetails  FilingDetails value for filingDetails.
     * @param  auditor  Auditor value for auditor.
     * @param  bank  Bank value for bank.
     * @param  cROChanges  CROChanges value for cROChanges.
     * @param  prevSearches  LtdPrevSearches value for prevSearches.
     * @param  cCLs  CCLLtd value for cCLs.
     */
    public LtdIdentification(
            String legalStatus,
            String incorporationDate,
            String dissolutionDate,
            LtdBusinessLocation registeredOffice,
            String currency,
            Double issuedCapital,
            String asRegisteredOffice,
            String tradingTelephoneNum,
            LtdBusinessLocation tradingLocation,
            String principalActivities,
            List<SICInfo80> sICInformation1980,
            List<SICInfo92> sICInformation1992,
            PreviousNames previousNames,
            PreviousAddresses previousAddresses,
            LtdThomsonData thomsonData,
            FilingDetails filingDetails,
            Auditor auditor,
            Bank bank,
            CROChanges cROChanges,
            LtdPrevSearches prevSearches,
            CCLLtd cCLs) {
        this.legalStatus = legalStatus;
        this.incorporationDate = incorporationDate;
        this.dissolutionDate = dissolutionDate;
        this.registeredOffice = registeredOffice;
        this.currency = currency;
        this.issuedCapital = issuedCapital;
        this.asRegisteredOffice = asRegisteredOffice;
        this.tradingTelephoneNum = tradingTelephoneNum;
        this.tradingLocation = tradingLocation;
        this.principalActivities = principalActivities;
        this.sICInformation1980 = sICInformation1980;
        this.sICInformation1992 = sICInformation1992;
        this.previousNames = previousNames;
        this.previousAddresses = previousAddresses;
        this.thomsonData = thomsonData;
        this.filingDetails = filingDetails;
        this.auditor = auditor;
        this.bank = bank;
        this.cROChanges = cROChanges;
        this.prevSearches = prevSearches;
        this.cCLs = cCLs;
    }

    /**
     * Getter for LegalStatus.
     * Indicator showing the legal status of the limited company - 1 = Private Unlimited; 2 =
     * Private Limited; 3 = PLC; 4 = Old Public Company; 5 = Private Company Limited by Guarantee
     * (Exempt from using word 'Limited'); 6 = Limited Partnership; 7 = Private Limited Company
     * Without Share Capital; 8 = Company Converted / Closed; 9 = Private Unlimited Company Without
     * Share Capital; 0 = Other; A = Private Company Limited by Shares (Exempt from using word
     * 'Limited'). When the Company Number Prefix = CI or SL, there are 3 flags as follows; 1 = ICVC
     * (Securities); 2 = ICVC (Warrant); 3 = ICVC (Umbrella)
     * @return Returns the String
     */
    @JsonGetter("LegalStatus")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLegalStatus() {
        return legalStatus;
    }

    /**
     * Setter for LegalStatus.
     * Indicator showing the legal status of the limited company - 1 = Private Unlimited; 2 =
     * Private Limited; 3 = PLC; 4 = Old Public Company; 5 = Private Company Limited by Guarantee
     * (Exempt from using word 'Limited'); 6 = Limited Partnership; 7 = Private Limited Company
     * Without Share Capital; 8 = Company Converted / Closed; 9 = Private Unlimited Company Without
     * Share Capital; 0 = Other; A = Private Company Limited by Shares (Exempt from using word
     * 'Limited'). When the Company Number Prefix = CI or SL, there are 3 flags as follows; 1 = ICVC
     * (Securities); 2 = ICVC (Warrant); 3 = ICVC (Umbrella)
     * @param legalStatus Value for String
     */
    @JsonSetter("LegalStatus")
    public void setLegalStatus(String legalStatus) {
        this.legalStatus = legalStatus;
    }

    /**
     * Getter for IncorporationDate.
     * Incorporation Date (yyyy-mm-dd)
     * @return Returns the String
     */
    @JsonGetter("IncorporationDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getIncorporationDate() {
        return incorporationDate;
    }

    /**
     * Setter for IncorporationDate.
     * Incorporation Date (yyyy-mm-dd)
     * @param incorporationDate Value for String
     */
    @JsonSetter("IncorporationDate")
    public void setIncorporationDate(String incorporationDate) {
        this.incorporationDate = incorporationDate;
    }

    /**
     * Getter for DissolutionDate.
     * Dissolution Date (yyyy-mm-dd)
     * @return Returns the String
     */
    @JsonGetter("DissolutionDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDissolutionDate() {
        return dissolutionDate;
    }

    /**
     * Setter for DissolutionDate.
     * Dissolution Date (yyyy-mm-dd)
     * @param dissolutionDate Value for String
     */
    @JsonSetter("DissolutionDate")
    public void setDissolutionDate(String dissolutionDate) {
        this.dissolutionDate = dissolutionDate;
    }

    /**
     * Getter for RegisteredOffice.
     * @return Returns the LtdBusinessLocation
     */
    @JsonGetter("RegisteredOffice")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public LtdBusinessLocation getRegisteredOffice() {
        return registeredOffice;
    }

    /**
     * Setter for RegisteredOffice.
     * @param registeredOffice Value for LtdBusinessLocation
     */
    @JsonSetter("RegisteredOffice")
    public void setRegisteredOffice(LtdBusinessLocation registeredOffice) {
        this.registeredOffice = registeredOffice;
    }

    /**
     * Getter for Currency.
     * ISO currency code
     * @return Returns the String
     */
    @JsonGetter("Currency")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCurrency() {
        return currency;
    }

    /**
     * Setter for Currency.
     * ISO currency code
     * @param currency Value for String
     */
    @JsonSetter("Currency")
    public void setCurrency(String currency) {
        this.currency = currency;
    }

    /**
     * Getter for IssuedCapital.
     * Issued capital (Figure taken from the latest Confirmation Statement - not the accounts)
     * @return Returns the Double
     */
    @JsonGetter("IssuedCapital")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getIssuedCapital() {
        return issuedCapital;
    }

    /**
     * Setter for IssuedCapital.
     * Issued capital (Figure taken from the latest Confirmation Statement - not the accounts)
     * @param issuedCapital Value for Double
     */
    @JsonSetter("IssuedCapital")
    public void setIssuedCapital(Double issuedCapital) {
        this.issuedCapital = issuedCapital;
    }

    /**
     * Getter for AsRegisteredOffice.
     * Y = Trading address identical to registered office address; N = Trading address not identical
     * to registered office address
     * @return Returns the String
     */
    @JsonGetter("AsRegisteredOffice")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAsRegisteredOffice() {
        return asRegisteredOffice;
    }

    /**
     * Setter for AsRegisteredOffice.
     * Y = Trading address identical to registered office address; N = Trading address not identical
     * to registered office address
     * @param asRegisteredOffice Value for String
     */
    @JsonSetter("AsRegisteredOffice")
    public void setAsRegisteredOffice(String asRegisteredOffice) {
        this.asRegisteredOffice = asRegisteredOffice;
    }

    /**
     * Getter for TradingTelephoneNum.
     * Limited company trading telephone number
     * @return Returns the String
     */
    @JsonGetter("TradingTelephoneNum")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTradingTelephoneNum() {
        return tradingTelephoneNum;
    }

    /**
     * Setter for TradingTelephoneNum.
     * Limited company trading telephone number
     * @param tradingTelephoneNum Value for String
     */
    @JsonSetter("TradingTelephoneNum")
    public void setTradingTelephoneNum(String tradingTelephoneNum) {
        this.tradingTelephoneNum = tradingTelephoneNum;
    }

    /**
     * Getter for TradingLocation.
     * @return Returns the LtdBusinessLocation
     */
    @JsonGetter("TradingLocation")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public LtdBusinessLocation getTradingLocation() {
        return tradingLocation;
    }

    /**
     * Setter for TradingLocation.
     * @param tradingLocation Value for LtdBusinessLocation
     */
    @JsonSetter("TradingLocation")
    public void setTradingLocation(LtdBusinessLocation tradingLocation) {
        this.tradingLocation = tradingLocation;
    }

    /**
     * Getter for PrincipalActivities.
     * Text description of the Principal Activities of the limited company
     * @return Returns the String
     */
    @JsonGetter("PrincipalActivities")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPrincipalActivities() {
        return principalActivities;
    }

    /**
     * Setter for PrincipalActivities.
     * Text description of the Principal Activities of the limited company
     * @param principalActivities Value for String
     */
    @JsonSetter("PrincipalActivities")
    public void setPrincipalActivities(String principalActivities) {
        this.principalActivities = principalActivities;
    }

    /**
     * Getter for SICInformation1980.
     * @return Returns the List of SICInfo80
     */
    @JsonGetter("SICInformation1980")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<SICInfo80> getSICInformation1980() {
        return sICInformation1980;
    }

    /**
     * Setter for SICInformation1980.
     * @param sICInformation1980 Value for List of SICInfo80
     */
    @JsonSetter("SICInformation1980")
    public void setSICInformation1980(List<SICInfo80> sICInformation1980) {
        this.sICInformation1980 = sICInformation1980;
    }

    /**
     * Getter for SICInformation1992.
     * @return Returns the List of SICInfo92
     */
    @JsonGetter("SICInformation1992")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<SICInfo92> getSICInformation1992() {
        return sICInformation1992;
    }

    /**
     * Setter for SICInformation1992.
     * @param sICInformation1992 Value for List of SICInfo92
     */
    @JsonSetter("SICInformation1992")
    public void setSICInformation1992(List<SICInfo92> sICInformation1992) {
        this.sICInformation1992 = sICInformation1992;
    }

    /**
     * Getter for PreviousNames.
     * @return Returns the PreviousNames
     */
    @JsonGetter("PreviousNames")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public PreviousNames getPreviousNames() {
        return previousNames;
    }

    /**
     * Setter for PreviousNames.
     * @param previousNames Value for PreviousNames
     */
    @JsonSetter("PreviousNames")
    public void setPreviousNames(PreviousNames previousNames) {
        this.previousNames = previousNames;
    }

    /**
     * Getter for PreviousAddresses.
     * @return Returns the PreviousAddresses
     */
    @JsonGetter("PreviousAddresses")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public PreviousAddresses getPreviousAddresses() {
        return previousAddresses;
    }

    /**
     * Setter for PreviousAddresses.
     * @param previousAddresses Value for PreviousAddresses
     */
    @JsonSetter("PreviousAddresses")
    public void setPreviousAddresses(PreviousAddresses previousAddresses) {
        this.previousAddresses = previousAddresses;
    }

    /**
     * Getter for ThomsonData.
     * @return Returns the LtdThomsonData
     */
    @JsonGetter("ThomsonData")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public LtdThomsonData getThomsonData() {
        return thomsonData;
    }

    /**
     * Setter for ThomsonData.
     * @param thomsonData Value for LtdThomsonData
     */
    @JsonSetter("ThomsonData")
    public void setThomsonData(LtdThomsonData thomsonData) {
        this.thomsonData = thomsonData;
    }

    /**
     * Getter for FilingDetails.
     * @return Returns the FilingDetails
     */
    @JsonGetter("FilingDetails")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public FilingDetails getFilingDetails() {
        return filingDetails;
    }

    /**
     * Setter for FilingDetails.
     * @param filingDetails Value for FilingDetails
     */
    @JsonSetter("FilingDetails")
    public void setFilingDetails(FilingDetails filingDetails) {
        this.filingDetails = filingDetails;
    }

    /**
     * Getter for Auditor.
     * @return Returns the Auditor
     */
    @JsonGetter("Auditor")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Auditor getAuditor() {
        return auditor;
    }

    /**
     * Setter for Auditor.
     * @param auditor Value for Auditor
     */
    @JsonSetter("Auditor")
    public void setAuditor(Auditor auditor) {
        this.auditor = auditor;
    }

    /**
     * Getter for Bank.
     * @return Returns the Bank
     */
    @JsonGetter("Bank")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Bank getBank() {
        return bank;
    }

    /**
     * Setter for Bank.
     * @param bank Value for Bank
     */
    @JsonSetter("Bank")
    public void setBank(Bank bank) {
        this.bank = bank;
    }

    /**
     * Getter for CROChanges.
     * @return Returns the CROChanges
     */
    @JsonGetter("CROChanges")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CROChanges getCROChanges() {
        return cROChanges;
    }

    /**
     * Setter for CROChanges.
     * @param cROChanges Value for CROChanges
     */
    @JsonSetter("CROChanges")
    public void setCROChanges(CROChanges cROChanges) {
        this.cROChanges = cROChanges;
    }

    /**
     * Getter for PrevSearches.
     * @return Returns the LtdPrevSearches
     */
    @JsonGetter("PrevSearches")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public LtdPrevSearches getPrevSearches() {
        return prevSearches;
    }

    /**
     * Setter for PrevSearches.
     * @param prevSearches Value for LtdPrevSearches
     */
    @JsonSetter("PrevSearches")
    public void setPrevSearches(LtdPrevSearches prevSearches) {
        this.prevSearches = prevSearches;
    }

    /**
     * Getter for CCLs.
     * @return Returns the CCLLtd
     */
    @JsonGetter("CCLs")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CCLLtd getCCLs() {
        return cCLs;
    }

    /**
     * Setter for CCLs.
     * @param cCLs Value for CCLLtd
     */
    @JsonSetter("CCLs")
    public void setCCLs(CCLLtd cCLs) {
        this.cCLs = cCLs;
    }

    /**
     * Converts this LtdIdentification into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "LtdIdentification [" + "legalStatus=" + legalStatus + ", incorporationDate="
                + incorporationDate + ", dissolutionDate=" + dissolutionDate + ", registeredOffice="
                + registeredOffice + ", currency=" + currency + ", issuedCapital=" + issuedCapital
                + ", asRegisteredOffice=" + asRegisteredOffice + ", tradingTelephoneNum="
                + tradingTelephoneNum + ", tradingLocation=" + tradingLocation
                + ", principalActivities=" + principalActivities + ", sICInformation1980="
                + sICInformation1980 + ", sICInformation1992=" + sICInformation1992
                + ", previousNames=" + previousNames + ", previousAddresses=" + previousAddresses
                + ", thomsonData=" + thomsonData + ", filingDetails=" + filingDetails + ", auditor="
                + auditor + ", bank=" + bank + ", cROChanges=" + cROChanges + ", prevSearches="
                + prevSearches + ", cCLs=" + cCLs + "]";
    }

    /**
     * Builds a new {@link LtdIdentification.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link LtdIdentification.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .legalStatus(getLegalStatus())
                .incorporationDate(getIncorporationDate())
                .dissolutionDate(getDissolutionDate())
                .registeredOffice(getRegisteredOffice())
                .currency(getCurrency())
                .issuedCapital(getIssuedCapital())
                .asRegisteredOffice(getAsRegisteredOffice())
                .tradingTelephoneNum(getTradingTelephoneNum())
                .tradingLocation(getTradingLocation())
                .principalActivities(getPrincipalActivities())
                .sICInformation1980(getSICInformation1980())
                .sICInformation1992(getSICInformation1992())
                .previousNames(getPreviousNames())
                .previousAddresses(getPreviousAddresses())
                .thomsonData(getThomsonData())
                .filingDetails(getFilingDetails())
                .auditor(getAuditor())
                .bank(getBank())
                .cROChanges(getCROChanges())
                .prevSearches(getPrevSearches())
                .cCLs(getCCLs());
        return builder;
    }

    /**
     * Class to build instances of {@link LtdIdentification}.
     */
    public static class Builder {
        private String legalStatus;
        private String incorporationDate;
        private String dissolutionDate;
        private LtdBusinessLocation registeredOffice;
        private String currency;
        private Double issuedCapital;
        private String asRegisteredOffice;
        private String tradingTelephoneNum;
        private LtdBusinessLocation tradingLocation;
        private String principalActivities;
        private List<SICInfo80> sICInformation1980;
        private List<SICInfo92> sICInformation1992;
        private PreviousNames previousNames;
        private PreviousAddresses previousAddresses;
        private LtdThomsonData thomsonData;
        private FilingDetails filingDetails;
        private Auditor auditor;
        private Bank bank;
        private CROChanges cROChanges;
        private LtdPrevSearches prevSearches;
        private CCLLtd cCLs;



        /**
         * Setter for legalStatus.
         * @param  legalStatus  String value for legalStatus.
         * @return Builder
         */
        public Builder legalStatus(String legalStatus) {
            this.legalStatus = legalStatus;
            return this;
        }

        /**
         * Setter for incorporationDate.
         * @param  incorporationDate  String value for incorporationDate.
         * @return Builder
         */
        public Builder incorporationDate(String incorporationDate) {
            this.incorporationDate = incorporationDate;
            return this;
        }

        /**
         * Setter for dissolutionDate.
         * @param  dissolutionDate  String value for dissolutionDate.
         * @return Builder
         */
        public Builder dissolutionDate(String dissolutionDate) {
            this.dissolutionDate = dissolutionDate;
            return this;
        }

        /**
         * Setter for registeredOffice.
         * @param  registeredOffice  LtdBusinessLocation value for registeredOffice.
         * @return Builder
         */
        public Builder registeredOffice(LtdBusinessLocation registeredOffice) {
            this.registeredOffice = registeredOffice;
            return this;
        }

        /**
         * Setter for currency.
         * @param  currency  String value for currency.
         * @return Builder
         */
        public Builder currency(String currency) {
            this.currency = currency;
            return this;
        }

        /**
         * Setter for issuedCapital.
         * @param  issuedCapital  Double value for issuedCapital.
         * @return Builder
         */
        public Builder issuedCapital(Double issuedCapital) {
            this.issuedCapital = issuedCapital;
            return this;
        }

        /**
         * Setter for asRegisteredOffice.
         * @param  asRegisteredOffice  String value for asRegisteredOffice.
         * @return Builder
         */
        public Builder asRegisteredOffice(String asRegisteredOffice) {
            this.asRegisteredOffice = asRegisteredOffice;
            return this;
        }

        /**
         * Setter for tradingTelephoneNum.
         * @param  tradingTelephoneNum  String value for tradingTelephoneNum.
         * @return Builder
         */
        public Builder tradingTelephoneNum(String tradingTelephoneNum) {
            this.tradingTelephoneNum = tradingTelephoneNum;
            return this;
        }

        /**
         * Setter for tradingLocation.
         * @param  tradingLocation  LtdBusinessLocation value for tradingLocation.
         * @return Builder
         */
        public Builder tradingLocation(LtdBusinessLocation tradingLocation) {
            this.tradingLocation = tradingLocation;
            return this;
        }

        /**
         * Setter for principalActivities.
         * @param  principalActivities  String value for principalActivities.
         * @return Builder
         */
        public Builder principalActivities(String principalActivities) {
            this.principalActivities = principalActivities;
            return this;
        }

        /**
         * Setter for sICInformation1980.
         * @param  sICInformation1980  List of SICInfo80 value for sICInformation1980.
         * @return Builder
         */
        public Builder sICInformation1980(List<SICInfo80> sICInformation1980) {
            this.sICInformation1980 = sICInformation1980;
            return this;
        }

        /**
         * Setter for sICInformation1992.
         * @param  sICInformation1992  List of SICInfo92 value for sICInformation1992.
         * @return Builder
         */
        public Builder sICInformation1992(List<SICInfo92> sICInformation1992) {
            this.sICInformation1992 = sICInformation1992;
            return this;
        }

        /**
         * Setter for previousNames.
         * @param  previousNames  PreviousNames value for previousNames.
         * @return Builder
         */
        public Builder previousNames(PreviousNames previousNames) {
            this.previousNames = previousNames;
            return this;
        }

        /**
         * Setter for previousAddresses.
         * @param  previousAddresses  PreviousAddresses value for previousAddresses.
         * @return Builder
         */
        public Builder previousAddresses(PreviousAddresses previousAddresses) {
            this.previousAddresses = previousAddresses;
            return this;
        }

        /**
         * Setter for thomsonData.
         * @param  thomsonData  LtdThomsonData value for thomsonData.
         * @return Builder
         */
        public Builder thomsonData(LtdThomsonData thomsonData) {
            this.thomsonData = thomsonData;
            return this;
        }

        /**
         * Setter for filingDetails.
         * @param  filingDetails  FilingDetails value for filingDetails.
         * @return Builder
         */
        public Builder filingDetails(FilingDetails filingDetails) {
            this.filingDetails = filingDetails;
            return this;
        }

        /**
         * Setter for auditor.
         * @param  auditor  Auditor value for auditor.
         * @return Builder
         */
        public Builder auditor(Auditor auditor) {
            this.auditor = auditor;
            return this;
        }

        /**
         * Setter for bank.
         * @param  bank  Bank value for bank.
         * @return Builder
         */
        public Builder bank(Bank bank) {
            this.bank = bank;
            return this;
        }

        /**
         * Setter for cROChanges.
         * @param  cROChanges  CROChanges value for cROChanges.
         * @return Builder
         */
        public Builder cROChanges(CROChanges cROChanges) {
            this.cROChanges = cROChanges;
            return this;
        }

        /**
         * Setter for prevSearches.
         * @param  prevSearches  LtdPrevSearches value for prevSearches.
         * @return Builder
         */
        public Builder prevSearches(LtdPrevSearches prevSearches) {
            this.prevSearches = prevSearches;
            return this;
        }

        /**
         * Setter for cCLs.
         * @param  cCLs  CCLLtd value for cCLs.
         * @return Builder
         */
        public Builder cCLs(CCLLtd cCLs) {
            this.cCLs = cCLs;
            return this;
        }

        /**
         * Builds a new {@link LtdIdentification} object using the set fields.
         * @return {@link LtdIdentification}
         */
        public LtdIdentification build() {
            return new LtdIdentification(legalStatus, incorporationDate, dissolutionDate,
                    registeredOffice, currency, issuedCapital, asRegisteredOffice,
                    tradingTelephoneNum, tradingLocation, principalActivities, sICInformation1980,
                    sICInformation1992, previousNames, previousAddresses, thomsonData,
                    filingDetails, auditor, bank, cROChanges, prevSearches, cCLs);
        }
    }
}
