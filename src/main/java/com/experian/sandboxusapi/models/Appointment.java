/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for Appointment type.
 */
public class Appointment {
    private String adminOrderDate;
    private List<Administrator> administrator;
    private String lodgedDate;
    private Integer numberAdministrators;
    private String publicationTown;

    /**
     * Default constructor.
     */
    public Appointment() {
    }

    /**
     * Initialization constructor.
     * @param  adminOrderDate  String value for adminOrderDate.
     * @param  administrator  List of Administrator value for administrator.
     * @param  lodgedDate  String value for lodgedDate.
     * @param  numberAdministrators  Integer value for numberAdministrators.
     * @param  publicationTown  String value for publicationTown.
     */
    public Appointment(
            String adminOrderDate,
            List<Administrator> administrator,
            String lodgedDate,
            Integer numberAdministrators,
            String publicationTown) {
        this.adminOrderDate = adminOrderDate;
        this.administrator = administrator;
        this.lodgedDate = lodgedDate;
        this.numberAdministrators = numberAdministrators;
        this.publicationTown = publicationTown;
    }

    /**
     * Getter for AdminOrderDate.
     * Administrator appointment date (yyyy-mm-dd)
     * @return Returns the String
     */
    @JsonGetter("AdminOrderDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAdminOrderDate() {
        return adminOrderDate;
    }

    /**
     * Setter for AdminOrderDate.
     * Administrator appointment date (yyyy-mm-dd)
     * @param adminOrderDate Value for String
     */
    @JsonSetter("AdminOrderDate")
    public void setAdminOrderDate(String adminOrderDate) {
        this.adminOrderDate = adminOrderDate;
    }

    /**
     * Getter for Administrator.
     * @return Returns the List of Administrator
     */
    @JsonGetter("Administrator")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Administrator> getAdministrator() {
        return administrator;
    }

    /**
     * Setter for Administrator.
     * @param administrator Value for List of Administrator
     */
    @JsonSetter("Administrator")
    public void setAdministrator(List<Administrator> administrator) {
        this.administrator = administrator;
    }

    /**
     * Getter for LodgedDate.
     * Lodged Date for the appointment of Administrators for the limited company (yyyy-mm-dd)
     * @return Returns the String
     */
    @JsonGetter("LodgedDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLodgedDate() {
        return lodgedDate;
    }

    /**
     * Setter for LodgedDate.
     * Lodged Date for the appointment of Administrators for the limited company (yyyy-mm-dd)
     * @param lodgedDate Value for String
     */
    @JsonSetter("LodgedDate")
    public void setLodgedDate(String lodgedDate) {
        this.lodgedDate = lodgedDate;
    }

    /**
     * Getter for NumberAdministrators.
     * Number of Administrators for the appointment of Administrators for the limited company (max
     * 5)
     * @return Returns the Integer
     */
    @JsonGetter("NumberAdministrators")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumberAdministrators() {
        return numberAdministrators;
    }

    /**
     * Setter for NumberAdministrators.
     * Number of Administrators for the appointment of Administrators for the limited company (max
     * 5)
     * @param numberAdministrators Value for Integer
     */
    @JsonSetter("NumberAdministrators")
    public void setNumberAdministrators(Integer numberAdministrators) {
        this.numberAdministrators = numberAdministrators;
    }

    /**
     * Getter for PublicationTown.
     * Publication Town for appointment of Administrators indicator - B = Belfast; C = Cardiff; E =
     * Edinburgh; L = London
     * @return Returns the String
     */
    @JsonGetter("PublicationTown")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPublicationTown() {
        return publicationTown;
    }

    /**
     * Setter for PublicationTown.
     * Publication Town for appointment of Administrators indicator - B = Belfast; C = Cardiff; E =
     * Edinburgh; L = London
     * @param publicationTown Value for String
     */
    @JsonSetter("PublicationTown")
    public void setPublicationTown(String publicationTown) {
        this.publicationTown = publicationTown;
    }

    /**
     * Converts this Appointment into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Appointment [" + "adminOrderDate=" + adminOrderDate + ", administrator="
                + administrator + ", lodgedDate=" + lodgedDate + ", numberAdministrators="
                + numberAdministrators + ", publicationTown=" + publicationTown + "]";
    }

    /**
     * Builds a new {@link Appointment.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Appointment.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .adminOrderDate(getAdminOrderDate())
                .administrator(getAdministrator())
                .lodgedDate(getLodgedDate())
                .numberAdministrators(getNumberAdministrators())
                .publicationTown(getPublicationTown());
        return builder;
    }

    /**
     * Class to build instances of {@link Appointment}.
     */
    public static class Builder {
        private String adminOrderDate;
        private List<Administrator> administrator;
        private String lodgedDate;
        private Integer numberAdministrators;
        private String publicationTown;



        /**
         * Setter for adminOrderDate.
         * @param  adminOrderDate  String value for adminOrderDate.
         * @return Builder
         */
        public Builder adminOrderDate(String adminOrderDate) {
            this.adminOrderDate = adminOrderDate;
            return this;
        }

        /**
         * Setter for administrator.
         * @param  administrator  List of Administrator value for administrator.
         * @return Builder
         */
        public Builder administrator(List<Administrator> administrator) {
            this.administrator = administrator;
            return this;
        }

        /**
         * Setter for lodgedDate.
         * @param  lodgedDate  String value for lodgedDate.
         * @return Builder
         */
        public Builder lodgedDate(String lodgedDate) {
            this.lodgedDate = lodgedDate;
            return this;
        }

        /**
         * Setter for numberAdministrators.
         * @param  numberAdministrators  Integer value for numberAdministrators.
         * @return Builder
         */
        public Builder numberAdministrators(Integer numberAdministrators) {
            this.numberAdministrators = numberAdministrators;
            return this;
        }

        /**
         * Setter for publicationTown.
         * @param  publicationTown  String value for publicationTown.
         * @return Builder
         */
        public Builder publicationTown(String publicationTown) {
            this.publicationTown = publicationTown;
            return this;
        }

        /**
         * Builds a new {@link Appointment} object using the set fields.
         * @return {@link Appointment}
         */
        public Appointment build() {
            return new Appointment(adminOrderDate, administrator, lodgedDate, numberAdministrators,
                    publicationTown);
        }
    }
}
