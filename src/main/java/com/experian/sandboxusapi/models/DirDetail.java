/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for DirDetail type.
 */
public class DirDetail {
    private CommDetail commercialDetail;
    private String dateOfBirth;
    private OutputDirLocationDetail location;
    private OutputNameDetail name;
    private String nationality;

    /**
     * Default constructor.
     */
    public DirDetail() {
    }

    /**
     * Initialization constructor.
     * @param  commercialDetail  CommDetail value for commercialDetail.
     * @param  dateOfBirth  String value for dateOfBirth.
     * @param  location  OutputDirLocationDetail value for location.
     * @param  name  OutputNameDetail value for name.
     * @param  nationality  String value for nationality.
     */
    public DirDetail(
            CommDetail commercialDetail,
            String dateOfBirth,
            OutputDirLocationDetail location,
            OutputNameDetail name,
            String nationality) {
        this.commercialDetail = commercialDetail;
        this.dateOfBirth = dateOfBirth;
        this.location = location;
        this.name = name;
        this.nationality = nationality;
    }

    /**
     * Getter for CommercialDetail.
     * @return Returns the CommDetail
     */
    @JsonGetter("CommercialDetail")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CommDetail getCommercialDetail() {
        return commercialDetail;
    }

    /**
     * Setter for CommercialDetail.
     * @param commercialDetail Value for CommDetail
     */
    @JsonSetter("CommercialDetail")
    public void setCommercialDetail(CommDetail commercialDetail) {
        this.commercialDetail = commercialDetail;
    }

    /**
     * Getter for DateOfBirth.
     * Date of birth (yyyy-mm-dd)
     * @return Returns the String
     */
    @JsonGetter("DateOfBirth")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDateOfBirth() {
        return dateOfBirth;
    }

    /**
     * Setter for DateOfBirth.
     * Date of birth (yyyy-mm-dd)
     * @param dateOfBirth Value for String
     */
    @JsonSetter("DateOfBirth")
    public void setDateOfBirth(String dateOfBirth) {
        this.dateOfBirth = dateOfBirth;
    }

    /**
     * Getter for Location.
     * @return Returns the OutputDirLocationDetail
     */
    @JsonGetter("Location")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public OutputDirLocationDetail getLocation() {
        return location;
    }

    /**
     * Setter for Location.
     * @param location Value for OutputDirLocationDetail
     */
    @JsonSetter("Location")
    public void setLocation(OutputDirLocationDetail location) {
        this.location = location;
    }

    /**
     * Getter for Name.
     * @return Returns the OutputNameDetail
     */
    @JsonGetter("Name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public OutputNameDetail getName() {
        return name;
    }

    /**
     * Setter for Name.
     * @param name Value for OutputNameDetail
     */
    @JsonSetter("Name")
    public void setName(OutputNameDetail name) {
        this.name = name;
    }

    /**
     * Getter for Nationality.
     * Director's nationality as textual description
     * @return Returns the String
     */
    @JsonGetter("Nationality")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getNationality() {
        return nationality;
    }

    /**
     * Setter for Nationality.
     * Director's nationality as textual description
     * @param nationality Value for String
     */
    @JsonSetter("Nationality")
    public void setNationality(String nationality) {
        this.nationality = nationality;
    }

    /**
     * Converts this DirDetail into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DirDetail [" + "commercialDetail=" + commercialDetail + ", dateOfBirth="
                + dateOfBirth + ", location=" + location + ", name=" + name + ", nationality="
                + nationality + "]";
    }

    /**
     * Builds a new {@link DirDetail.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DirDetail.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .commercialDetail(getCommercialDetail())
                .dateOfBirth(getDateOfBirth())
                .location(getLocation())
                .name(getName())
                .nationality(getNationality());
        return builder;
    }

    /**
     * Class to build instances of {@link DirDetail}.
     */
    public static class Builder {
        private CommDetail commercialDetail;
        private String dateOfBirth;
        private OutputDirLocationDetail location;
        private OutputNameDetail name;
        private String nationality;



        /**
         * Setter for commercialDetail.
         * @param  commercialDetail  CommDetail value for commercialDetail.
         * @return Builder
         */
        public Builder commercialDetail(CommDetail commercialDetail) {
            this.commercialDetail = commercialDetail;
            return this;
        }

        /**
         * Setter for dateOfBirth.
         * @param  dateOfBirth  String value for dateOfBirth.
         * @return Builder
         */
        public Builder dateOfBirth(String dateOfBirth) {
            this.dateOfBirth = dateOfBirth;
            return this;
        }

        /**
         * Setter for location.
         * @param  location  OutputDirLocationDetail value for location.
         * @return Builder
         */
        public Builder location(OutputDirLocationDetail location) {
            this.location = location;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  OutputNameDetail value for name.
         * @return Builder
         */
        public Builder name(OutputNameDetail name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for nationality.
         * @param  nationality  String value for nationality.
         * @return Builder
         */
        public Builder nationality(String nationality) {
            this.nationality = nationality;
            return this;
        }

        /**
         * Builds a new {@link DirDetail} object using the set fields.
         * @return {@link DirDetail}
         */
        public DirDetail build() {
            return new DirDetail(commercialDetail, dateOfBirth, location, name, nationality);
        }
    }
}
