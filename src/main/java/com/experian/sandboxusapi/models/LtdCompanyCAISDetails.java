/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for LtdCompanyCAISDetails type.
 */
public class LtdCompanyCAISDetails {
    private String accountState;
    private String accountStatus12;
    private String accountType;
    private String agreemtNum;
    private String caisLastUpdate;
    private String companyType;
    private String currentBalance;
    private String defaultBalance;
    private String defaultDate;
    private Integer monthsData;
    private String settlementDate;
    private Integer status1To2;
    private Integer status3To9;
    private String sourceCode;
    private String accountNumber;
    private String primaryAccountIndicator;
    private String repayPeriod;
    private String balanceType;
    private String previousStatementBalance;
    private String previousStatementIndicator;
    private String paymentFrequency;
    private Integer paymentAmount;
    private String paymentIndicator;
    private String paymentCode;
    private String paymentType;
    private Integer creditLimit;
    private String creditTurnover;
    private Integer numberCashAdvances;
    private String promotionActivity;
    private String rejection;
    private String mortgageFlag;
    private Integer valueCashAdvances;
    private String flagSetting;
    private String bestCAISStatus;
    private String accountStartDate;
    private String worstCurrentStatus;
    private String worstHistoricalStatus;
    private String worstStatus;
    private String collectionDate;
    private String ownDataFlag;
    private String airtime;
    private String noticeOfCorrectionRef;
    private String businessName;
    private String additionalTradeStyle;
    private String vATNumber;
    private String sICCode;
    private String sICDescription1992;
    private String nameChange;
    private LtdBusinessLocation location;
    private String businessTelNum;
    private String businessAddressType;
    private String bankSortCode;
    private String contactName;
    private String contactJob;
    private Integer monthlyPayment;
    private String dateLastStatus;
    private String dateFlagChange;
    private String debenture;
    private String dateDebenture;
    private Integer previousCreditLimit;
    private String dateCreditLimitChange;
    private String portfolioName;
    private Integer yearBusinessStart;
    private Integer numberCreditCard;
    private Integer previousRejection1;
    private Integer previousRejection2;
    private String dateContactChange;
    private String contactTel;
    private String parentRegNum;
    private String parentTel;
    private String parentVATNum;
    private String dateBusinessInfoChange;
    private String dateBusinessNameAddressChange;
    private String dateArrangeEnd;
    private String dateQueryEnd;
    private String dateClaimEnd;
    private String previousBusinessName;
    private String parentBusinessName;
    private LtdBusinessLocation parentLocation;
    private LtdBusinessLocation previousLocation;
    private String businessWebsite;
    private String contactEmail;
    private Integer currentDirectors;
    private List<CommercialCAISDirector> commercialCAISDirector;

    /**
     * Default constructor.
     */
    public LtdCompanyCAISDetails() {
    }

    /**
     * Initialization constructor.
     * @param  accountState  String value for accountState.
     * @param  accountStatus12  String value for accountStatus12.
     * @param  accountType  String value for accountType.
     * @param  agreemtNum  String value for agreemtNum.
     * @param  caisLastUpdate  String value for caisLastUpdate.
     * @param  companyType  String value for companyType.
     * @param  currentBalance  String value for currentBalance.
     * @param  defaultBalance  String value for defaultBalance.
     * @param  defaultDate  String value for defaultDate.
     * @param  monthsData  Integer value for monthsData.
     * @param  settlementDate  String value for settlementDate.
     * @param  status1To2  Integer value for status1To2.
     * @param  status3To9  Integer value for status3To9.
     * @param  sourceCode  String value for sourceCode.
     * @param  accountNumber  String value for accountNumber.
     * @param  primaryAccountIndicator  String value for primaryAccountIndicator.
     * @param  repayPeriod  String value for repayPeriod.
     * @param  balanceType  String value for balanceType.
     * @param  previousStatementBalance  String value for previousStatementBalance.
     * @param  previousStatementIndicator  String value for previousStatementIndicator.
     * @param  paymentFrequency  String value for paymentFrequency.
     * @param  paymentAmount  Integer value for paymentAmount.
     * @param  paymentIndicator  String value for paymentIndicator.
     * @param  paymentCode  String value for paymentCode.
     * @param  paymentType  String value for paymentType.
     * @param  creditLimit  Integer value for creditLimit.
     * @param  creditTurnover  String value for creditTurnover.
     * @param  numberCashAdvances  Integer value for numberCashAdvances.
     * @param  promotionActivity  String value for promotionActivity.
     * @param  rejection  String value for rejection.
     * @param  mortgageFlag  String value for mortgageFlag.
     * @param  valueCashAdvances  Integer value for valueCashAdvances.
     * @param  flagSetting  String value for flagSetting.
     * @param  bestCAISStatus  String value for bestCAISStatus.
     * @param  accountStartDate  String value for accountStartDate.
     * @param  worstCurrentStatus  String value for worstCurrentStatus.
     * @param  worstHistoricalStatus  String value for worstHistoricalStatus.
     * @param  worstStatus  String value for worstStatus.
     * @param  collectionDate  String value for collectionDate.
     * @param  ownDataFlag  String value for ownDataFlag.
     * @param  airtime  String value for airtime.
     * @param  noticeOfCorrectionRef  String value for noticeOfCorrectionRef.
     * @param  businessName  String value for businessName.
     * @param  additionalTradeStyle  String value for additionalTradeStyle.
     * @param  vATNumber  String value for vATNumber.
     * @param  sICCode  String value for sICCode.
     * @param  sICDescription1992  String value for sICDescription1992.
     * @param  nameChange  String value for nameChange.
     * @param  location  LtdBusinessLocation value for location.
     * @param  businessTelNum  String value for businessTelNum.
     * @param  businessAddressType  String value for businessAddressType.
     * @param  bankSortCode  String value for bankSortCode.
     * @param  contactName  String value for contactName.
     * @param  contactJob  String value for contactJob.
     * @param  monthlyPayment  Integer value for monthlyPayment.
     * @param  dateLastStatus  String value for dateLastStatus.
     * @param  dateFlagChange  String value for dateFlagChange.
     * @param  debenture  String value for debenture.
     * @param  dateDebenture  String value for dateDebenture.
     * @param  previousCreditLimit  Integer value for previousCreditLimit.
     * @param  dateCreditLimitChange  String value for dateCreditLimitChange.
     * @param  portfolioName  String value for portfolioName.
     * @param  yearBusinessStart  Integer value for yearBusinessStart.
     * @param  numberCreditCard  Integer value for numberCreditCard.
     * @param  previousRejection1  Integer value for previousRejection1.
     * @param  previousRejection2  Integer value for previousRejection2.
     * @param  dateContactChange  String value for dateContactChange.
     * @param  contactTel  String value for contactTel.
     * @param  parentRegNum  String value for parentRegNum.
     * @param  parentTel  String value for parentTel.
     * @param  parentVATNum  String value for parentVATNum.
     * @param  dateBusinessInfoChange  String value for dateBusinessInfoChange.
     * @param  dateBusinessNameAddressChange  String value for dateBusinessNameAddressChange.
     * @param  dateArrangeEnd  String value for dateArrangeEnd.
     * @param  dateQueryEnd  String value for dateQueryEnd.
     * @param  dateClaimEnd  String value for dateClaimEnd.
     * @param  previousBusinessName  String value for previousBusinessName.
     * @param  parentBusinessName  String value for parentBusinessName.
     * @param  parentLocation  LtdBusinessLocation value for parentLocation.
     * @param  previousLocation  LtdBusinessLocation value for previousLocation.
     * @param  businessWebsite  String value for businessWebsite.
     * @param  contactEmail  String value for contactEmail.
     * @param  currentDirectors  Integer value for currentDirectors.
     * @param  commercialCAISDirector  List of CommercialCAISDirector value for
     *         commercialCAISDirector.
     */
    public LtdCompanyCAISDetails(
            String accountState,
            String accountStatus12,
            String accountType,
            String agreemtNum,
            String caisLastUpdate,
            String companyType,
            String currentBalance,
            String defaultBalance,
            String defaultDate,
            Integer monthsData,
            String settlementDate,
            Integer status1To2,
            Integer status3To9,
            String sourceCode,
            String accountNumber,
            String primaryAccountIndicator,
            String repayPeriod,
            String balanceType,
            String previousStatementBalance,
            String previousStatementIndicator,
            String paymentFrequency,
            Integer paymentAmount,
            String paymentIndicator,
            String paymentCode,
            String paymentType,
            Integer creditLimit,
            String creditTurnover,
            Integer numberCashAdvances,
            String promotionActivity,
            String rejection,
            String mortgageFlag,
            Integer valueCashAdvances,
            String flagSetting,
            String bestCAISStatus,
            String accountStartDate,
            String worstCurrentStatus,
            String worstHistoricalStatus,
            String worstStatus,
            String collectionDate,
            String ownDataFlag,
            String airtime,
            String noticeOfCorrectionRef,
            String businessName,
            String additionalTradeStyle,
            String vATNumber,
            String sICCode,
            String sICDescription1992,
            String nameChange,
            LtdBusinessLocation location,
            String businessTelNum,
            String businessAddressType,
            String bankSortCode,
            String contactName,
            String contactJob,
            Integer monthlyPayment,
            String dateLastStatus,
            String dateFlagChange,
            String debenture,
            String dateDebenture,
            Integer previousCreditLimit,
            String dateCreditLimitChange,
            String portfolioName,
            Integer yearBusinessStart,
            Integer numberCreditCard,
            Integer previousRejection1,
            Integer previousRejection2,
            String dateContactChange,
            String contactTel,
            String parentRegNum,
            String parentTel,
            String parentVATNum,
            String dateBusinessInfoChange,
            String dateBusinessNameAddressChange,
            String dateArrangeEnd,
            String dateQueryEnd,
            String dateClaimEnd,
            String previousBusinessName,
            String parentBusinessName,
            LtdBusinessLocation parentLocation,
            LtdBusinessLocation previousLocation,
            String businessWebsite,
            String contactEmail,
            Integer currentDirectors,
            List<CommercialCAISDirector> commercialCAISDirector) {
        this.accountState = accountState;
        this.accountStatus12 = accountStatus12;
        this.accountType = accountType;
        this.agreemtNum = agreemtNum;
        this.caisLastUpdate = caisLastUpdate;
        this.companyType = companyType;
        this.currentBalance = currentBalance;
        this.defaultBalance = defaultBalance;
        this.defaultDate = defaultDate;
        this.monthsData = monthsData;
        this.settlementDate = settlementDate;
        this.status1To2 = status1To2;
        this.status3To9 = status3To9;
        this.sourceCode = sourceCode;
        this.accountNumber = accountNumber;
        this.primaryAccountIndicator = primaryAccountIndicator;
        this.repayPeriod = repayPeriod;
        this.balanceType = balanceType;
        this.previousStatementBalance = previousStatementBalance;
        this.previousStatementIndicator = previousStatementIndicator;
        this.paymentFrequency = paymentFrequency;
        this.paymentAmount = paymentAmount;
        this.paymentIndicator = paymentIndicator;
        this.paymentCode = paymentCode;
        this.paymentType = paymentType;
        this.creditLimit = creditLimit;
        this.creditTurnover = creditTurnover;
        this.numberCashAdvances = numberCashAdvances;
        this.promotionActivity = promotionActivity;
        this.rejection = rejection;
        this.mortgageFlag = mortgageFlag;
        this.valueCashAdvances = valueCashAdvances;
        this.flagSetting = flagSetting;
        this.bestCAISStatus = bestCAISStatus;
        this.accountStartDate = accountStartDate;
        this.worstCurrentStatus = worstCurrentStatus;
        this.worstHistoricalStatus = worstHistoricalStatus;
        this.worstStatus = worstStatus;
        this.collectionDate = collectionDate;
        this.ownDataFlag = ownDataFlag;
        this.airtime = airtime;
        this.noticeOfCorrectionRef = noticeOfCorrectionRef;
        this.businessName = businessName;
        this.additionalTradeStyle = additionalTradeStyle;
        this.vATNumber = vATNumber;
        this.sICCode = sICCode;
        this.sICDescription1992 = sICDescription1992;
        this.nameChange = nameChange;
        this.location = location;
        this.businessTelNum = businessTelNum;
        this.businessAddressType = businessAddressType;
        this.bankSortCode = bankSortCode;
        this.contactName = contactName;
        this.contactJob = contactJob;
        this.monthlyPayment = monthlyPayment;
        this.dateLastStatus = dateLastStatus;
        this.dateFlagChange = dateFlagChange;
        this.debenture = debenture;
        this.dateDebenture = dateDebenture;
        this.previousCreditLimit = previousCreditLimit;
        this.dateCreditLimitChange = dateCreditLimitChange;
        this.portfolioName = portfolioName;
        this.yearBusinessStart = yearBusinessStart;
        this.numberCreditCard = numberCreditCard;
        this.previousRejection1 = previousRejection1;
        this.previousRejection2 = previousRejection2;
        this.dateContactChange = dateContactChange;
        this.contactTel = contactTel;
        this.parentRegNum = parentRegNum;
        this.parentTel = parentTel;
        this.parentVATNum = parentVATNum;
        this.dateBusinessInfoChange = dateBusinessInfoChange;
        this.dateBusinessNameAddressChange = dateBusinessNameAddressChange;
        this.dateArrangeEnd = dateArrangeEnd;
        this.dateQueryEnd = dateQueryEnd;
        this.dateClaimEnd = dateClaimEnd;
        this.previousBusinessName = previousBusinessName;
        this.parentBusinessName = parentBusinessName;
        this.parentLocation = parentLocation;
        this.previousLocation = previousLocation;
        this.businessWebsite = businessWebsite;
        this.contactEmail = contactEmail;
        this.currentDirectors = currentDirectors;
        this.commercialCAISDirector = commercialCAISDirector;
    }

    /**
     * Getter for AccountState.
     * Account state. A = Active; D = Defaulted; S = Settled
     * @return Returns the String
     */
    @JsonGetter("AccountState")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountState() {
        return accountState;
    }

    /**
     * Setter for AccountState.
     * Account state. A = Active; D = Defaulted; S = Settled
     * @param accountState Value for String
     */
    @JsonSetter("AccountState")
    public void setAccountState(String accountState) {
        this.accountState = accountState;
    }

    /**
     * Getter for AccountStatus12.
     * Account status (Last 12 account statuses)
     * @return Returns the String
     */
    @JsonGetter("AccountStatus12")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountStatus12() {
        return accountStatus12;
    }

    /**
     * Setter for AccountStatus12.
     * Account status (Last 12 account statuses)
     * @param accountStatus12 Value for String
     */
    @JsonSetter("AccountStatus12")
    public void setAccountStatus12(String accountStatus12) {
        this.accountStatus12 = accountStatus12;
    }

    /**
     * Getter for AccountType.
     * Account type. 0 = Bank. These accounts are normally defaults but can cover any type of
     * account provided by a bank where the product can no longer be identified; 1 = Hire purchase
     * (including Lease Purchase)/ Conditional sale. An account where the merchandise remains the
     * property of the lender until all repayments are completed; 2 = Unsecured loan (personal loans
     * etc.). An account covering the borrowing of a fixed amount which is not secured; 3 =
     * Mortgage. A loan for the purchase of a property that is secured by a mortgage deed until the
     * final payment is made; 4 = Budget (revolving account). A provision of an account or an
     * agreement for the purchase of goods up to an agreed credit limit. A revolving account may
     * involve numerous drawdowns and repayments of a percentage of the balance, whereas the budget
     * accounts credit facility is repaid by constant regular amounts; 5 = Credit card/Store card.
     * The customers are allowed to spend up to an agreed credit limit and repayments are a minimal
     * value or a percentage of the balance outstanding; 6 = Charge card. Spending is allowed up to
     * a credit limit but full repayment is expected against the monthly statement; 7 = Rental (TV,
     * brown and white goods). Where the merchandise always remains the property of the
     * lender/lessor. The customer makes payments for the use of these goods; 8 = Mail Order. For
     * all types of mail order portfolios; 12 = CML member. Possession order; 13 = CML member .
     * Voluntary surrender; 14 = CML member. Arrears move; 15 = Current accounts . For all
     * portfolios operating along the lines of current accounts; 16 = Secured loan or Second
     * mortgage. A loan secured against an asset or property but the security ranks after the prime
     * mortgage above on a second mortgage; 17 = Credit sale fixed term. Title to the goods passes
     * to the customer on signing the agreement; 18 = Communications . For use by mobile phone,
     * cable or landline communication service providers; 19 = Fixed term deferred payment. `Buy now
     * pay later` types of arrangements. The conditions are similar to HP and credit sale except
     * that the first payment is deferred for an agreed period of time; 20 = Variable subscription.
     * Variable rate HP where the monthly payments can vary depending on base rate adjustments; 21 =
     * Utility. This category includes gas, water and electricity portfolios but not communications;
     * 22 = Finance Lease. Where the rental covers the total amount of the asset plus charges, i.e.
     * the lessor is not at risk; 23 = Operating Lease. The lessee's rentals do not cover more than
     * 90% of the costs of the goods and charges i.e. the lessor is taking part of the risk; 24 =
     * Unpresentable cheques. To be used by cheque guarantee companies for a bounced cheque; 25 =
     * Flexible Mortgages. An account that is secured by a mortgage deed until the final payment is
     * made but the account has flexible terms or elements of multiple products i.e. contains a
     * current account included in the main mortgage account; 26 = Consolidated Debt. This category
     * should be used where a CAIS member transfers multiple accounts into one collection account
     * for the purposes of debt recovery. This process is referred to as 'consolidating debt'; 27 =
     * Primary Lease. Where the rental covers the total amount of the asset plus charges, i.e. the
     * lessor is not at risk; 28 = Secondary Lease. Where the lessee continues to lease the goods at
     * an annual peppercorn rental; 29 = Balloon Rental. Same as Rental but with an amount due in
     * lump sum; 30 = Dealer buy-back. Where the dealer/supplier has agreed to repurchase the goods
     * at a pre-determined amount, normally at the completion of the leasing period; 31 = Fixed Term
     * Account. An account when the rate of interest and term is agreed at the opening of the
     * account for the duration of the agreement; 32 = Variable Term Account. An account when the
     * rate of interest is subject to change and the term of the agreement may or may not be fixed
     * for the duration of the agreement; 34 = Flexi Rate Credit Card. The ability to make
     * overpayments and underpayments, revolving credit facility which may or may not be linked to a
     * customers' current account; 35 = Merchant Account. An account that allows businesses to
     * accept payments by payment cards, typically debit or credit cards. A merchant account is
     * established under an agreement between a merchant and a merchant acquirer for the settlement
     * of payment card transactions; 61 = Home Credit. Specifically to be used by those lenders who
     * have actively offer home based credit through e.g. on a door to door basis.  Typically
     * payment is made weekly and in cash to an agent and is collected from the customers address;
     * 71 = Contract Hire. Contract hire is a form of operating lease and it is often used for
     * vehicles. The leasing company undertakes some responsibility for the management and
     * maintenance of the vehicles. Services can include regular maintenance and repair costs,
     * replacement of tyres and batteries, providing replacement vehicles, roadside assistance and
     * recovery services and payment of the vehicle licences
     * @return Returns the String
     */
    @JsonGetter("AccountType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountType() {
        return accountType;
    }

    /**
     * Setter for AccountType.
     * Account type. 0 = Bank. These accounts are normally defaults but can cover any type of
     * account provided by a bank where the product can no longer be identified; 1 = Hire purchase
     * (including Lease Purchase)/ Conditional sale. An account where the merchandise remains the
     * property of the lender until all repayments are completed; 2 = Unsecured loan (personal loans
     * etc.). An account covering the borrowing of a fixed amount which is not secured; 3 =
     * Mortgage. A loan for the purchase of a property that is secured by a mortgage deed until the
     * final payment is made; 4 = Budget (revolving account). A provision of an account or an
     * agreement for the purchase of goods up to an agreed credit limit. A revolving account may
     * involve numerous drawdowns and repayments of a percentage of the balance, whereas the budget
     * accounts credit facility is repaid by constant regular amounts; 5 = Credit card/Store card.
     * The customers are allowed to spend up to an agreed credit limit and repayments are a minimal
     * value or a percentage of the balance outstanding; 6 = Charge card. Spending is allowed up to
     * a credit limit but full repayment is expected against the monthly statement; 7 = Rental (TV,
     * brown and white goods). Where the merchandise always remains the property of the
     * lender/lessor. The customer makes payments for the use of these goods; 8 = Mail Order. For
     * all types of mail order portfolios; 12 = CML member. Possession order; 13 = CML member .
     * Voluntary surrender; 14 = CML member. Arrears move; 15 = Current accounts . For all
     * portfolios operating along the lines of current accounts; 16 = Secured loan or Second
     * mortgage. A loan secured against an asset or property but the security ranks after the prime
     * mortgage above on a second mortgage; 17 = Credit sale fixed term. Title to the goods passes
     * to the customer on signing the agreement; 18 = Communications . For use by mobile phone,
     * cable or landline communication service providers; 19 = Fixed term deferred payment. `Buy now
     * pay later` types of arrangements. The conditions are similar to HP and credit sale except
     * that the first payment is deferred for an agreed period of time; 20 = Variable subscription.
     * Variable rate HP where the monthly payments can vary depending on base rate adjustments; 21 =
     * Utility. This category includes gas, water and electricity portfolios but not communications;
     * 22 = Finance Lease. Where the rental covers the total amount of the asset plus charges, i.e.
     * the lessor is not at risk; 23 = Operating Lease. The lessee's rentals do not cover more than
     * 90% of the costs of the goods and charges i.e. the lessor is taking part of the risk; 24 =
     * Unpresentable cheques. To be used by cheque guarantee companies for a bounced cheque; 25 =
     * Flexible Mortgages. An account that is secured by a mortgage deed until the final payment is
     * made but the account has flexible terms or elements of multiple products i.e. contains a
     * current account included in the main mortgage account; 26 = Consolidated Debt. This category
     * should be used where a CAIS member transfers multiple accounts into one collection account
     * for the purposes of debt recovery. This process is referred to as 'consolidating debt'; 27 =
     * Primary Lease. Where the rental covers the total amount of the asset plus charges, i.e. the
     * lessor is not at risk; 28 = Secondary Lease. Where the lessee continues to lease the goods at
     * an annual peppercorn rental; 29 = Balloon Rental. Same as Rental but with an amount due in
     * lump sum; 30 = Dealer buy-back. Where the dealer/supplier has agreed to repurchase the goods
     * at a pre-determined amount, normally at the completion of the leasing period; 31 = Fixed Term
     * Account. An account when the rate of interest and term is agreed at the opening of the
     * account for the duration of the agreement; 32 = Variable Term Account. An account when the
     * rate of interest is subject to change and the term of the agreement may or may not be fixed
     * for the duration of the agreement; 34 = Flexi Rate Credit Card. The ability to make
     * overpayments and underpayments, revolving credit facility which may or may not be linked to a
     * customers' current account; 35 = Merchant Account. An account that allows businesses to
     * accept payments by payment cards, typically debit or credit cards. A merchant account is
     * established under an agreement between a merchant and a merchant acquirer for the settlement
     * of payment card transactions; 61 = Home Credit. Specifically to be used by those lenders who
     * have actively offer home based credit through e.g. on a door to door basis.  Typically
     * payment is made weekly and in cash to an agent and is collected from the customers address;
     * 71 = Contract Hire. Contract hire is a form of operating lease and it is often used for
     * vehicles. The leasing company undertakes some responsibility for the management and
     * maintenance of the vehicles. Services can include regular maintenance and repair costs,
     * replacement of tyres and batteries, providing replacement vehicles, roadside assistance and
     * recovery services and payment of the vehicle licences
     * @param accountType Value for String
     */
    @JsonSetter("AccountType")
    public void setAccountType(String accountType) {
        this.accountType = accountType;
    }

    /**
     * Getter for AgreemtNum.
     * Agreement number
     * @return Returns the String
     */
    @JsonGetter("AgreemtNum")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAgreemtNum() {
        return agreemtNum;
    }

    /**
     * Setter for AgreemtNum.
     * Agreement number
     * @param agreemtNum Value for String
     */
    @JsonSetter("AgreemtNum")
    public void setAgreemtNum(String agreemtNum) {
        this.agreemtNum = agreemtNum;
    }

    /**
     * Getter for CaisLastUpdate.
     * @return Returns the String
     */
    @JsonGetter("CaisLastUpdate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCaisLastUpdate() {
        return caisLastUpdate;
    }

    /**
     * Setter for CaisLastUpdate.
     * @param caisLastUpdate Value for String
     */
    @JsonSetter("CaisLastUpdate")
    public void setCaisLastUpdate(String caisLastUpdate) {
        this.caisLastUpdate = caisLastUpdate;
    }

    /**
     * Getter for CompanyType.
     * Company type. 0 = Other; 1 = FLA Member; 2 = CCTA Member; 3 = RETRA Member; 4 = CCAUK Member;
     * 5 = LPFA Member; 6 = Bank; 7 = Building Society; 8 = Clothing; 9 = Canvassing Sales; 10 =
     * Credit Card; 11 = Department Store; 12 = Electric Sale/Rent; 13 = Enquiry Agent; 14 = Fuel
     * Supplies; 15 = Home Improvements; 16 = House Furnisher; 17 = Insurance; 18 = Mail Order; 19 =
     * Personal Loans; 20 = Property Sales; 21 = Property Repairs; 22 = Public Utility; 23 =
     * Professional Services; 24 = Unclassified; 25 = Publishers; 26 = Hotel; 27 = Leasing; 28 = Car
     * Hire; 29 = CIH Member; 30 = Commercial Enquiry; 31 = Finance Company; 32 = Retail General; 33
     * = Communications; 34 = Broker; 35 = Home Credit; 36 = Student Loans; 37 = Police Service; 38
     * = Housing Association; 39 = The Cabinet Office; 40 = HM Treasury; 41 = DCA; 42 = Department
     * of Health; 43 = Credit Union; 44 = Education; 45 = Internet Service Provider; 46 = Home
     * Office; 47 = Department for Transport; 48 = Central Government Agency (Other); 49 = Ministry
     * of Defence; 50 = DWP; 51 = NDBP; 52 = Chamber of Commerce; 53 = Local and Regional
     * Government; 54 = Factoring and Discounting; 55 = Merchant Acquirer
     * @return Returns the String
     */
    @JsonGetter("CompanyType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCompanyType() {
        return companyType;
    }

    /**
     * Setter for CompanyType.
     * Company type. 0 = Other; 1 = FLA Member; 2 = CCTA Member; 3 = RETRA Member; 4 = CCAUK Member;
     * 5 = LPFA Member; 6 = Bank; 7 = Building Society; 8 = Clothing; 9 = Canvassing Sales; 10 =
     * Credit Card; 11 = Department Store; 12 = Electric Sale/Rent; 13 = Enquiry Agent; 14 = Fuel
     * Supplies; 15 = Home Improvements; 16 = House Furnisher; 17 = Insurance; 18 = Mail Order; 19 =
     * Personal Loans; 20 = Property Sales; 21 = Property Repairs; 22 = Public Utility; 23 =
     * Professional Services; 24 = Unclassified; 25 = Publishers; 26 = Hotel; 27 = Leasing; 28 = Car
     * Hire; 29 = CIH Member; 30 = Commercial Enquiry; 31 = Finance Company; 32 = Retail General; 33
     * = Communications; 34 = Broker; 35 = Home Credit; 36 = Student Loans; 37 = Police Service; 38
     * = Housing Association; 39 = The Cabinet Office; 40 = HM Treasury; 41 = DCA; 42 = Department
     * of Health; 43 = Credit Union; 44 = Education; 45 = Internet Service Provider; 46 = Home
     * Office; 47 = Department for Transport; 48 = Central Government Agency (Other); 49 = Ministry
     * of Defence; 50 = DWP; 51 = NDBP; 52 = Chamber of Commerce; 53 = Local and Regional
     * Government; 54 = Factoring and Discounting; 55 = Merchant Acquirer
     * @param companyType Value for String
     */
    @JsonSetter("CompanyType")
    public void setCompanyType(String companyType) {
        this.companyType = companyType;
    }

    /**
     * Getter for CurrentBalance.
     * Current balance
     * @return Returns the String
     */
    @JsonGetter("CurrentBalance")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCurrentBalance() {
        return currentBalance;
    }

    /**
     * Setter for CurrentBalance.
     * Current balance
     * @param currentBalance Value for String
     */
    @JsonSetter("CurrentBalance")
    public void setCurrentBalance(String currentBalance) {
        this.currentBalance = currentBalance;
    }

    /**
     * Getter for DefaultBalance.
     * Default balance
     * @return Returns the String
     */
    @JsonGetter("DefaultBalance")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDefaultBalance() {
        return defaultBalance;
    }

    /**
     * Setter for DefaultBalance.
     * Default balance
     * @param defaultBalance Value for String
     */
    @JsonSetter("DefaultBalance")
    public void setDefaultBalance(String defaultBalance) {
        this.defaultBalance = defaultBalance;
    }

    /**
     * Getter for DefaultDate.
     * @return Returns the String
     */
    @JsonGetter("DefaultDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDefaultDate() {
        return defaultDate;
    }

    /**
     * Setter for DefaultDate.
     * @param defaultDate Value for String
     */
    @JsonSetter("DefaultDate")
    public void setDefaultDate(String defaultDate) {
        this.defaultDate = defaultDate;
    }

    /**
     * Getter for MonthsData.
     * Months data
     * @return Returns the Integer
     */
    @JsonGetter("MonthsData")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getMonthsData() {
        return monthsData;
    }

    /**
     * Setter for MonthsData.
     * Months data
     * @param monthsData Value for Integer
     */
    @JsonSetter("MonthsData")
    public void setMonthsData(Integer monthsData) {
        this.monthsData = monthsData;
    }

    /**
     * Getter for SettlementDate.
     * @return Returns the String
     */
    @JsonGetter("SettlementDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSettlementDate() {
        return settlementDate;
    }

    /**
     * Setter for SettlementDate.
     * @param settlementDate Value for String
     */
    @JsonSetter("SettlementDate")
    public void setSettlementDate(String settlementDate) {
        this.settlementDate = settlementDate;
    }

    /**
     * Getter for Status1To2.
     * Status 1-2
     * @return Returns the Integer
     */
    @JsonGetter("Status1To2")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getStatus1To2() {
        return status1To2;
    }

    /**
     * Setter for Status1To2.
     * Status 1-2
     * @param status1To2 Value for Integer
     */
    @JsonSetter("Status1To2")
    public void setStatus1To2(Integer status1To2) {
        this.status1To2 = status1To2;
    }

    /**
     * Getter for Status3To9.
     * Status 3-9
     * @return Returns the Integer
     */
    @JsonGetter("Status3To9")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getStatus3To9() {
        return status3To9;
    }

    /**
     * Setter for Status3To9.
     * Status 3-9
     * @param status3To9 Value for Integer
     */
    @JsonSetter("Status3To9")
    public void setStatus3To9(Integer status3To9) {
        this.status3To9 = status3To9;
    }

    /**
     * Getter for SourceCode.
     * The Source Code should be defined as numeric 4. Defaults to '0000' if CAIS record is not own
     * CAIS record, otherwise value is as provided by the Source Code Owner (own data)
     * @return Returns the String
     */
    @JsonGetter("SourceCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSourceCode() {
        return sourceCode;
    }

    /**
     * Setter for SourceCode.
     * The Source Code should be defined as numeric 4. Defaults to '0000' if CAIS record is not own
     * CAIS record, otherwise value is as provided by the Source Code Owner (own data)
     * @param sourceCode Value for String
     */
    @JsonSetter("SourceCode")
    public void setSourceCode(String sourceCode) {
        this.sourceCode = sourceCode;
    }

    /**
     * Getter for AccountNumber.
     * The Account Number which should be defined as 20 bytes Character. Default to an Experian
     * reference value for not own CAIS records, otherwise the account number is shown as provided
     * by the Source Code Owner (own data)
     * @return Returns the String
     */
    @JsonGetter("AccountNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountNumber() {
        return accountNumber;
    }

    /**
     * Setter for AccountNumber.
     * The Account Number which should be defined as 20 bytes Character. Default to an Experian
     * reference value for not own CAIS records, otherwise the account number is shown as provided
     * by the Source Code Owner (own data)
     * @param accountNumber Value for String
     */
    @JsonSetter("AccountNumber")
    public void setAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;
    }

    /**
     * Getter for PrimaryAccountIndicator.
     * Primary Account Indicator Flag. “all data” Y Yes N or ' ' No Only available to Current
     * Account User Group within the CAIS data sharing program.
     * @return Returns the String
     */
    @JsonGetter("PrimaryAccountIndicator")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPrimaryAccountIndicator() {
        return primaryAccountIndicator;
    }

    /**
     * Setter for PrimaryAccountIndicator.
     * Primary Account Indicator Flag. “all data” Y Yes N or ' ' No Only available to Current
     * Account User Group within the CAIS data sharing program.
     * @param primaryAccountIndicator Value for String
     */
    @JsonSetter("PrimaryAccountIndicator")
    public void setPrimaryAccountIndicator(String primaryAccountIndicator) {
        this.primaryAccountIndicator = primaryAccountIndicator;
    }

    /**
     * Getter for RepayPeriod.
     * Repayment Period in Months for the CAIS record “all data”
     * @return Returns the String
     */
    @JsonGetter("RepayPeriod")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getRepayPeriod() {
        return repayPeriod;
    }

    /**
     * Setter for RepayPeriod.
     * Repayment Period in Months for the CAIS record “all data”
     * @param repayPeriod Value for String
     */
    @JsonSetter("RepayPeriod")
    public void setRepayPeriod(String repayPeriod) {
        this.repayPeriod = repayPeriod;
    }

    /**
     * Getter for BalanceType.
     * Type of balance. “all data” A - Average Balance in month P - Balance at time ' ' – Unknown
     * (default) Only available to Current Account User Group within the CAIS data sharing program.
     * @return Returns the String
     */
    @JsonGetter("BalanceType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBalanceType() {
        return balanceType;
    }

    /**
     * Setter for BalanceType.
     * Type of balance. “all data” A - Average Balance in month P - Balance at time ' ' – Unknown
     * (default) Only available to Current Account User Group within the CAIS data sharing program.
     * @param balanceType Value for String
     */
    @JsonSetter("BalanceType")
    public void setBalanceType(String balanceType) {
        this.balanceType = balanceType;
    }

    /**
     * Getter for PreviousStatementBalance.
     * The previous statement balance for the CAIS record Credit Card type accounts only
     * @return Returns the String
     */
    @JsonGetter("PreviousStatementBalance")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPreviousStatementBalance() {
        return previousStatementBalance;
    }

    /**
     * Setter for PreviousStatementBalance.
     * The previous statement balance for the CAIS record Credit Card type accounts only
     * @param previousStatementBalance Value for String
     */
    @JsonSetter("PreviousStatementBalance")
    public void setPreviousStatementBalance(String previousStatementBalance) {
        this.previousStatementBalance = previousStatementBalance;
    }

    /**
     * Getter for PreviousStatementIndicator.
     * Credit Card type accounts only “-“ to denote credit or “ “ to denote debt on Previous
     * Statement Balance
     * @return Returns the String
     */
    @JsonGetter("PreviousStatementIndicator")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPreviousStatementIndicator() {
        return previousStatementIndicator;
    }

    /**
     * Setter for PreviousStatementIndicator.
     * Credit Card type accounts only “-“ to denote credit or “ “ to denote debt on Previous
     * Statement Balance
     * @param previousStatementIndicator Value for String
     */
    @JsonSetter("PreviousStatementIndicator")
    public void setPreviousStatementIndicator(String previousStatementIndicator) {
        this.previousStatementIndicator = previousStatementIndicator;
    }

    /**
     * Getter for PaymentFrequency.
     * Payment Frequency Indicator. “all data” W= Weekly F = Fortnightly M = Monthly Q = Quarterly A
     * = Annually P = Periodically
     * @return Returns the String
     */
    @JsonGetter("PaymentFrequency")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPaymentFrequency() {
        return paymentFrequency;
    }

    /**
     * Setter for PaymentFrequency.
     * Payment Frequency Indicator. “all data” W= Weekly F = Fortnightly M = Monthly Q = Quarterly A
     * = Annually P = Periodically
     * @param paymentFrequency Value for String
     */
    @JsonSetter("PaymentFrequency")
    public void setPaymentFrequency(String paymentFrequency) {
        this.paymentFrequency = paymentFrequency;
    }

    /**
     * Getter for PaymentAmount.
     * Payment - in £'s sterling Leading zeroes
     * @return Returns the Integer
     */
    @JsonGetter("PaymentAmount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getPaymentAmount() {
        return paymentAmount;
    }

    /**
     * Setter for PaymentAmount.
     * Payment - in £'s sterling Leading zeroes
     * @param paymentAmount Value for Integer
     */
    @JsonSetter("PaymentAmount")
    public void setPaymentAmount(Integer paymentAmount) {
        this.paymentAmount = paymentAmount;
    }

    /**
     * Getter for PaymentIndicator.
     * Credit Card type accounts only “-“ to denote credit or “ “ to denote debt on Payment Amount
     * @return Returns the String
     */
    @JsonGetter("PaymentIndicator")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPaymentIndicator() {
        return paymentIndicator;
    }

    /**
     * Setter for PaymentIndicator.
     * Credit Card type accounts only “-“ to denote credit or “ “ to denote debt on Payment Amount
     * @param paymentIndicator Value for String
     */
    @JsonSetter("PaymentIndicator")
    public void setPaymentIndicator(String paymentIndicator) {
        this.paymentIndicator = paymentIndicator;
    }

    /**
     * Getter for PaymentCode.
     * Credit Card type accounts only M or ‘ ‘ M = Minimum Payment Only
     * @return Returns the String
     */
    @JsonGetter("PaymentCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPaymentCode() {
        return paymentCode;
    }

    /**
     * Setter for PaymentCode.
     * Credit Card type accounts only M or ‘ ‘ M = Minimum Payment Only
     * @param paymentCode Value for String
     */
    @JsonSetter("PaymentCode")
    public void setPaymentCode(String paymentCode) {
        this.paymentCode = paymentCode;
    }

    /**
     * Getter for PaymentType.
     * Form in which payment is made e.g. Cash, Cheque etc B = Debit Card C = Cash D = Direct Debit
     * Q = Cheque S = Standing Order T = Credit Card
     * @return Returns the String
     */
    @JsonGetter("PaymentType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPaymentType() {
        return paymentType;
    }

    /**
     * Setter for PaymentType.
     * Form in which payment is made e.g. Cash, Cheque etc B = Debit Card C = Cash D = Direct Debit
     * Q = Cheque S = Standing Order T = Credit Card
     * @param paymentType Value for String
     */
    @JsonSetter("PaymentType")
    public void setPaymentType(String paymentType) {
        this.paymentType = paymentType;
    }

    /**
     * Getter for CreditLimit.
     * Credit Limit - in £'s sterling “all data”
     * @return Returns the Integer
     */
    @JsonGetter("CreditLimit")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getCreditLimit() {
        return creditLimit;
    }

    /**
     * Setter for CreditLimit.
     * Credit Limit - in £'s sterling “all data”
     * @param creditLimit Value for Integer
     */
    @JsonSetter("CreditLimit")
    public void setCreditLimit(Integer creditLimit) {
        this.creditLimit = creditLimit;
    }

    /**
     * Getter for CreditTurnover.
     * Value of all payments into account during most recent month “all data” Only available to
     * Current Account User Group within the CAIS data sharing program.
     * @return Returns the String
     */
    @JsonGetter("CreditTurnover")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCreditTurnover() {
        return creditTurnover;
    }

    /**
     * Setter for CreditTurnover.
     * Value of all payments into account during most recent month “all data” Only available to
     * Current Account User Group within the CAIS data sharing program.
     * @param creditTurnover Value for String
     */
    @JsonSetter("CreditTurnover")
    public void setCreditTurnover(String creditTurnover) {
        this.creditTurnover = creditTurnover;
    }

    /**
     * Getter for NumberCashAdvances.
     * Credit Card type accounts only
     * @return Returns the Integer
     */
    @JsonGetter("NumberCashAdvances")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumberCashAdvances() {
        return numberCashAdvances;
    }

    /**
     * Setter for NumberCashAdvances.
     * Credit Card type accounts only
     * @param numberCashAdvances Value for Integer
     */
    @JsonSetter("NumberCashAdvances")
    public void setNumberCashAdvances(Integer numberCashAdvances) {
        this.numberCashAdvances = numberCashAdvances;
    }

    /**
     * Getter for PromotionActivity.
     * Credit Card type accounts only Y Current Promotional Activity N or ' ' No promotional
     * activity. ? TBC
     * @return Returns the String
     */
    @JsonGetter("PromotionActivity")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPromotionActivity() {
        return promotionActivity;
    }

    /**
     * Setter for PromotionActivity.
     * Credit Card type accounts only Y Current Promotional Activity N or ' ' No promotional
     * activity. ? TBC
     * @param promotionActivity Value for String
     */
    @JsonSetter("PromotionActivity")
    public void setPromotionActivity(String promotionActivity) {
        this.promotionActivity = promotionActivity;
    }

    /**
     * Getter for Rejection.
     * Current account unpaid transactions in the last month. Only available to the provider of this
     * CAIS record/R4 0 - No unpaid transactions 1 - Unpaid transactions Only available to Current
     * Account User Group within the CAIS data sharing program.
     * @return Returns the String
     */
    @JsonGetter("Rejection")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getRejection() {
        return rejection;
    }

    /**
     * Setter for Rejection.
     * Current account unpaid transactions in the last month. Only available to the provider of this
     * CAIS record/R4 0 - No unpaid transactions 1 - Unpaid transactions Only available to Current
     * Account User Group within the CAIS data sharing program.
     * @param rejection Value for String
     */
    @JsonSetter("Rejection")
    public void setRejection(String rejection) {
        this.rejection = rejection;
    }

    /**
     * Getter for MortgageFlag.
     * “all data” C = Arrears Capitalisation A = Mortgage repossession applied for G = Mortgage
     * repossession granted
     * @return Returns the String
     */
    @JsonGetter("MortgageFlag")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMortgageFlag() {
        return mortgageFlag;
    }

    /**
     * Setter for MortgageFlag.
     * “all data” C = Arrears Capitalisation A = Mortgage repossession applied for G = Mortgage
     * repossession granted
     * @param mortgageFlag Value for String
     */
    @JsonSetter("MortgageFlag")
    public void setMortgageFlag(String mortgageFlag) {
        this.mortgageFlag = mortgageFlag;
    }

    /**
     * Getter for ValueCashAdvances.
     * Credit Card type accounts only within the CAIS data sharing program.
     * @return Returns the Integer
     */
    @JsonGetter("ValueCashAdvances")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getValueCashAdvances() {
        return valueCashAdvances;
    }

    /**
     * Setter for ValueCashAdvances.
     * Credit Card type accounts only within the CAIS data sharing program.
     * @param valueCashAdvances Value for Integer
     */
    @JsonSetter("ValueCashAdvances")
    public void setValueCashAdvances(Integer valueCashAdvances) {
        this.valueCashAdvances = valueCashAdvances;
    }

    /**
     * Getter for FlagSetting.
     * See "CAIS Flag Setting" tab for details
     * @return Returns the String
     */
    @JsonGetter("FlagSetting")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getFlagSetting() {
        return flagSetting;
    }

    /**
     * Setter for FlagSetting.
     * See "CAIS Flag Setting" tab for details
     * @param flagSetting Value for String
     */
    @JsonSetter("FlagSetting")
    public void setFlagSetting(String flagSetting) {
        this.flagSetting = flagSetting;
    }

    /**
     * Getter for BestCAISStatus.
     * This is the best CAIS status recorded
     * @return Returns the String
     */
    @JsonGetter("BestCAISStatus")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBestCAISStatus() {
        return bestCAISStatus;
    }

    /**
     * Setter for BestCAISStatus.
     * This is the best CAIS status recorded
     * @param bestCAISStatus Value for String
     */
    @JsonSetter("BestCAISStatus")
    public void setBestCAISStatus(String bestCAISStatus) {
        this.bestCAISStatus = bestCAISStatus;
    }

    /**
     * Getter for AccountStartDate.
     * Start Date YYYY-MM-DD 00 = Date Unknown “all data”
     * @return Returns the String
     */
    @JsonGetter("AccountStartDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountStartDate() {
        return accountStartDate;
    }

    /**
     * Setter for AccountStartDate.
     * Start Date YYYY-MM-DD 00 = Date Unknown “all data”
     * @param accountStartDate Value for String
     */
    @JsonSetter("AccountStartDate")
    public void setAccountStartDate(String accountStartDate) {
        this.accountStartDate = accountStartDate;
    }

    /**
     * Getter for WorstCurrentStatus.
     * This is the worst Current (this month) CAIS status recorded for all active accounts
     * @return Returns the String
     */
    @JsonGetter("WorstCurrentStatus")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getWorstCurrentStatus() {
        return worstCurrentStatus;
    }

    /**
     * Setter for WorstCurrentStatus.
     * This is the worst Current (this month) CAIS status recorded for all active accounts
     * @param worstCurrentStatus Value for String
     */
    @JsonSetter("WorstCurrentStatus")
    public void setWorstCurrentStatus(String worstCurrentStatus) {
        this.worstCurrentStatus = worstCurrentStatus;
    }

    /**
     * Getter for WorstHistoricalStatus.
     * This is the worst CAIS status recorded during the last 12 months across all accounts
     * @return Returns the String
     */
    @JsonGetter("WorstHistoricalStatus")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getWorstHistoricalStatus() {
        return worstHistoricalStatus;
    }

    /**
     * Setter for WorstHistoricalStatus.
     * This is the worst CAIS status recorded during the last 12 months across all accounts
     * @param worstHistoricalStatus Value for String
     */
    @JsonSetter("WorstHistoricalStatus")
    public void setWorstHistoricalStatus(String worstHistoricalStatus) {
        this.worstHistoricalStatus = worstHistoricalStatus;
    }

    /**
     * Getter for WorstStatus.
     * This is the worst CAIS status recorded during the last 12 months for updates for an
     * individual account (shown against each CAIS account). Duplicate of WorstHistoricalStatus.
     * @return Returns the String
     */
    @JsonGetter("WorstStatus")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getWorstStatus() {
        return worstStatus;
    }

    /**
     * Setter for WorstStatus.
     * This is the worst CAIS status recorded during the last 12 months for updates for an
     * individual account (shown against each CAIS account). Duplicate of WorstHistoricalStatus.
     * @param worstStatus Value for String
     */
    @JsonSetter("WorstStatus")
    public void setWorstStatus(String worstStatus) {
        this.worstStatus = worstStatus;
    }

    /**
     * Getter for CollectionDate.
     * Transaction Collection Date (YYYY-MM-DD) 00 = Date Unknown “all data”
     * @return Returns the String
     */
    @JsonGetter("CollectionDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCollectionDate() {
        return collectionDate;
    }

    /**
     * Setter for CollectionDate.
     * Transaction Collection Date (YYYY-MM-DD) 00 = Date Unknown “all data”
     * @param collectionDate Value for String
     */
    @JsonSetter("CollectionDate")
    public void setCollectionDate(String collectionDate) {
        this.collectionDate = collectionDate;
    }

    /**
     * Getter for OwnDataFlag.
     * Own Data Flag Y Own Data N Not Own Data When = Y, then fields denoted as “Own Data” should be
     * displayed with their data values as applicable. When OWNDATAFLAG does not = Y, then “Own Data
     * “Field labels and values should be hidden.
     * @return Returns the String
     */
    @JsonGetter("OwnDataFlag")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getOwnDataFlag() {
        return ownDataFlag;
    }

    /**
     * Setter for OwnDataFlag.
     * Own Data Flag Y Own Data N Not Own Data When = Y, then fields denoted as “Own Data” should be
     * displayed with their data values as applicable. When OWNDATAFLAG does not = Y, then “Own Data
     * “Field labels and values should be hidden.
     * @param ownDataFlag Value for String
     */
    @JsonSetter("OwnDataFlag")
    public void setOwnDataFlag(String ownDataFlag) {
        this.ownDataFlag = ownDataFlag;
    }

    /**
     * Getter for Airtime.
     * Only for FCS Members (Airtime retailers) “own data” L Live B Barred D Disconnected
     * @return Returns the String
     */
    @JsonGetter("Airtime")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAirtime() {
        return airtime;
    }

    /**
     * Setter for Airtime.
     * Only for FCS Members (Airtime retailers) “own data” L Live B Barred D Disconnected
     * @param airtime Value for String
     */
    @JsonSetter("Airtime")
    public void setAirtime(String airtime) {
        this.airtime = airtime;
    }

    /**
     * Getter for NoticeOfCorrectionRef.
     * Notice of Correction reference “all data”
     * @return Returns the String
     */
    @JsonGetter("NoticeOfCorrectionRef")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getNoticeOfCorrectionRef() {
        return noticeOfCorrectionRef;
    }

    /**
     * Setter for NoticeOfCorrectionRef.
     * Notice of Correction reference “all data”
     * @param noticeOfCorrectionRef Value for String
     */
    @JsonSetter("NoticeOfCorrectionRef")
    public void setNoticeOfCorrectionRef(String noticeOfCorrectionRef) {
        this.noticeOfCorrectionRef = noticeOfCorrectionRef;
    }

    /**
     * Getter for BusinessName.
     * Business Name “all data”
     * @return Returns the String
     */
    @JsonGetter("BusinessName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBusinessName() {
        return businessName;
    }

    /**
     * Setter for BusinessName.
     * Business Name “all data”
     * @param businessName Value for String
     */
    @JsonSetter("BusinessName")
    public void setBusinessName(String businessName) {
        this.businessName = businessName;
    }

    /**
     * Getter for AdditionalTradeStyle.
     * Additional Trading Style
     * @return Returns the String
     */
    @JsonGetter("AdditionalTradeStyle")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAdditionalTradeStyle() {
        return additionalTradeStyle;
    }

    /**
     * Setter for AdditionalTradeStyle.
     * Additional Trading Style
     * @param additionalTradeStyle Value for String
     */
    @JsonSetter("AdditionalTradeStyle")
    public void setAdditionalTradeStyle(String additionalTradeStyle) {
        this.additionalTradeStyle = additionalTradeStyle;
    }

    /**
     * Getter for VATNumber.
     * VAT Number “own data”
     * @return Returns the String
     */
    @JsonGetter("VATNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getVATNumber() {
        return vATNumber;
    }

    /**
     * Setter for VATNumber.
     * VAT Number “own data”
     * @param vATNumber Value for String
     */
    @JsonSetter("VATNumber")
    public void setVATNumber(String vATNumber) {
        this.vATNumber = vATNumber;
    }

    /**
     * Getter for SICCode.
     * Trailing Zero 0 “own data”
     * @return Returns the String
     */
    @JsonGetter("SICCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSICCode() {
        return sICCode;
    }

    /**
     * Setter for SICCode.
     * Trailing Zero 0 “own data”
     * @param sICCode Value for String
     */
    @JsonSetter("SICCode")
    public void setSICCode(String sICCode) {
        this.sICCode = sICCode;
    }

    /**
     * Getter for SICDescription1992.
     * @return Returns the String
     */
    @JsonGetter("SICDescription1992")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSICDescription1992() {
        return sICDescription1992;
    }

    /**
     * Setter for SICDescription1992.
     * @param sICDescription1992 Value for String
     */
    @JsonSetter("SICDescription1992")
    public void setSICDescription1992(String sICDescription1992) {
        this.sICDescription1992 = sICDescription1992;
    }

    /**
     * Getter for NameChange.
     * Name Change Flag (internal processing) Y Name changed N Name unchanged
     * @return Returns the String
     */
    @JsonGetter("NameChange")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getNameChange() {
        return nameChange;
    }

    /**
     * Setter for NameChange.
     * Name Change Flag (internal processing) Y Name changed N Name unchanged
     * @param nameChange Value for String
     */
    @JsonSetter("NameChange")
    public void setNameChange(String nameChange) {
        this.nameChange = nameChange;
    }

    /**
     * Getter for Location.
     * @return Returns the LtdBusinessLocation
     */
    @JsonGetter("Location")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public LtdBusinessLocation getLocation() {
        return location;
    }

    /**
     * Setter for Location.
     * @param location Value for LtdBusinessLocation
     */
    @JsonSetter("Location")
    public void setLocation(LtdBusinessLocation location) {
        this.location = location;
    }

    /**
     * Getter for BusinessTelNum.
     * Business Telephone Number “own data”
     * @return Returns the String
     */
    @JsonGetter("BusinessTelNum")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBusinessTelNum() {
        return businessTelNum;
    }

    /**
     * Setter for BusinessTelNum.
     * Business Telephone Number “own data”
     * @param businessTelNum Value for String
     */
    @JsonSetter("BusinessTelNum")
    public void setBusinessTelNum(String businessTelNum) {
        this.businessTelNum = businessTelNum;
    }

    /**
     * Getter for BusinessAddressType.
     * All data” ""BusinessAddressType"" field to have the following details: ‘R’ - Registered ‘H’ -
     * Head Office ‘T’ - Trading ‘B’ - Branch ‘D’ - Delivery ‘O’ - Other
     * @return Returns the String
     */
    @JsonGetter("BusinessAddressType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBusinessAddressType() {
        return businessAddressType;
    }

    /**
     * Setter for BusinessAddressType.
     * All data” ""BusinessAddressType"" field to have the following details: ‘R’ - Registered ‘H’ -
     * Head Office ‘T’ - Trading ‘B’ - Branch ‘D’ - Delivery ‘O’ - Other
     * @param businessAddressType Value for String
     */
    @JsonSetter("BusinessAddressType")
    public void setBusinessAddressType(String businessAddressType) {
        this.businessAddressType = businessAddressType;
    }

    /**
     * Getter for BankSortCode.
     * “own data”
     * @return Returns the String
     */
    @JsonGetter("BankSortCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBankSortCode() {
        return bankSortCode;
    }

    /**
     * Setter for BankSortCode.
     * “own data”
     * @param bankSortCode Value for String
     */
    @JsonSetter("BankSortCode")
    public void setBankSortCode(String bankSortCode) {
        this.bankSortCode = bankSortCode;
    }

    /**
     * Getter for ContactName.
     * Only returned for own CAIS accounts
     * @return Returns the String
     */
    @JsonGetter("ContactName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getContactName() {
        return contactName;
    }

    /**
     * Setter for ContactName.
     * Only returned for own CAIS accounts
     * @param contactName Value for String
     */
    @JsonSetter("ContactName")
    public void setContactName(String contactName) {
        this.contactName = contactName;
    }

    /**
     * Getter for ContactJob.
     * Only returned for own CAIS accounts
     * @return Returns the String
     */
    @JsonGetter("ContactJob")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getContactJob() {
        return contactJob;
    }

    /**
     * Setter for ContactJob.
     * Only returned for own CAIS accounts
     * @param contactJob Value for String
     */
    @JsonSetter("ContactJob")
    public void setContactJob(String contactJob) {
        this.contactJob = contactJob;
    }

    /**
     * Getter for MonthlyPayment.
     * Payment - in £'s sterling Leading zeroes “all data”
     * @return Returns the Integer
     */
    @JsonGetter("MonthlyPayment")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getMonthlyPayment() {
        return monthlyPayment;
    }

    /**
     * Setter for MonthlyPayment.
     * Payment - in £'s sterling Leading zeroes “all data”
     * @param monthlyPayment Value for Integer
     */
    @JsonSetter("MonthlyPayment")
    public void setMonthlyPayment(Integer monthlyPayment) {
        this.monthlyPayment = monthlyPayment;
    }

    /**
     * Getter for DateLastStatus.
     * Date of the last change in Status
     * @return Returns the String
     */
    @JsonGetter("DateLastStatus")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDateLastStatus() {
        return dateLastStatus;
    }

    /**
     * Setter for DateLastStatus.
     * Date of the last change in Status
     * @param dateLastStatus Value for String
     */
    @JsonSetter("DateLastStatus")
    public void setDateLastStatus(String dateLastStatus) {
        this.dateLastStatus = dateLastStatus;
    }

    /**
     * Getter for DateFlagChange.
     * DD-MM-YYY. “All data”
     * @return Returns the String
     */
    @JsonGetter("DateFlagChange")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDateFlagChange() {
        return dateFlagChange;
    }

    /**
     * Setter for DateFlagChange.
     * DD-MM-YYY. “All data”
     * @param dateFlagChange Value for String
     */
    @JsonSetter("DateFlagChange")
    public void setDateFlagChange(String dateFlagChange) {
        this.dateFlagChange = dateFlagChange;
    }

    /**
     * Getter for Debenture.
     * “Own Data”
     * @return Returns the String
     */
    @JsonGetter("Debenture")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDebenture() {
        return debenture;
    }

    /**
     * Setter for Debenture.
     * “Own Data”
     * @param debenture Value for String
     */
    @JsonSetter("Debenture")
    public void setDebenture(String debenture) {
        this.debenture = debenture;
    }

    /**
     * Getter for DateDebenture.
     * Only returned for own CAIS accounts Default value of '0000-00-00'
     * @return Returns the String
     */
    @JsonGetter("DateDebenture")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDateDebenture() {
        return dateDebenture;
    }

    /**
     * Setter for DateDebenture.
     * Only returned for own CAIS accounts Default value of '0000-00-00'
     * @param dateDebenture Value for String
     */
    @JsonSetter("DateDebenture")
    public void setDateDebenture(String dateDebenture) {
        this.dateDebenture = dateDebenture;
    }

    /**
     * Getter for PreviousCreditLimit.
     * “All data”
     * @return Returns the Integer
     */
    @JsonGetter("PreviousCreditLimit")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getPreviousCreditLimit() {
        return previousCreditLimit;
    }

    /**
     * Setter for PreviousCreditLimit.
     * “All data”
     * @param previousCreditLimit Value for Integer
     */
    @JsonSetter("PreviousCreditLimit")
    public void setPreviousCreditLimit(Integer previousCreditLimit) {
        this.previousCreditLimit = previousCreditLimit;
    }

    /**
     * Getter for DateCreditLimitChange.
     * format of YYYY-MM-DD Default value of '9998-12-31'
     * @return Returns the String
     */
    @JsonGetter("DateCreditLimitChange")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDateCreditLimitChange() {
        return dateCreditLimitChange;
    }

    /**
     * Setter for DateCreditLimitChange.
     * format of YYYY-MM-DD Default value of '9998-12-31'
     * @param dateCreditLimitChange Value for String
     */
    @JsonSetter("DateCreditLimitChange")
    public void setDateCreditLimitChange(String dateCreditLimitChange) {
        this.dateCreditLimitChange = dateCreditLimitChange;
    }

    /**
     * Getter for PortfolioName.
     * Portfolio Name Assigned by Experian with Source code
     * @return Returns the String
     */
    @JsonGetter("PortfolioName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPortfolioName() {
        return portfolioName;
    }

    /**
     * Setter for PortfolioName.
     * Portfolio Name Assigned by Experian with Source code
     * @param portfolioName Value for String
     */
    @JsonSetter("PortfolioName")
    public void setPortfolioName(String portfolioName) {
        this.portfolioName = portfolioName;
    }

    /**
     * Getter for YearBusinessStart.
     * YYYY.
     * @return Returns the Integer
     */
    @JsonGetter("YearBusinessStart")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getYearBusinessStart() {
        return yearBusinessStart;
    }

    /**
     * Setter for YearBusinessStart.
     * YYYY.
     * @param yearBusinessStart Value for Integer
     */
    @JsonSetter("YearBusinessStart")
    public void setYearBusinessStart(Integer yearBusinessStart) {
        this.yearBusinessStart = yearBusinessStart;
    }

    /**
     * Getter for NumberCreditCard.
     * Total Number of Credit Cards for Business Add total volume of credit cards
     * @return Returns the Integer
     */
    @JsonGetter("NumberCreditCard")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumberCreditCard() {
        return numberCreditCard;
    }

    /**
     * Setter for NumberCreditCard.
     * Total Number of Credit Cards for Business Add total volume of credit cards
     * @param numberCreditCard Value for Integer
     */
    @JsonSetter("NumberCreditCard")
    public void setNumberCreditCard(Integer numberCreditCard) {
        this.numberCreditCard = numberCreditCard;
    }

    /**
     * Getter for PreviousRejection1.
     * 0 - No unpaid transactions 1 - Unpaid transactions Only available to Current Account User
     * Group within the CAIS data sharing program.
     * @return Returns the Integer
     */
    @JsonGetter("PreviousRejection1")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getPreviousRejection1() {
        return previousRejection1;
    }

    /**
     * Setter for PreviousRejection1.
     * 0 - No unpaid transactions 1 - Unpaid transactions Only available to Current Account User
     * Group within the CAIS data sharing program.
     * @param previousRejection1 Value for Integer
     */
    @JsonSetter("PreviousRejection1")
    public void setPreviousRejection1(Integer previousRejection1) {
        this.previousRejection1 = previousRejection1;
    }

    /**
     * Getter for PreviousRejection2.
     * 0 - No unpaid transactions 1 - Unpaid transactions Only available to Current Account User
     * Group within the CAIS data sharing program.
     * @return Returns the Integer
     */
    @JsonGetter("PreviousRejection2")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getPreviousRejection2() {
        return previousRejection2;
    }

    /**
     * Setter for PreviousRejection2.
     * 0 - No unpaid transactions 1 - Unpaid transactions Only available to Current Account User
     * Group within the CAIS data sharing program.
     * @param previousRejection2 Value for Integer
     */
    @JsonSetter("PreviousRejection2")
    public void setPreviousRejection2(Integer previousRejection2) {
        this.previousRejection2 = previousRejection2;
    }

    /**
     * Getter for DateContactChange.
     * YYYY-MM-DD
     * @return Returns the String
     */
    @JsonGetter("DateContactChange")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDateContactChange() {
        return dateContactChange;
    }

    /**
     * Setter for DateContactChange.
     * YYYY-MM-DD
     * @param dateContactChange Value for String
     */
    @JsonSetter("DateContactChange")
    public void setDateContactChange(String dateContactChange) {
        this.dateContactChange = dateContactChange;
    }

    /**
     * Getter for ContactTel.
     * “Own Data”
     * @return Returns the String
     */
    @JsonGetter("ContactTel")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getContactTel() {
        return contactTel;
    }

    /**
     * Setter for ContactTel.
     * “Own Data”
     * @param contactTel Value for String
     */
    @JsonSetter("ContactTel")
    public void setContactTel(String contactTel) {
        this.contactTel = contactTel;
    }

    /**
     * Getter for ParentRegNum.
     * “Own Data”
     * @return Returns the String
     */
    @JsonGetter("ParentRegNum")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getParentRegNum() {
        return parentRegNum;
    }

    /**
     * Setter for ParentRegNum.
     * “Own Data”
     * @param parentRegNum Value for String
     */
    @JsonSetter("ParentRegNum")
    public void setParentRegNum(String parentRegNum) {
        this.parentRegNum = parentRegNum;
    }

    /**
     * Getter for ParentTel.
     * “Own Data”
     * @return Returns the String
     */
    @JsonGetter("ParentTel")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getParentTel() {
        return parentTel;
    }

    /**
     * Setter for ParentTel.
     * “Own Data”
     * @param parentTel Value for String
     */
    @JsonSetter("ParentTel")
    public void setParentTel(String parentTel) {
        this.parentTel = parentTel;
    }

    /**
     * Getter for ParentVATNum.
     * “Own Data”
     * @return Returns the String
     */
    @JsonGetter("ParentVATNum")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getParentVATNum() {
        return parentVATNum;
    }

    /**
     * Setter for ParentVATNum.
     * “Own Data”
     * @param parentVATNum Value for String
     */
    @JsonSetter("ParentVATNum")
    public void setParentVATNum(String parentVATNum) {
        this.parentVATNum = parentVATNum;
    }

    /**
     * Getter for DateBusinessInfoChange.
     * YYYY-MM-DD "Own Data"
     * @return Returns the String
     */
    @JsonGetter("DateBusinessInfoChange")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDateBusinessInfoChange() {
        return dateBusinessInfoChange;
    }

    /**
     * Setter for DateBusinessInfoChange.
     * YYYY-MM-DD "Own Data"
     * @param dateBusinessInfoChange Value for String
     */
    @JsonSetter("DateBusinessInfoChange")
    public void setDateBusinessInfoChange(String dateBusinessInfoChange) {
        this.dateBusinessInfoChange = dateBusinessInfoChange;
    }

    /**
     * Getter for DateBusinessNameAddressChange.
     * Date when A flag is dropped from Flag Settings. YYYY-MM-DD "Own Data"
     * @return Returns the String
     */
    @JsonGetter("DateBusinessNameAddressChange")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDateBusinessNameAddressChange() {
        return dateBusinessNameAddressChange;
    }

    /**
     * Setter for DateBusinessNameAddressChange.
     * Date when A flag is dropped from Flag Settings. YYYY-MM-DD "Own Data"
     * @param dateBusinessNameAddressChange Value for String
     */
    @JsonSetter("DateBusinessNameAddressChange")
    public void setDateBusinessNameAddressChange(String dateBusinessNameAddressChange) {
        this.dateBusinessNameAddressChange = dateBusinessNameAddressChange;
    }

    /**
     * Getter for DateArrangeEnd.
     * @return Returns the String
     */
    @JsonGetter("DateArrangeEnd")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDateArrangeEnd() {
        return dateArrangeEnd;
    }

    /**
     * Setter for DateArrangeEnd.
     * @param dateArrangeEnd Value for String
     */
    @JsonSetter("DateArrangeEnd")
    public void setDateArrangeEnd(String dateArrangeEnd) {
        this.dateArrangeEnd = dateArrangeEnd;
    }

    /**
     * Getter for DateQueryEnd.
     * Date when flag setting Q is dropped. CCYY-MM-DD
     * @return Returns the String
     */
    @JsonGetter("DateQueryEnd")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDateQueryEnd() {
        return dateQueryEnd;
    }

    /**
     * Setter for DateQueryEnd.
     * Date when flag setting Q is dropped. CCYY-MM-DD
     * @param dateQueryEnd Value for String
     */
    @JsonSetter("DateQueryEnd")
    public void setDateQueryEnd(String dateQueryEnd) {
        this.dateQueryEnd = dateQueryEnd;
    }

    /**
     * Getter for DateClaimEnd.
     * Date when flag setting I is dropped CCYY-MM_DD
     * @return Returns the String
     */
    @JsonGetter("DateClaimEnd")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDateClaimEnd() {
        return dateClaimEnd;
    }

    /**
     * Setter for DateClaimEnd.
     * Date when flag setting I is dropped CCYY-MM_DD
     * @param dateClaimEnd Value for String
     */
    @JsonSetter("DateClaimEnd")
    public void setDateClaimEnd(String dateClaimEnd) {
        this.dateClaimEnd = dateClaimEnd;
    }

    /**
     * Getter for PreviousBusinessName.
     * “Own Data” 45 bytes max
     * @return Returns the String
     */
    @JsonGetter("PreviousBusinessName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPreviousBusinessName() {
        return previousBusinessName;
    }

    /**
     * Setter for PreviousBusinessName.
     * “Own Data” 45 bytes max
     * @param previousBusinessName Value for String
     */
    @JsonSetter("PreviousBusinessName")
    public void setPreviousBusinessName(String previousBusinessName) {
        this.previousBusinessName = previousBusinessName;
    }

    /**
     * Getter for ParentBusinessName.
     * “Own Data” 175 bytes max in total for these fields
     * @return Returns the String
     */
    @JsonGetter("ParentBusinessName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getParentBusinessName() {
        return parentBusinessName;
    }

    /**
     * Setter for ParentBusinessName.
     * “Own Data” 175 bytes max in total for these fields
     * @param parentBusinessName Value for String
     */
    @JsonSetter("ParentBusinessName")
    public void setParentBusinessName(String parentBusinessName) {
        this.parentBusinessName = parentBusinessName;
    }

    /**
     * Getter for ParentLocation.
     * @return Returns the LtdBusinessLocation
     */
    @JsonGetter("ParentLocation")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public LtdBusinessLocation getParentLocation() {
        return parentLocation;
    }

    /**
     * Setter for ParentLocation.
     * @param parentLocation Value for LtdBusinessLocation
     */
    @JsonSetter("ParentLocation")
    public void setParentLocation(LtdBusinessLocation parentLocation) {
        this.parentLocation = parentLocation;
    }

    /**
     * Getter for PreviousLocation.
     * @return Returns the LtdBusinessLocation
     */
    @JsonGetter("PreviousLocation")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public LtdBusinessLocation getPreviousLocation() {
        return previousLocation;
    }

    /**
     * Setter for PreviousLocation.
     * @param previousLocation Value for LtdBusinessLocation
     */
    @JsonSetter("PreviousLocation")
    public void setPreviousLocation(LtdBusinessLocation previousLocation) {
        this.previousLocation = previousLocation;
    }

    /**
     * Getter for BusinessWebsite.
     * “Own Data” Max 100 bytes
     * @return Returns the String
     */
    @JsonGetter("BusinessWebsite")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBusinessWebsite() {
        return businessWebsite;
    }

    /**
     * Setter for BusinessWebsite.
     * “Own Data” Max 100 bytes
     * @param businessWebsite Value for String
     */
    @JsonSetter("BusinessWebsite")
    public void setBusinessWebsite(String businessWebsite) {
        this.businessWebsite = businessWebsite;
    }

    /**
     * Getter for ContactEmail.
     * “Own Data” Max 100 bytes
     * @return Returns the String
     */
    @JsonGetter("ContactEmail")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getContactEmail() {
        return contactEmail;
    }

    /**
     * Setter for ContactEmail.
     * “Own Data” Max 100 bytes
     * @param contactEmail Value for String
     */
    @JsonSetter("ContactEmail")
    public void setContactEmail(String contactEmail) {
        this.contactEmail = contactEmail;
    }

    /**
     * Getter for CurrentDirectors.
     * Number of Commercial CAIS Director blocks being returned for this CAIS record
     * @return Returns the Integer
     */
    @JsonGetter("CurrentDirectors")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getCurrentDirectors() {
        return currentDirectors;
    }

    /**
     * Setter for CurrentDirectors.
     * Number of Commercial CAIS Director blocks being returned for this CAIS record
     * @param currentDirectors Value for Integer
     */
    @JsonSetter("CurrentDirectors")
    public void setCurrentDirectors(Integer currentDirectors) {
        this.currentDirectors = currentDirectors;
    }

    /**
     * Getter for CommercialCAISDirector.
     * @return Returns the List of CommercialCAISDirector
     */
    @JsonGetter("CommercialCAISDirector")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<CommercialCAISDirector> getCommercialCAISDirector() {
        return commercialCAISDirector;
    }

    /**
     * Setter for CommercialCAISDirector.
     * @param commercialCAISDirector Value for List of CommercialCAISDirector
     */
    @JsonSetter("CommercialCAISDirector")
    public void setCommercialCAISDirector(List<CommercialCAISDirector> commercialCAISDirector) {
        this.commercialCAISDirector = commercialCAISDirector;
    }

    /**
     * Converts this LtdCompanyCAISDetails into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "LtdCompanyCAISDetails [" + "accountState=" + accountState + ", accountStatus12="
                + accountStatus12 + ", accountType=" + accountType + ", agreemtNum=" + agreemtNum
                + ", caisLastUpdate=" + caisLastUpdate + ", companyType=" + companyType
                + ", currentBalance=" + currentBalance + ", defaultBalance=" + defaultBalance
                + ", defaultDate=" + defaultDate + ", monthsData=" + monthsData
                + ", settlementDate=" + settlementDate + ", status1To2=" + status1To2
                + ", status3To9=" + status3To9 + ", sourceCode=" + sourceCode + ", accountNumber="
                + accountNumber + ", primaryAccountIndicator=" + primaryAccountIndicator
                + ", repayPeriod=" + repayPeriod + ", balanceType=" + balanceType
                + ", previousStatementBalance=" + previousStatementBalance
                + ", previousStatementIndicator=" + previousStatementIndicator
                + ", paymentFrequency=" + paymentFrequency + ", paymentAmount=" + paymentAmount
                + ", paymentIndicator=" + paymentIndicator + ", paymentCode=" + paymentCode
                + ", paymentType=" + paymentType + ", creditLimit=" + creditLimit
                + ", creditTurnover=" + creditTurnover + ", numberCashAdvances="
                + numberCashAdvances + ", promotionActivity=" + promotionActivity + ", rejection="
                + rejection + ", mortgageFlag=" + mortgageFlag + ", valueCashAdvances="
                + valueCashAdvances + ", flagSetting=" + flagSetting + ", bestCAISStatus="
                + bestCAISStatus + ", accountStartDate=" + accountStartDate
                + ", worstCurrentStatus=" + worstCurrentStatus + ", worstHistoricalStatus="
                + worstHistoricalStatus + ", worstStatus=" + worstStatus + ", collectionDate="
                + collectionDate + ", ownDataFlag=" + ownDataFlag + ", airtime=" + airtime
                + ", noticeOfCorrectionRef=" + noticeOfCorrectionRef + ", businessName="
                + businessName + ", additionalTradeStyle=" + additionalTradeStyle + ", vATNumber="
                + vATNumber + ", sICCode=" + sICCode + ", sICDescription1992=" + sICDescription1992
                + ", nameChange=" + nameChange + ", location=" + location + ", businessTelNum="
                + businessTelNum + ", businessAddressType=" + businessAddressType
                + ", bankSortCode=" + bankSortCode + ", contactName=" + contactName
                + ", contactJob=" + contactJob + ", monthlyPayment=" + monthlyPayment
                + ", dateLastStatus=" + dateLastStatus + ", dateFlagChange=" + dateFlagChange
                + ", debenture=" + debenture + ", dateDebenture=" + dateDebenture
                + ", previousCreditLimit=" + previousCreditLimit + ", dateCreditLimitChange="
                + dateCreditLimitChange + ", portfolioName=" + portfolioName
                + ", yearBusinessStart=" + yearBusinessStart + ", numberCreditCard="
                + numberCreditCard + ", previousRejection1=" + previousRejection1
                + ", previousRejection2=" + previousRejection2 + ", dateContactChange="
                + dateContactChange + ", contactTel=" + contactTel + ", parentRegNum="
                + parentRegNum + ", parentTel=" + parentTel + ", parentVATNum=" + parentVATNum
                + ", dateBusinessInfoChange=" + dateBusinessInfoChange
                + ", dateBusinessNameAddressChange=" + dateBusinessNameAddressChange
                + ", dateArrangeEnd=" + dateArrangeEnd + ", dateQueryEnd=" + dateQueryEnd
                + ", dateClaimEnd=" + dateClaimEnd + ", previousBusinessName="
                + previousBusinessName + ", parentBusinessName=" + parentBusinessName
                + ", parentLocation=" + parentLocation + ", previousLocation=" + previousLocation
                + ", businessWebsite=" + businessWebsite + ", contactEmail=" + contactEmail
                + ", currentDirectors=" + currentDirectors + ", commercialCAISDirector="
                + commercialCAISDirector + "]";
    }

    /**
     * Builds a new {@link LtdCompanyCAISDetails.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link LtdCompanyCAISDetails.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .accountState(getAccountState())
                .accountStatus12(getAccountStatus12())
                .accountType(getAccountType())
                .agreemtNum(getAgreemtNum())
                .caisLastUpdate(getCaisLastUpdate())
                .companyType(getCompanyType())
                .currentBalance(getCurrentBalance())
                .defaultBalance(getDefaultBalance())
                .defaultDate(getDefaultDate())
                .monthsData(getMonthsData())
                .settlementDate(getSettlementDate())
                .status1To2(getStatus1To2())
                .status3To9(getStatus3To9())
                .sourceCode(getSourceCode())
                .accountNumber(getAccountNumber())
                .primaryAccountIndicator(getPrimaryAccountIndicator())
                .repayPeriod(getRepayPeriod())
                .balanceType(getBalanceType())
                .previousStatementBalance(getPreviousStatementBalance())
                .previousStatementIndicator(getPreviousStatementIndicator())
                .paymentFrequency(getPaymentFrequency())
                .paymentAmount(getPaymentAmount())
                .paymentIndicator(getPaymentIndicator())
                .paymentCode(getPaymentCode())
                .paymentType(getPaymentType())
                .creditLimit(getCreditLimit())
                .creditTurnover(getCreditTurnover())
                .numberCashAdvances(getNumberCashAdvances())
                .promotionActivity(getPromotionActivity())
                .rejection(getRejection())
                .mortgageFlag(getMortgageFlag())
                .valueCashAdvances(getValueCashAdvances())
                .flagSetting(getFlagSetting())
                .bestCAISStatus(getBestCAISStatus())
                .accountStartDate(getAccountStartDate())
                .worstCurrentStatus(getWorstCurrentStatus())
                .worstHistoricalStatus(getWorstHistoricalStatus())
                .worstStatus(getWorstStatus())
                .collectionDate(getCollectionDate())
                .ownDataFlag(getOwnDataFlag())
                .airtime(getAirtime())
                .noticeOfCorrectionRef(getNoticeOfCorrectionRef())
                .businessName(getBusinessName())
                .additionalTradeStyle(getAdditionalTradeStyle())
                .vATNumber(getVATNumber())
                .sICCode(getSICCode())
                .sICDescription1992(getSICDescription1992())
                .nameChange(getNameChange())
                .location(getLocation())
                .businessTelNum(getBusinessTelNum())
                .businessAddressType(getBusinessAddressType())
                .bankSortCode(getBankSortCode())
                .contactName(getContactName())
                .contactJob(getContactJob())
                .monthlyPayment(getMonthlyPayment())
                .dateLastStatus(getDateLastStatus())
                .dateFlagChange(getDateFlagChange())
                .debenture(getDebenture())
                .dateDebenture(getDateDebenture())
                .previousCreditLimit(getPreviousCreditLimit())
                .dateCreditLimitChange(getDateCreditLimitChange())
                .portfolioName(getPortfolioName())
                .yearBusinessStart(getYearBusinessStart())
                .numberCreditCard(getNumberCreditCard())
                .previousRejection1(getPreviousRejection1())
                .previousRejection2(getPreviousRejection2())
                .dateContactChange(getDateContactChange())
                .contactTel(getContactTel())
                .parentRegNum(getParentRegNum())
                .parentTel(getParentTel())
                .parentVATNum(getParentVATNum())
                .dateBusinessInfoChange(getDateBusinessInfoChange())
                .dateBusinessNameAddressChange(getDateBusinessNameAddressChange())
                .dateArrangeEnd(getDateArrangeEnd())
                .dateQueryEnd(getDateQueryEnd())
                .dateClaimEnd(getDateClaimEnd())
                .previousBusinessName(getPreviousBusinessName())
                .parentBusinessName(getParentBusinessName())
                .parentLocation(getParentLocation())
                .previousLocation(getPreviousLocation())
                .businessWebsite(getBusinessWebsite())
                .contactEmail(getContactEmail())
                .currentDirectors(getCurrentDirectors())
                .commercialCAISDirector(getCommercialCAISDirector());
        return builder;
    }

    /**
     * Class to build instances of {@link LtdCompanyCAISDetails}.
     */
    public static class Builder {
        private String accountState;
        private String accountStatus12;
        private String accountType;
        private String agreemtNum;
        private String caisLastUpdate;
        private String companyType;
        private String currentBalance;
        private String defaultBalance;
        private String defaultDate;
        private Integer monthsData;
        private String settlementDate;
        private Integer status1To2;
        private Integer status3To9;
        private String sourceCode;
        private String accountNumber;
        private String primaryAccountIndicator;
        private String repayPeriod;
        private String balanceType;
        private String previousStatementBalance;
        private String previousStatementIndicator;
        private String paymentFrequency;
        private Integer paymentAmount;
        private String paymentIndicator;
        private String paymentCode;
        private String paymentType;
        private Integer creditLimit;
        private String creditTurnover;
        private Integer numberCashAdvances;
        private String promotionActivity;
        private String rejection;
        private String mortgageFlag;
        private Integer valueCashAdvances;
        private String flagSetting;
        private String bestCAISStatus;
        private String accountStartDate;
        private String worstCurrentStatus;
        private String worstHistoricalStatus;
        private String worstStatus;
        private String collectionDate;
        private String ownDataFlag;
        private String airtime;
        private String noticeOfCorrectionRef;
        private String businessName;
        private String additionalTradeStyle;
        private String vATNumber;
        private String sICCode;
        private String sICDescription1992;
        private String nameChange;
        private LtdBusinessLocation location;
        private String businessTelNum;
        private String businessAddressType;
        private String bankSortCode;
        private String contactName;
        private String contactJob;
        private Integer monthlyPayment;
        private String dateLastStatus;
        private String dateFlagChange;
        private String debenture;
        private String dateDebenture;
        private Integer previousCreditLimit;
        private String dateCreditLimitChange;
        private String portfolioName;
        private Integer yearBusinessStart;
        private Integer numberCreditCard;
        private Integer previousRejection1;
        private Integer previousRejection2;
        private String dateContactChange;
        private String contactTel;
        private String parentRegNum;
        private String parentTel;
        private String parentVATNum;
        private String dateBusinessInfoChange;
        private String dateBusinessNameAddressChange;
        private String dateArrangeEnd;
        private String dateQueryEnd;
        private String dateClaimEnd;
        private String previousBusinessName;
        private String parentBusinessName;
        private LtdBusinessLocation parentLocation;
        private LtdBusinessLocation previousLocation;
        private String businessWebsite;
        private String contactEmail;
        private Integer currentDirectors;
        private List<CommercialCAISDirector> commercialCAISDirector;



        /**
         * Setter for accountState.
         * @param  accountState  String value for accountState.
         * @return Builder
         */
        public Builder accountState(String accountState) {
            this.accountState = accountState;
            return this;
        }

        /**
         * Setter for accountStatus12.
         * @param  accountStatus12  String value for accountStatus12.
         * @return Builder
         */
        public Builder accountStatus12(String accountStatus12) {
            this.accountStatus12 = accountStatus12;
            return this;
        }

        /**
         * Setter for accountType.
         * @param  accountType  String value for accountType.
         * @return Builder
         */
        public Builder accountType(String accountType) {
            this.accountType = accountType;
            return this;
        }

        /**
         * Setter for agreemtNum.
         * @param  agreemtNum  String value for agreemtNum.
         * @return Builder
         */
        public Builder agreemtNum(String agreemtNum) {
            this.agreemtNum = agreemtNum;
            return this;
        }

        /**
         * Setter for caisLastUpdate.
         * @param  caisLastUpdate  String value for caisLastUpdate.
         * @return Builder
         */
        public Builder caisLastUpdate(String caisLastUpdate) {
            this.caisLastUpdate = caisLastUpdate;
            return this;
        }

        /**
         * Setter for companyType.
         * @param  companyType  String value for companyType.
         * @return Builder
         */
        public Builder companyType(String companyType) {
            this.companyType = companyType;
            return this;
        }

        /**
         * Setter for currentBalance.
         * @param  currentBalance  String value for currentBalance.
         * @return Builder
         */
        public Builder currentBalance(String currentBalance) {
            this.currentBalance = currentBalance;
            return this;
        }

        /**
         * Setter for defaultBalance.
         * @param  defaultBalance  String value for defaultBalance.
         * @return Builder
         */
        public Builder defaultBalance(String defaultBalance) {
            this.defaultBalance = defaultBalance;
            return this;
        }

        /**
         * Setter for defaultDate.
         * @param  defaultDate  String value for defaultDate.
         * @return Builder
         */
        public Builder defaultDate(String defaultDate) {
            this.defaultDate = defaultDate;
            return this;
        }

        /**
         * Setter for monthsData.
         * @param  monthsData  Integer value for monthsData.
         * @return Builder
         */
        public Builder monthsData(Integer monthsData) {
            this.monthsData = monthsData;
            return this;
        }

        /**
         * Setter for settlementDate.
         * @param  settlementDate  String value for settlementDate.
         * @return Builder
         */
        public Builder settlementDate(String settlementDate) {
            this.settlementDate = settlementDate;
            return this;
        }

        /**
         * Setter for status1To2.
         * @param  status1To2  Integer value for status1To2.
         * @return Builder
         */
        public Builder status1To2(Integer status1To2) {
            this.status1To2 = status1To2;
            return this;
        }

        /**
         * Setter for status3To9.
         * @param  status3To9  Integer value for status3To9.
         * @return Builder
         */
        public Builder status3To9(Integer status3To9) {
            this.status3To9 = status3To9;
            return this;
        }

        /**
         * Setter for sourceCode.
         * @param  sourceCode  String value for sourceCode.
         * @return Builder
         */
        public Builder sourceCode(String sourceCode) {
            this.sourceCode = sourceCode;
            return this;
        }

        /**
         * Setter for accountNumber.
         * @param  accountNumber  String value for accountNumber.
         * @return Builder
         */
        public Builder accountNumber(String accountNumber) {
            this.accountNumber = accountNumber;
            return this;
        }

        /**
         * Setter for primaryAccountIndicator.
         * @param  primaryAccountIndicator  String value for primaryAccountIndicator.
         * @return Builder
         */
        public Builder primaryAccountIndicator(String primaryAccountIndicator) {
            this.primaryAccountIndicator = primaryAccountIndicator;
            return this;
        }

        /**
         * Setter for repayPeriod.
         * @param  repayPeriod  String value for repayPeriod.
         * @return Builder
         */
        public Builder repayPeriod(String repayPeriod) {
            this.repayPeriod = repayPeriod;
            return this;
        }

        /**
         * Setter for balanceType.
         * @param  balanceType  String value for balanceType.
         * @return Builder
         */
        public Builder balanceType(String balanceType) {
            this.balanceType = balanceType;
            return this;
        }

        /**
         * Setter for previousStatementBalance.
         * @param  previousStatementBalance  String value for previousStatementBalance.
         * @return Builder
         */
        public Builder previousStatementBalance(String previousStatementBalance) {
            this.previousStatementBalance = previousStatementBalance;
            return this;
        }

        /**
         * Setter for previousStatementIndicator.
         * @param  previousStatementIndicator  String value for previousStatementIndicator.
         * @return Builder
         */
        public Builder previousStatementIndicator(String previousStatementIndicator) {
            this.previousStatementIndicator = previousStatementIndicator;
            return this;
        }

        /**
         * Setter for paymentFrequency.
         * @param  paymentFrequency  String value for paymentFrequency.
         * @return Builder
         */
        public Builder paymentFrequency(String paymentFrequency) {
            this.paymentFrequency = paymentFrequency;
            return this;
        }

        /**
         * Setter for paymentAmount.
         * @param  paymentAmount  Integer value for paymentAmount.
         * @return Builder
         */
        public Builder paymentAmount(Integer paymentAmount) {
            this.paymentAmount = paymentAmount;
            return this;
        }

        /**
         * Setter for paymentIndicator.
         * @param  paymentIndicator  String value for paymentIndicator.
         * @return Builder
         */
        public Builder paymentIndicator(String paymentIndicator) {
            this.paymentIndicator = paymentIndicator;
            return this;
        }

        /**
         * Setter for paymentCode.
         * @param  paymentCode  String value for paymentCode.
         * @return Builder
         */
        public Builder paymentCode(String paymentCode) {
            this.paymentCode = paymentCode;
            return this;
        }

        /**
         * Setter for paymentType.
         * @param  paymentType  String value for paymentType.
         * @return Builder
         */
        public Builder paymentType(String paymentType) {
            this.paymentType = paymentType;
            return this;
        }

        /**
         * Setter for creditLimit.
         * @param  creditLimit  Integer value for creditLimit.
         * @return Builder
         */
        public Builder creditLimit(Integer creditLimit) {
            this.creditLimit = creditLimit;
            return this;
        }

        /**
         * Setter for creditTurnover.
         * @param  creditTurnover  String value for creditTurnover.
         * @return Builder
         */
        public Builder creditTurnover(String creditTurnover) {
            this.creditTurnover = creditTurnover;
            return this;
        }

        /**
         * Setter for numberCashAdvances.
         * @param  numberCashAdvances  Integer value for numberCashAdvances.
         * @return Builder
         */
        public Builder numberCashAdvances(Integer numberCashAdvances) {
            this.numberCashAdvances = numberCashAdvances;
            return this;
        }

        /**
         * Setter for promotionActivity.
         * @param  promotionActivity  String value for promotionActivity.
         * @return Builder
         */
        public Builder promotionActivity(String promotionActivity) {
            this.promotionActivity = promotionActivity;
            return this;
        }

        /**
         * Setter for rejection.
         * @param  rejection  String value for rejection.
         * @return Builder
         */
        public Builder rejection(String rejection) {
            this.rejection = rejection;
            return this;
        }

        /**
         * Setter for mortgageFlag.
         * @param  mortgageFlag  String value for mortgageFlag.
         * @return Builder
         */
        public Builder mortgageFlag(String mortgageFlag) {
            this.mortgageFlag = mortgageFlag;
            return this;
        }

        /**
         * Setter for valueCashAdvances.
         * @param  valueCashAdvances  Integer value for valueCashAdvances.
         * @return Builder
         */
        public Builder valueCashAdvances(Integer valueCashAdvances) {
            this.valueCashAdvances = valueCashAdvances;
            return this;
        }

        /**
         * Setter for flagSetting.
         * @param  flagSetting  String value for flagSetting.
         * @return Builder
         */
        public Builder flagSetting(String flagSetting) {
            this.flagSetting = flagSetting;
            return this;
        }

        /**
         * Setter for bestCAISStatus.
         * @param  bestCAISStatus  String value for bestCAISStatus.
         * @return Builder
         */
        public Builder bestCAISStatus(String bestCAISStatus) {
            this.bestCAISStatus = bestCAISStatus;
            return this;
        }

        /**
         * Setter for accountStartDate.
         * @param  accountStartDate  String value for accountStartDate.
         * @return Builder
         */
        public Builder accountStartDate(String accountStartDate) {
            this.accountStartDate = accountStartDate;
            return this;
        }

        /**
         * Setter for worstCurrentStatus.
         * @param  worstCurrentStatus  String value for worstCurrentStatus.
         * @return Builder
         */
        public Builder worstCurrentStatus(String worstCurrentStatus) {
            this.worstCurrentStatus = worstCurrentStatus;
            return this;
        }

        /**
         * Setter for worstHistoricalStatus.
         * @param  worstHistoricalStatus  String value for worstHistoricalStatus.
         * @return Builder
         */
        public Builder worstHistoricalStatus(String worstHistoricalStatus) {
            this.worstHistoricalStatus = worstHistoricalStatus;
            return this;
        }

        /**
         * Setter for worstStatus.
         * @param  worstStatus  String value for worstStatus.
         * @return Builder
         */
        public Builder worstStatus(String worstStatus) {
            this.worstStatus = worstStatus;
            return this;
        }

        /**
         * Setter for collectionDate.
         * @param  collectionDate  String value for collectionDate.
         * @return Builder
         */
        public Builder collectionDate(String collectionDate) {
            this.collectionDate = collectionDate;
            return this;
        }

        /**
         * Setter for ownDataFlag.
         * @param  ownDataFlag  String value for ownDataFlag.
         * @return Builder
         */
        public Builder ownDataFlag(String ownDataFlag) {
            this.ownDataFlag = ownDataFlag;
            return this;
        }

        /**
         * Setter for airtime.
         * @param  airtime  String value for airtime.
         * @return Builder
         */
        public Builder airtime(String airtime) {
            this.airtime = airtime;
            return this;
        }

        /**
         * Setter for noticeOfCorrectionRef.
         * @param  noticeOfCorrectionRef  String value for noticeOfCorrectionRef.
         * @return Builder
         */
        public Builder noticeOfCorrectionRef(String noticeOfCorrectionRef) {
            this.noticeOfCorrectionRef = noticeOfCorrectionRef;
            return this;
        }

        /**
         * Setter for businessName.
         * @param  businessName  String value for businessName.
         * @return Builder
         */
        public Builder businessName(String businessName) {
            this.businessName = businessName;
            return this;
        }

        /**
         * Setter for additionalTradeStyle.
         * @param  additionalTradeStyle  String value for additionalTradeStyle.
         * @return Builder
         */
        public Builder additionalTradeStyle(String additionalTradeStyle) {
            this.additionalTradeStyle = additionalTradeStyle;
            return this;
        }

        /**
         * Setter for vATNumber.
         * @param  vATNumber  String value for vATNumber.
         * @return Builder
         */
        public Builder vATNumber(String vATNumber) {
            this.vATNumber = vATNumber;
            return this;
        }

        /**
         * Setter for sICCode.
         * @param  sICCode  String value for sICCode.
         * @return Builder
         */
        public Builder sICCode(String sICCode) {
            this.sICCode = sICCode;
            return this;
        }

        /**
         * Setter for sICDescription1992.
         * @param  sICDescription1992  String value for sICDescription1992.
         * @return Builder
         */
        public Builder sICDescription1992(String sICDescription1992) {
            this.sICDescription1992 = sICDescription1992;
            return this;
        }

        /**
         * Setter for nameChange.
         * @param  nameChange  String value for nameChange.
         * @return Builder
         */
        public Builder nameChange(String nameChange) {
            this.nameChange = nameChange;
            return this;
        }

        /**
         * Setter for location.
         * @param  location  LtdBusinessLocation value for location.
         * @return Builder
         */
        public Builder location(LtdBusinessLocation location) {
            this.location = location;
            return this;
        }

        /**
         * Setter for businessTelNum.
         * @param  businessTelNum  String value for businessTelNum.
         * @return Builder
         */
        public Builder businessTelNum(String businessTelNum) {
            this.businessTelNum = businessTelNum;
            return this;
        }

        /**
         * Setter for businessAddressType.
         * @param  businessAddressType  String value for businessAddressType.
         * @return Builder
         */
        public Builder businessAddressType(String businessAddressType) {
            this.businessAddressType = businessAddressType;
            return this;
        }

        /**
         * Setter for bankSortCode.
         * @param  bankSortCode  String value for bankSortCode.
         * @return Builder
         */
        public Builder bankSortCode(String bankSortCode) {
            this.bankSortCode = bankSortCode;
            return this;
        }

        /**
         * Setter for contactName.
         * @param  contactName  String value for contactName.
         * @return Builder
         */
        public Builder contactName(String contactName) {
            this.contactName = contactName;
            return this;
        }

        /**
         * Setter for contactJob.
         * @param  contactJob  String value for contactJob.
         * @return Builder
         */
        public Builder contactJob(String contactJob) {
            this.contactJob = contactJob;
            return this;
        }

        /**
         * Setter for monthlyPayment.
         * @param  monthlyPayment  Integer value for monthlyPayment.
         * @return Builder
         */
        public Builder monthlyPayment(Integer monthlyPayment) {
            this.monthlyPayment = monthlyPayment;
            return this;
        }

        /**
         * Setter for dateLastStatus.
         * @param  dateLastStatus  String value for dateLastStatus.
         * @return Builder
         */
        public Builder dateLastStatus(String dateLastStatus) {
            this.dateLastStatus = dateLastStatus;
            return this;
        }

        /**
         * Setter for dateFlagChange.
         * @param  dateFlagChange  String value for dateFlagChange.
         * @return Builder
         */
        public Builder dateFlagChange(String dateFlagChange) {
            this.dateFlagChange = dateFlagChange;
            return this;
        }

        /**
         * Setter for debenture.
         * @param  debenture  String value for debenture.
         * @return Builder
         */
        public Builder debenture(String debenture) {
            this.debenture = debenture;
            return this;
        }

        /**
         * Setter for dateDebenture.
         * @param  dateDebenture  String value for dateDebenture.
         * @return Builder
         */
        public Builder dateDebenture(String dateDebenture) {
            this.dateDebenture = dateDebenture;
            return this;
        }

        /**
         * Setter for previousCreditLimit.
         * @param  previousCreditLimit  Integer value for previousCreditLimit.
         * @return Builder
         */
        public Builder previousCreditLimit(Integer previousCreditLimit) {
            this.previousCreditLimit = previousCreditLimit;
            return this;
        }

        /**
         * Setter for dateCreditLimitChange.
         * @param  dateCreditLimitChange  String value for dateCreditLimitChange.
         * @return Builder
         */
        public Builder dateCreditLimitChange(String dateCreditLimitChange) {
            this.dateCreditLimitChange = dateCreditLimitChange;
            return this;
        }

        /**
         * Setter for portfolioName.
         * @param  portfolioName  String value for portfolioName.
         * @return Builder
         */
        public Builder portfolioName(String portfolioName) {
            this.portfolioName = portfolioName;
            return this;
        }

        /**
         * Setter for yearBusinessStart.
         * @param  yearBusinessStart  Integer value for yearBusinessStart.
         * @return Builder
         */
        public Builder yearBusinessStart(Integer yearBusinessStart) {
            this.yearBusinessStart = yearBusinessStart;
            return this;
        }

        /**
         * Setter for numberCreditCard.
         * @param  numberCreditCard  Integer value for numberCreditCard.
         * @return Builder
         */
        public Builder numberCreditCard(Integer numberCreditCard) {
            this.numberCreditCard = numberCreditCard;
            return this;
        }

        /**
         * Setter for previousRejection1.
         * @param  previousRejection1  Integer value for previousRejection1.
         * @return Builder
         */
        public Builder previousRejection1(Integer previousRejection1) {
            this.previousRejection1 = previousRejection1;
            return this;
        }

        /**
         * Setter for previousRejection2.
         * @param  previousRejection2  Integer value for previousRejection2.
         * @return Builder
         */
        public Builder previousRejection2(Integer previousRejection2) {
            this.previousRejection2 = previousRejection2;
            return this;
        }

        /**
         * Setter for dateContactChange.
         * @param  dateContactChange  String value for dateContactChange.
         * @return Builder
         */
        public Builder dateContactChange(String dateContactChange) {
            this.dateContactChange = dateContactChange;
            return this;
        }

        /**
         * Setter for contactTel.
         * @param  contactTel  String value for contactTel.
         * @return Builder
         */
        public Builder contactTel(String contactTel) {
            this.contactTel = contactTel;
            return this;
        }

        /**
         * Setter for parentRegNum.
         * @param  parentRegNum  String value for parentRegNum.
         * @return Builder
         */
        public Builder parentRegNum(String parentRegNum) {
            this.parentRegNum = parentRegNum;
            return this;
        }

        /**
         * Setter for parentTel.
         * @param  parentTel  String value for parentTel.
         * @return Builder
         */
        public Builder parentTel(String parentTel) {
            this.parentTel = parentTel;
            return this;
        }

        /**
         * Setter for parentVATNum.
         * @param  parentVATNum  String value for parentVATNum.
         * @return Builder
         */
        public Builder parentVATNum(String parentVATNum) {
            this.parentVATNum = parentVATNum;
            return this;
        }

        /**
         * Setter for dateBusinessInfoChange.
         * @param  dateBusinessInfoChange  String value for dateBusinessInfoChange.
         * @return Builder
         */
        public Builder dateBusinessInfoChange(String dateBusinessInfoChange) {
            this.dateBusinessInfoChange = dateBusinessInfoChange;
            return this;
        }

        /**
         * Setter for dateBusinessNameAddressChange.
         * @param  dateBusinessNameAddressChange  String value for dateBusinessNameAddressChange.
         * @return Builder
         */
        public Builder dateBusinessNameAddressChange(String dateBusinessNameAddressChange) {
            this.dateBusinessNameAddressChange = dateBusinessNameAddressChange;
            return this;
        }

        /**
         * Setter for dateArrangeEnd.
         * @param  dateArrangeEnd  String value for dateArrangeEnd.
         * @return Builder
         */
        public Builder dateArrangeEnd(String dateArrangeEnd) {
            this.dateArrangeEnd = dateArrangeEnd;
            return this;
        }

        /**
         * Setter for dateQueryEnd.
         * @param  dateQueryEnd  String value for dateQueryEnd.
         * @return Builder
         */
        public Builder dateQueryEnd(String dateQueryEnd) {
            this.dateQueryEnd = dateQueryEnd;
            return this;
        }

        /**
         * Setter for dateClaimEnd.
         * @param  dateClaimEnd  String value for dateClaimEnd.
         * @return Builder
         */
        public Builder dateClaimEnd(String dateClaimEnd) {
            this.dateClaimEnd = dateClaimEnd;
            return this;
        }

        /**
         * Setter for previousBusinessName.
         * @param  previousBusinessName  String value for previousBusinessName.
         * @return Builder
         */
        public Builder previousBusinessName(String previousBusinessName) {
            this.previousBusinessName = previousBusinessName;
            return this;
        }

        /**
         * Setter for parentBusinessName.
         * @param  parentBusinessName  String value for parentBusinessName.
         * @return Builder
         */
        public Builder parentBusinessName(String parentBusinessName) {
            this.parentBusinessName = parentBusinessName;
            return this;
        }

        /**
         * Setter for parentLocation.
         * @param  parentLocation  LtdBusinessLocation value for parentLocation.
         * @return Builder
         */
        public Builder parentLocation(LtdBusinessLocation parentLocation) {
            this.parentLocation = parentLocation;
            return this;
        }

        /**
         * Setter for previousLocation.
         * @param  previousLocation  LtdBusinessLocation value for previousLocation.
         * @return Builder
         */
        public Builder previousLocation(LtdBusinessLocation previousLocation) {
            this.previousLocation = previousLocation;
            return this;
        }

        /**
         * Setter for businessWebsite.
         * @param  businessWebsite  String value for businessWebsite.
         * @return Builder
         */
        public Builder businessWebsite(String businessWebsite) {
            this.businessWebsite = businessWebsite;
            return this;
        }

        /**
         * Setter for contactEmail.
         * @param  contactEmail  String value for contactEmail.
         * @return Builder
         */
        public Builder contactEmail(String contactEmail) {
            this.contactEmail = contactEmail;
            return this;
        }

        /**
         * Setter for currentDirectors.
         * @param  currentDirectors  Integer value for currentDirectors.
         * @return Builder
         */
        public Builder currentDirectors(Integer currentDirectors) {
            this.currentDirectors = currentDirectors;
            return this;
        }

        /**
         * Setter for commercialCAISDirector.
         * @param  commercialCAISDirector  List of CommercialCAISDirector value for
         *         commercialCAISDirector.
         * @return Builder
         */
        public Builder commercialCAISDirector(
                List<CommercialCAISDirector> commercialCAISDirector) {
            this.commercialCAISDirector = commercialCAISDirector;
            return this;
        }

        /**
         * Builds a new {@link LtdCompanyCAISDetails} object using the set fields.
         * @return {@link LtdCompanyCAISDetails}
         */
        public LtdCompanyCAISDetails build() {
            return new LtdCompanyCAISDetails(accountState, accountStatus12, accountType, agreemtNum,
                    caisLastUpdate, companyType, currentBalance, defaultBalance, defaultDate,
                    monthsData, settlementDate, status1To2, status3To9, sourceCode, accountNumber,
                    primaryAccountIndicator, repayPeriod, balanceType, previousStatementBalance,
                    previousStatementIndicator, paymentFrequency, paymentAmount, paymentIndicator,
                    paymentCode, paymentType, creditLimit, creditTurnover, numberCashAdvances,
                    promotionActivity, rejection, mortgageFlag, valueCashAdvances, flagSetting,
                    bestCAISStatus, accountStartDate, worstCurrentStatus, worstHistoricalStatus,
                    worstStatus, collectionDate, ownDataFlag, airtime, noticeOfCorrectionRef,
                    businessName, additionalTradeStyle, vATNumber, sICCode, sICDescription1992,
                    nameChange, location, businessTelNum, businessAddressType, bankSortCode,
                    contactName, contactJob, monthlyPayment, dateLastStatus, dateFlagChange,
                    debenture, dateDebenture, previousCreditLimit, dateCreditLimitChange,
                    portfolioName, yearBusinessStart, numberCreditCard, previousRejection1,
                    previousRejection2, dateContactChange, contactTel, parentRegNum, parentTel,
                    parentVATNum, dateBusinessInfoChange, dateBusinessNameAddressChange,
                    dateArrangeEnd, dateQueryEnd, dateClaimEnd, previousBusinessName,
                    parentBusinessName, parentLocation, previousLocation, businessWebsite,
                    contactEmail, currentDirectors, commercialCAISDirector);
        }
    }
}
