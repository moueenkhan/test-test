/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for MortgageDetail type.
 */
public class MortgageDetail {
    private String alterationsToOrder;
    private String amountChargeIncreased;
    private String amountLatestIssue;
    private String amountSatisfied;
    private String amountSecured;
    private String chargeNumber;
    private String chargeType;
    private String chargeeText;
    private List<CommissionDetails> commissionDetails;
    private String creationDate;
    private String currency;
    private String dateFullySatisfied;
    private String deedDate;
    private List<String> executionDate;
    private List<ExecutorDetails> executorDetails;
    private String formType;
    private String fullySatisfiedIndicator;
    private String latestIssueDate;
    private List<LenderDetails> lenderDetails;
    private String lodgedDate;
    private List<NaturePartialSatisfaction> naturePartialSatisfaction;
    private Integer numberCommissionElements;
    private Integer numberExecutionDates;
    private Integer numberExecutors;
    private Integer numberLenders;
    private Integer numberPartialSatisfactionDataItems;
    private Integer numberPartialSatisfactionDates;
    private Integer numberReceiverAppointmentDates;
    private Integer numberReceiverCessationDates;
    private Integer numberTrustees;
    private List<String> partialSatisfactionDate;
    private String propertyAcquiredDate;
    private String propertyDetails;
    private String propertyReleasedFromCharge;
    private String publicationTown;
    private List<ReceiverAppointment> receiverAppointment;
    private List<ReceiverCessation> receiverCessation;
    private String registrationDate;
    private String regulatingProvisions;
    private String resolutionSeriesDate;
    private String restrictingProvisions;
    private String totalDebenture;
    private List<TrusteeDetails> trusteeDetails;

    /**
     * Default constructor.
     */
    public MortgageDetail() {
    }

    /**
     * Initialization constructor.
     * @param  alterationsToOrder  String value for alterationsToOrder.
     * @param  amountChargeIncreased  String value for amountChargeIncreased.
     * @param  amountLatestIssue  String value for amountLatestIssue.
     * @param  amountSatisfied  String value for amountSatisfied.
     * @param  amountSecured  String value for amountSecured.
     * @param  chargeNumber  String value for chargeNumber.
     * @param  chargeType  String value for chargeType.
     * @param  chargeeText  String value for chargeeText.
     * @param  commissionDetails  List of CommissionDetails value for commissionDetails.
     * @param  creationDate  String value for creationDate.
     * @param  currency  String value for currency.
     * @param  dateFullySatisfied  String value for dateFullySatisfied.
     * @param  deedDate  String value for deedDate.
     * @param  executionDate  List of String value for executionDate.
     * @param  executorDetails  List of ExecutorDetails value for executorDetails.
     * @param  formType  String value for formType.
     * @param  fullySatisfiedIndicator  String value for fullySatisfiedIndicator.
     * @param  latestIssueDate  String value for latestIssueDate.
     * @param  lenderDetails  List of LenderDetails value for lenderDetails.
     * @param  lodgedDate  String value for lodgedDate.
     * @param  naturePartialSatisfaction  List of NaturePartialSatisfaction value for
     *         naturePartialSatisfaction.
     * @param  numberCommissionElements  Integer value for numberCommissionElements.
     * @param  numberExecutionDates  Integer value for numberExecutionDates.
     * @param  numberExecutors  Integer value for numberExecutors.
     * @param  numberLenders  Integer value for numberLenders.
     * @param  numberPartialSatisfactionDataItems  Integer value for
     *         numberPartialSatisfactionDataItems.
     * @param  numberPartialSatisfactionDates  Integer value for numberPartialSatisfactionDates.
     * @param  numberReceiverAppointmentDates  Integer value for numberReceiverAppointmentDates.
     * @param  numberReceiverCessationDates  Integer value for numberReceiverCessationDates.
     * @param  numberTrustees  Integer value for numberTrustees.
     * @param  partialSatisfactionDate  List of String value for partialSatisfactionDate.
     * @param  propertyAcquiredDate  String value for propertyAcquiredDate.
     * @param  propertyDetails  String value for propertyDetails.
     * @param  propertyReleasedFromCharge  String value for propertyReleasedFromCharge.
     * @param  publicationTown  String value for publicationTown.
     * @param  receiverAppointment  List of ReceiverAppointment value for receiverAppointment.
     * @param  receiverCessation  List of ReceiverCessation value for receiverCessation.
     * @param  registrationDate  String value for registrationDate.
     * @param  regulatingProvisions  String value for regulatingProvisions.
     * @param  resolutionSeriesDate  String value for resolutionSeriesDate.
     * @param  restrictingProvisions  String value for restrictingProvisions.
     * @param  totalDebenture  String value for totalDebenture.
     * @param  trusteeDetails  List of TrusteeDetails value for trusteeDetails.
     */
    public MortgageDetail(
            String alterationsToOrder,
            String amountChargeIncreased,
            String amountLatestIssue,
            String amountSatisfied,
            String amountSecured,
            String chargeNumber,
            String chargeType,
            String chargeeText,
            List<CommissionDetails> commissionDetails,
            String creationDate,
            String currency,
            String dateFullySatisfied,
            String deedDate,
            List<String> executionDate,
            List<ExecutorDetails> executorDetails,
            String formType,
            String fullySatisfiedIndicator,
            String latestIssueDate,
            List<LenderDetails> lenderDetails,
            String lodgedDate,
            List<NaturePartialSatisfaction> naturePartialSatisfaction,
            Integer numberCommissionElements,
            Integer numberExecutionDates,
            Integer numberExecutors,
            Integer numberLenders,
            Integer numberPartialSatisfactionDataItems,
            Integer numberPartialSatisfactionDates,
            Integer numberReceiverAppointmentDates,
            Integer numberReceiverCessationDates,
            Integer numberTrustees,
            List<String> partialSatisfactionDate,
            String propertyAcquiredDate,
            String propertyDetails,
            String propertyReleasedFromCharge,
            String publicationTown,
            List<ReceiverAppointment> receiverAppointment,
            List<ReceiverCessation> receiverCessation,
            String registrationDate,
            String regulatingProvisions,
            String resolutionSeriesDate,
            String restrictingProvisions,
            String totalDebenture,
            List<TrusteeDetails> trusteeDetails) {
        this.alterationsToOrder = alterationsToOrder;
        this.amountChargeIncreased = amountChargeIncreased;
        this.amountLatestIssue = amountLatestIssue;
        this.amountSatisfied = amountSatisfied;
        this.amountSecured = amountSecured;
        this.chargeNumber = chargeNumber;
        this.chargeType = chargeType;
        this.chargeeText = chargeeText;
        this.commissionDetails = commissionDetails;
        this.creationDate = creationDate;
        this.currency = currency;
        this.dateFullySatisfied = dateFullySatisfied;
        this.deedDate = deedDate;
        this.executionDate = executionDate;
        this.executorDetails = executorDetails;
        this.formType = formType;
        this.fullySatisfiedIndicator = fullySatisfiedIndicator;
        this.latestIssueDate = latestIssueDate;
        this.lenderDetails = lenderDetails;
        this.lodgedDate = lodgedDate;
        this.naturePartialSatisfaction = naturePartialSatisfaction;
        this.numberCommissionElements = numberCommissionElements;
        this.numberExecutionDates = numberExecutionDates;
        this.numberExecutors = numberExecutors;
        this.numberLenders = numberLenders;
        this.numberPartialSatisfactionDataItems = numberPartialSatisfactionDataItems;
        this.numberPartialSatisfactionDates = numberPartialSatisfactionDates;
        this.numberReceiverAppointmentDates = numberReceiverAppointmentDates;
        this.numberReceiverCessationDates = numberReceiverCessationDates;
        this.numberTrustees = numberTrustees;
        this.partialSatisfactionDate = partialSatisfactionDate;
        this.propertyAcquiredDate = propertyAcquiredDate;
        this.propertyDetails = propertyDetails;
        this.propertyReleasedFromCharge = propertyReleasedFromCharge;
        this.publicationTown = publicationTown;
        this.receiverAppointment = receiverAppointment;
        this.receiverCessation = receiverCessation;
        this.registrationDate = registrationDate;
        this.regulatingProvisions = regulatingProvisions;
        this.resolutionSeriesDate = resolutionSeriesDate;
        this.restrictingProvisions = restrictingProvisions;
        this.totalDebenture = totalDebenture;
        this.trusteeDetails = trusteeDetails;
    }

    /**
     * Getter for AlterationsToOrder.
     * Textual description of the Alterations To Order for the mortgage for the limited company
     * @return Returns the String
     */
    @JsonGetter("AlterationsToOrder")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAlterationsToOrder() {
        return alterationsToOrder;
    }

    /**
     * Setter for AlterationsToOrder.
     * Textual description of the Alterations To Order for the mortgage for the limited company
     * @param alterationsToOrder Value for String
     */
    @JsonSetter("AlterationsToOrder")
    public void setAlterationsToOrder(String alterationsToOrder) {
        this.alterationsToOrder = alterationsToOrder;
    }

    /**
     * Getter for AmountChargeIncreased.
     * Textual description of the Amount the Charge Increased for the mortgage for the limited
     * company
     * @return Returns the String
     */
    @JsonGetter("AmountChargeIncreased")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAmountChargeIncreased() {
        return amountChargeIncreased;
    }

    /**
     * Setter for AmountChargeIncreased.
     * Textual description of the Amount the Charge Increased for the mortgage for the limited
     * company
     * @param amountChargeIncreased Value for String
     */
    @JsonSetter("AmountChargeIncreased")
    public void setAmountChargeIncreased(String amountChargeIncreased) {
        this.amountChargeIncreased = amountChargeIncreased;
    }

    /**
     * Getter for AmountLatestIssue.
     * Amount for latest issue for the mortgage
     * @return Returns the String
     */
    @JsonGetter("AmountLatestIssue")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAmountLatestIssue() {
        return amountLatestIssue;
    }

    /**
     * Setter for AmountLatestIssue.
     * Amount for latest issue for the mortgage
     * @param amountLatestIssue Value for String
     */
    @JsonSetter("AmountLatestIssue")
    public void setAmountLatestIssue(String amountLatestIssue) {
        this.amountLatestIssue = amountLatestIssue;
    }

    /**
     * Getter for AmountSatisfied.
     * Textual description of the Amount Satisfied for the mortgage for the limited company
     * @return Returns the String
     */
    @JsonGetter("AmountSatisfied")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAmountSatisfied() {
        return amountSatisfied;
    }

    /**
     * Setter for AmountSatisfied.
     * Textual description of the Amount Satisfied for the mortgage for the limited company
     * @param amountSatisfied Value for String
     */
    @JsonSetter("AmountSatisfied")
    public void setAmountSatisfied(String amountSatisfied) {
        this.amountSatisfied = amountSatisfied;
    }

    /**
     * Getter for AmountSecured.
     * Textual description of the Amount Secured for the mortgage for the limited company
     * @return Returns the String
     */
    @JsonGetter("AmountSecured")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAmountSecured() {
        return amountSecured;
    }

    /**
     * Setter for AmountSecured.
     * Textual description of the Amount Secured for the mortgage for the limited company
     * @param amountSecured Value for String
     */
    @JsonSetter("AmountSecured")
    public void setAmountSecured(String amountSecured) {
        this.amountSecured = amountSecured;
    }

    /**
     * Getter for ChargeNumber.
     * Charge Number for the mortgage
     * @return Returns the String
     */
    @JsonGetter("ChargeNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getChargeNumber() {
        return chargeNumber;
    }

    /**
     * Setter for ChargeNumber.
     * Charge Number for the mortgage
     * @param chargeNumber Value for String
     */
    @JsonSetter("ChargeNumber")
    public void setChargeNumber(String chargeNumber) {
        this.chargeNumber = chargeNumber;
    }

    /**
     * Getter for ChargeType.
     * Textual description of the Charge Type for the mortgage for the limited company
     * @return Returns the String
     */
    @JsonGetter("ChargeType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getChargeType() {
        return chargeType;
    }

    /**
     * Setter for ChargeType.
     * Textual description of the Charge Type for the mortgage for the limited company
     * @param chargeType Value for String
     */
    @JsonSetter("ChargeType")
    public void setChargeType(String chargeType) {
        this.chargeType = chargeType;
    }

    /**
     * Getter for ChargeeText.
     * Textual description of the Chargee Text for the mortgage for the limited company
     * @return Returns the String
     */
    @JsonGetter("ChargeeText")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getChargeeText() {
        return chargeeText;
    }

    /**
     * Setter for ChargeeText.
     * Textual description of the Chargee Text for the mortgage for the limited company
     * @param chargeeText Value for String
     */
    @JsonSetter("ChargeeText")
    public void setChargeeText(String chargeeText) {
        this.chargeeText = chargeeText;
    }

    /**
     * Getter for CommissionDetails.
     * @return Returns the List of CommissionDetails
     */
    @JsonGetter("CommissionDetails")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<CommissionDetails> getCommissionDetails() {
        return commissionDetails;
    }

    /**
     * Setter for CommissionDetails.
     * @param commissionDetails Value for List of CommissionDetails
     */
    @JsonSetter("CommissionDetails")
    public void setCommissionDetails(List<CommissionDetails> commissionDetails) {
        this.commissionDetails = commissionDetails;
    }

    /**
     * Getter for CreationDate.
     * The date that the mortgage for the limited company was created (yyyy-mm-dd)
     * @return Returns the String
     */
    @JsonGetter("CreationDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCreationDate() {
        return creationDate;
    }

    /**
     * Setter for CreationDate.
     * The date that the mortgage for the limited company was created (yyyy-mm-dd)
     * @param creationDate Value for String
     */
    @JsonSetter("CreationDate")
    public void setCreationDate(String creationDate) {
        this.creationDate = creationDate;
    }

    /**
     * Getter for Currency.
     * Code / symbol for the currency that the mortgage amount was secured in
     * @return Returns the String
     */
    @JsonGetter("Currency")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCurrency() {
        return currency;
    }

    /**
     * Setter for Currency.
     * Code / symbol for the currency that the mortgage amount was secured in
     * @param currency Value for String
     */
    @JsonSetter("Currency")
    public void setCurrency(String currency) {
        this.currency = currency;
    }

    /**
     * Getter for DateFullySatisfied.
     * The date that the mortgage for the limited company was fully satisfied (yyyy-mm-dd)
     * @return Returns the String
     */
    @JsonGetter("DateFullySatisfied")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDateFullySatisfied() {
        return dateFullySatisfied;
    }

    /**
     * Setter for DateFullySatisfied.
     * The date that the mortgage for the limited company was fully satisfied (yyyy-mm-dd)
     * @param dateFullySatisfied Value for String
     */
    @JsonSetter("DateFullySatisfied")
    public void setDateFullySatisfied(String dateFullySatisfied) {
        this.dateFullySatisfied = dateFullySatisfied;
    }

    /**
     * Getter for DeedDate.
     * The date that the property associated with the mortgage for the limited company was acquired
     * (yyyy-mm-dd)
     * @return Returns the String
     */
    @JsonGetter("DeedDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDeedDate() {
        return deedDate;
    }

    /**
     * Setter for DeedDate.
     * The date that the property associated with the mortgage for the limited company was acquired
     * (yyyy-mm-dd)
     * @param deedDate Value for String
     */
    @JsonSetter("DeedDate")
    public void setDeedDate(String deedDate) {
        this.deedDate = deedDate;
    }

    /**
     * Getter for ExecutionDate.
     * @return Returns the List of String
     */
    @JsonGetter("ExecutionDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getExecutionDate() {
        return executionDate;
    }

    /**
     * Setter for ExecutionDate.
     * @param executionDate Value for List of String
     */
    @JsonSetter("ExecutionDate")
    public void setExecutionDate(List<String> executionDate) {
        this.executionDate = executionDate;
    }

    /**
     * Getter for ExecutorDetails.
     * @return Returns the List of ExecutorDetails
     */
    @JsonGetter("ExecutorDetails")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<ExecutorDetails> getExecutorDetails() {
        return executorDetails;
    }

    /**
     * Setter for ExecutorDetails.
     * @param executorDetails Value for List of ExecutorDetails
     */
    @JsonSetter("ExecutorDetails")
    public void setExecutorDetails(List<ExecutorDetails> executorDetails) {
        this.executorDetails = executorDetails;
    }

    /**
     * Getter for FormType.
     * Input Form Type for the mortgage - Refer to Mortgage Form Types worksheet
     * @return Returns the String
     */
    @JsonGetter("FormType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getFormType() {
        return formType;
    }

    /**
     * Setter for FormType.
     * Input Form Type for the mortgage - Refer to Mortgage Form Types worksheet
     * @param formType Value for String
     */
    @JsonSetter("FormType")
    public void setFormType(String formType) {
        this.formType = formType;
    }

    /**
     * Getter for FullySatisfiedIndicator.
     * Fully Satisfied Indicator - F = Fully satisfied; N = Not satisfied
     * @return Returns the String
     */
    @JsonGetter("FullySatisfiedIndicator")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getFullySatisfiedIndicator() {
        return fullySatisfiedIndicator;
    }

    /**
     * Setter for FullySatisfiedIndicator.
     * Fully Satisfied Indicator - F = Fully satisfied; N = Not satisfied
     * @param fullySatisfiedIndicator Value for String
     */
    @JsonSetter("FullySatisfiedIndicator")
    public void setFullySatisfiedIndicator(String fullySatisfiedIndicator) {
        this.fullySatisfiedIndicator = fullySatisfiedIndicator;
    }

    /**
     * Getter for LatestIssueDate.
     * Latest Issue Date for the mortgage for the limited company (yyyy-mm-dd)
     * @return Returns the String
     */
    @JsonGetter("LatestIssueDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLatestIssueDate() {
        return latestIssueDate;
    }

    /**
     * Setter for LatestIssueDate.
     * Latest Issue Date for the mortgage for the limited company (yyyy-mm-dd)
     * @param latestIssueDate Value for String
     */
    @JsonSetter("LatestIssueDate")
    public void setLatestIssueDate(String latestIssueDate) {
        this.latestIssueDate = latestIssueDate;
    }

    /**
     * Getter for LenderDetails.
     * @return Returns the List of LenderDetails
     */
    @JsonGetter("LenderDetails")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<LenderDetails> getLenderDetails() {
        return lenderDetails;
    }

    /**
     * Setter for LenderDetails.
     * @param lenderDetails Value for List of LenderDetails
     */
    @JsonSetter("LenderDetails")
    public void setLenderDetails(List<LenderDetails> lenderDetails) {
        this.lenderDetails = lenderDetails;
    }

    /**
     * Getter for LodgedDate.
     * The date that the mortgage for the limited company was lodged (yyyy-mm-dd)
     * @return Returns the String
     */
    @JsonGetter("LodgedDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLodgedDate() {
        return lodgedDate;
    }

    /**
     * Setter for LodgedDate.
     * The date that the mortgage for the limited company was lodged (yyyy-mm-dd)
     * @param lodgedDate Value for String
     */
    @JsonSetter("LodgedDate")
    public void setLodgedDate(String lodgedDate) {
        this.lodgedDate = lodgedDate;
    }

    /**
     * Getter for NaturePartialSatisfaction.
     * @return Returns the List of NaturePartialSatisfaction
     */
    @JsonGetter("NaturePartialSatisfaction")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<NaturePartialSatisfaction> getNaturePartialSatisfaction() {
        return naturePartialSatisfaction;
    }

    /**
     * Setter for NaturePartialSatisfaction.
     * @param naturePartialSatisfaction Value for List of NaturePartialSatisfaction
     */
    @JsonSetter("NaturePartialSatisfaction")
    public void setNaturePartialSatisfaction(List<NaturePartialSatisfaction> naturePartialSatisfaction) {
        this.naturePartialSatisfaction = naturePartialSatisfaction;
    }

    /**
     * Getter for NumberCommissionElements.
     * Number of Commission Elements recorded for the mortgage for the limited company
     * @return Returns the Integer
     */
    @JsonGetter("NumberCommissionElements")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumberCommissionElements() {
        return numberCommissionElements;
    }

    /**
     * Setter for NumberCommissionElements.
     * Number of Commission Elements recorded for the mortgage for the limited company
     * @param numberCommissionElements Value for Integer
     */
    @JsonSetter("NumberCommissionElements")
    public void setNumberCommissionElements(Integer numberCommissionElements) {
        this.numberCommissionElements = numberCommissionElements;
    }

    /**
     * Getter for NumberExecutionDates.
     * Number of Execution Dates recorded for the mortgage for the limited company
     * @return Returns the Integer
     */
    @JsonGetter("NumberExecutionDates")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumberExecutionDates() {
        return numberExecutionDates;
    }

    /**
     * Setter for NumberExecutionDates.
     * Number of Execution Dates recorded for the mortgage for the limited company
     * @param numberExecutionDates Value for Integer
     */
    @JsonSetter("NumberExecutionDates")
    public void setNumberExecutionDates(Integer numberExecutionDates) {
        this.numberExecutionDates = numberExecutionDates;
    }

    /**
     * Getter for NumberExecutors.
     * Number of Executors recorded for the mortgage for the limited company
     * @return Returns the Integer
     */
    @JsonGetter("NumberExecutors")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumberExecutors() {
        return numberExecutors;
    }

    /**
     * Setter for NumberExecutors.
     * Number of Executors recorded for the mortgage for the limited company
     * @param numberExecutors Value for Integer
     */
    @JsonSetter("NumberExecutors")
    public void setNumberExecutors(Integer numberExecutors) {
        this.numberExecutors = numberExecutors;
    }

    /**
     * Getter for NumberLenders.
     * Number of Lenders recorded for the mortgage for the limited company
     * @return Returns the Integer
     */
    @JsonGetter("NumberLenders")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumberLenders() {
        return numberLenders;
    }

    /**
     * Setter for NumberLenders.
     * Number of Lenders recorded for the mortgage for the limited company
     * @param numberLenders Value for Integer
     */
    @JsonSetter("NumberLenders")
    public void setNumberLenders(Integer numberLenders) {
        this.numberLenders = numberLenders;
    }

    /**
     * Getter for NumberPartialSatisfactionDataItems.
     * Number of Partial Satisfaction Data Items recorded for the mortgage for the limited company
     * @return Returns the Integer
     */
    @JsonGetter("NumberPartialSatisfactionDataItems")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumberPartialSatisfactionDataItems() {
        return numberPartialSatisfactionDataItems;
    }

    /**
     * Setter for NumberPartialSatisfactionDataItems.
     * Number of Partial Satisfaction Data Items recorded for the mortgage for the limited company
     * @param numberPartialSatisfactionDataItems Value for Integer
     */
    @JsonSetter("NumberPartialSatisfactionDataItems")
    public void setNumberPartialSatisfactionDataItems(Integer numberPartialSatisfactionDataItems) {
        this.numberPartialSatisfactionDataItems = numberPartialSatisfactionDataItems;
    }

    /**
     * Getter for NumberPartialSatisfactionDates.
     * Number of Partial Satisfaction Dates recorded for the mortgage for the limited company
     * @return Returns the Integer
     */
    @JsonGetter("NumberPartialSatisfactionDates")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumberPartialSatisfactionDates() {
        return numberPartialSatisfactionDates;
    }

    /**
     * Setter for NumberPartialSatisfactionDates.
     * Number of Partial Satisfaction Dates recorded for the mortgage for the limited company
     * @param numberPartialSatisfactionDates Value for Integer
     */
    @JsonSetter("NumberPartialSatisfactionDates")
    public void setNumberPartialSatisfactionDates(Integer numberPartialSatisfactionDates) {
        this.numberPartialSatisfactionDates = numberPartialSatisfactionDates;
    }

    /**
     * Getter for NumberReceiverAppointmentDates.
     * Number of Receiver Appointment Dates recorded for the mortgage for the limited company
     * @return Returns the Integer
     */
    @JsonGetter("NumberReceiverAppointmentDates")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumberReceiverAppointmentDates() {
        return numberReceiverAppointmentDates;
    }

    /**
     * Setter for NumberReceiverAppointmentDates.
     * Number of Receiver Appointment Dates recorded for the mortgage for the limited company
     * @param numberReceiverAppointmentDates Value for Integer
     */
    @JsonSetter("NumberReceiverAppointmentDates")
    public void setNumberReceiverAppointmentDates(Integer numberReceiverAppointmentDates) {
        this.numberReceiverAppointmentDates = numberReceiverAppointmentDates;
    }

    /**
     * Getter for NumberReceiverCessationDates.
     * Number of Receiver Cessation Dates recorded for the mortgage for the limited company
     * @return Returns the Integer
     */
    @JsonGetter("NumberReceiverCessationDates")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumberReceiverCessationDates() {
        return numberReceiverCessationDates;
    }

    /**
     * Setter for NumberReceiverCessationDates.
     * Number of Receiver Cessation Dates recorded for the mortgage for the limited company
     * @param numberReceiverCessationDates Value for Integer
     */
    @JsonSetter("NumberReceiverCessationDates")
    public void setNumberReceiverCessationDates(Integer numberReceiverCessationDates) {
        this.numberReceiverCessationDates = numberReceiverCessationDates;
    }

    /**
     * Getter for NumberTrustees.
     * Number of Trustees recorded for the mortgage for the limited company
     * @return Returns the Integer
     */
    @JsonGetter("NumberTrustees")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumberTrustees() {
        return numberTrustees;
    }

    /**
     * Setter for NumberTrustees.
     * Number of Trustees recorded for the mortgage for the limited company
     * @param numberTrustees Value for Integer
     */
    @JsonSetter("NumberTrustees")
    public void setNumberTrustees(Integer numberTrustees) {
        this.numberTrustees = numberTrustees;
    }

    /**
     * Getter for PartialSatisfactionDate.
     * @return Returns the List of String
     */
    @JsonGetter("PartialSatisfactionDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getPartialSatisfactionDate() {
        return partialSatisfactionDate;
    }

    /**
     * Setter for PartialSatisfactionDate.
     * @param partialSatisfactionDate Value for List of String
     */
    @JsonSetter("PartialSatisfactionDate")
    public void setPartialSatisfactionDate(List<String> partialSatisfactionDate) {
        this.partialSatisfactionDate = partialSatisfactionDate;
    }

    /**
     * Getter for PropertyAcquiredDate.
     * The date that the property associated with the mortgage for the limited company was acquired
     * (yyyy-mm-dd)
     * @return Returns the String
     */
    @JsonGetter("PropertyAcquiredDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPropertyAcquiredDate() {
        return propertyAcquiredDate;
    }

    /**
     * Setter for PropertyAcquiredDate.
     * The date that the property associated with the mortgage for the limited company was acquired
     * (yyyy-mm-dd)
     * @param propertyAcquiredDate Value for String
     */
    @JsonSetter("PropertyAcquiredDate")
    public void setPropertyAcquiredDate(String propertyAcquiredDate) {
        this.propertyAcquiredDate = propertyAcquiredDate;
    }

    /**
     * Getter for PropertyDetails.
     * Textual description of the Property Details for the mortgage for the limited company
     * @return Returns the String
     */
    @JsonGetter("PropertyDetails")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPropertyDetails() {
        return propertyDetails;
    }

    /**
     * Setter for PropertyDetails.
     * Textual description of the Property Details for the mortgage for the limited company
     * @param propertyDetails Value for String
     */
    @JsonSetter("PropertyDetails")
    public void setPropertyDetails(String propertyDetails) {
        this.propertyDetails = propertyDetails;
    }

    /**
     * Getter for PropertyReleasedFromCharge.
     * Textual description of the Property Released From Charge for the mortgage for the limited
     * company
     * @return Returns the String
     */
    @JsonGetter("PropertyReleasedFromCharge")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPropertyReleasedFromCharge() {
        return propertyReleasedFromCharge;
    }

    /**
     * Setter for PropertyReleasedFromCharge.
     * Textual description of the Property Released From Charge for the mortgage for the limited
     * company
     * @param propertyReleasedFromCharge Value for String
     */
    @JsonSetter("PropertyReleasedFromCharge")
    public void setPropertyReleasedFromCharge(String propertyReleasedFromCharge) {
        this.propertyReleasedFromCharge = propertyReleasedFromCharge;
    }

    /**
     * Getter for PublicationTown.
     * Mortgage registration town indicator - B = Belfast; C = Cardiff; E = Edinburgh; L = London
     * @return Returns the String
     */
    @JsonGetter("PublicationTown")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPublicationTown() {
        return publicationTown;
    }

    /**
     * Setter for PublicationTown.
     * Mortgage registration town indicator - B = Belfast; C = Cardiff; E = Edinburgh; L = London
     * @param publicationTown Value for String
     */
    @JsonSetter("PublicationTown")
    public void setPublicationTown(String publicationTown) {
        this.publicationTown = publicationTown;
    }

    /**
     * Getter for ReceiverAppointment.
     * @return Returns the List of ReceiverAppointment
     */
    @JsonGetter("ReceiverAppointment")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<ReceiverAppointment> getReceiverAppointment() {
        return receiverAppointment;
    }

    /**
     * Setter for ReceiverAppointment.
     * @param receiverAppointment Value for List of ReceiverAppointment
     */
    @JsonSetter("ReceiverAppointment")
    public void setReceiverAppointment(List<ReceiverAppointment> receiverAppointment) {
        this.receiverAppointment = receiverAppointment;
    }

    /**
     * Getter for ReceiverCessation.
     * @return Returns the List of ReceiverCessation
     */
    @JsonGetter("ReceiverCessation")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<ReceiverCessation> getReceiverCessation() {
        return receiverCessation;
    }

    /**
     * Setter for ReceiverCessation.
     * @param receiverCessation Value for List of ReceiverCessation
     */
    @JsonSetter("ReceiverCessation")
    public void setReceiverCessation(List<ReceiverCessation> receiverCessation) {
        this.receiverCessation = receiverCessation;
    }

    /**
     * Getter for RegistrationDate.
     * The date that the mortgage for the limited company was registered (yyyy-mm-dd)
     * @return Returns the String
     */
    @JsonGetter("RegistrationDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getRegistrationDate() {
        return registrationDate;
    }

    /**
     * Setter for RegistrationDate.
     * The date that the mortgage for the limited company was registered (yyyy-mm-dd)
     * @param registrationDate Value for String
     */
    @JsonSetter("RegistrationDate")
    public void setRegistrationDate(String registrationDate) {
        this.registrationDate = registrationDate;
    }

    /**
     * Getter for RegulatingProvisions.
     * Textual description of the Regulating Provisions for the mortgage for the limited company
     * @return Returns the String
     */
    @JsonGetter("RegulatingProvisions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getRegulatingProvisions() {
        return regulatingProvisions;
    }

    /**
     * Setter for RegulatingProvisions.
     * Textual description of the Regulating Provisions for the mortgage for the limited company
     * @param regulatingProvisions Value for String
     */
    @JsonSetter("RegulatingProvisions")
    public void setRegulatingProvisions(String regulatingProvisions) {
        this.regulatingProvisions = regulatingProvisions;
    }

    /**
     * Getter for ResolutionSeriesDate.
     * Resolution Series Date for the mortgage for the limited company (yyyy-mm-dd)
     * @return Returns the String
     */
    @JsonGetter("ResolutionSeriesDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getResolutionSeriesDate() {
        return resolutionSeriesDate;
    }

    /**
     * Setter for ResolutionSeriesDate.
     * Resolution Series Date for the mortgage for the limited company (yyyy-mm-dd)
     * @param resolutionSeriesDate Value for String
     */
    @JsonSetter("ResolutionSeriesDate")
    public void setResolutionSeriesDate(String resolutionSeriesDate) {
        this.resolutionSeriesDate = resolutionSeriesDate;
    }

    /**
     * Getter for RestrictingProvisions.
     * Textual description of the Restricting Provisions for the mortgage for the limited company
     * @return Returns the String
     */
    @JsonGetter("RestrictingProvisions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getRestrictingProvisions() {
        return restrictingProvisions;
    }

    /**
     * Setter for RestrictingProvisions.
     * Textual description of the Restricting Provisions for the mortgage for the limited company
     * @param restrictingProvisions Value for String
     */
    @JsonSetter("RestrictingProvisions")
    public void setRestrictingProvisions(String restrictingProvisions) {
        this.restrictingProvisions = restrictingProvisions;
    }

    /**
     * Getter for TotalDebenture.
     * Total amount of debenture secured for the mortgage
     * @return Returns the String
     */
    @JsonGetter("TotalDebenture")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTotalDebenture() {
        return totalDebenture;
    }

    /**
     * Setter for TotalDebenture.
     * Total amount of debenture secured for the mortgage
     * @param totalDebenture Value for String
     */
    @JsonSetter("TotalDebenture")
    public void setTotalDebenture(String totalDebenture) {
        this.totalDebenture = totalDebenture;
    }

    /**
     * Getter for TrusteeDetails.
     * @return Returns the List of TrusteeDetails
     */
    @JsonGetter("TrusteeDetails")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<TrusteeDetails> getTrusteeDetails() {
        return trusteeDetails;
    }

    /**
     * Setter for TrusteeDetails.
     * @param trusteeDetails Value for List of TrusteeDetails
     */
    @JsonSetter("TrusteeDetails")
    public void setTrusteeDetails(List<TrusteeDetails> trusteeDetails) {
        this.trusteeDetails = trusteeDetails;
    }

    /**
     * Converts this MortgageDetail into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "MortgageDetail [" + "alterationsToOrder=" + alterationsToOrder
                + ", amountChargeIncreased=" + amountChargeIncreased + ", amountLatestIssue="
                + amountLatestIssue + ", amountSatisfied=" + amountSatisfied + ", amountSecured="
                + amountSecured + ", chargeNumber=" + chargeNumber + ", chargeType=" + chargeType
                + ", chargeeText=" + chargeeText + ", commissionDetails=" + commissionDetails
                + ", creationDate=" + creationDate + ", currency=" + currency
                + ", dateFullySatisfied=" + dateFullySatisfied + ", deedDate=" + deedDate
                + ", executionDate=" + executionDate + ", executorDetails=" + executorDetails
                + ", formType=" + formType + ", fullySatisfiedIndicator=" + fullySatisfiedIndicator
                + ", latestIssueDate=" + latestIssueDate + ", lenderDetails=" + lenderDetails
                + ", lodgedDate=" + lodgedDate + ", naturePartialSatisfaction="
                + naturePartialSatisfaction + ", numberCommissionElements="
                + numberCommissionElements + ", numberExecutionDates=" + numberExecutionDates
                + ", numberExecutors=" + numberExecutors + ", numberLenders=" + numberLenders
                + ", numberPartialSatisfactionDataItems=" + numberPartialSatisfactionDataItems
                + ", numberPartialSatisfactionDates=" + numberPartialSatisfactionDates
                + ", numberReceiverAppointmentDates=" + numberReceiverAppointmentDates
                + ", numberReceiverCessationDates=" + numberReceiverCessationDates
                + ", numberTrustees=" + numberTrustees + ", partialSatisfactionDate="
                + partialSatisfactionDate + ", propertyAcquiredDate=" + propertyAcquiredDate
                + ", propertyDetails=" + propertyDetails + ", propertyReleasedFromCharge="
                + propertyReleasedFromCharge + ", publicationTown=" + publicationTown
                + ", receiverAppointment=" + receiverAppointment + ", receiverCessation="
                + receiverCessation + ", registrationDate=" + registrationDate
                + ", regulatingProvisions=" + regulatingProvisions + ", resolutionSeriesDate="
                + resolutionSeriesDate + ", restrictingProvisions=" + restrictingProvisions
                + ", totalDebenture=" + totalDebenture + ", trusteeDetails=" + trusteeDetails + "]";
    }

    /**
     * Builds a new {@link MortgageDetail.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link MortgageDetail.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .alterationsToOrder(getAlterationsToOrder())
                .amountChargeIncreased(getAmountChargeIncreased())
                .amountLatestIssue(getAmountLatestIssue())
                .amountSatisfied(getAmountSatisfied())
                .amountSecured(getAmountSecured())
                .chargeNumber(getChargeNumber())
                .chargeType(getChargeType())
                .chargeeText(getChargeeText())
                .commissionDetails(getCommissionDetails())
                .creationDate(getCreationDate())
                .currency(getCurrency())
                .dateFullySatisfied(getDateFullySatisfied())
                .deedDate(getDeedDate())
                .executionDate(getExecutionDate())
                .executorDetails(getExecutorDetails())
                .formType(getFormType())
                .fullySatisfiedIndicator(getFullySatisfiedIndicator())
                .latestIssueDate(getLatestIssueDate())
                .lenderDetails(getLenderDetails())
                .lodgedDate(getLodgedDate())
                .naturePartialSatisfaction(getNaturePartialSatisfaction())
                .numberCommissionElements(getNumberCommissionElements())
                .numberExecutionDates(getNumberExecutionDates())
                .numberExecutors(getNumberExecutors())
                .numberLenders(getNumberLenders())
                .numberPartialSatisfactionDataItems(getNumberPartialSatisfactionDataItems())
                .numberPartialSatisfactionDates(getNumberPartialSatisfactionDates())
                .numberReceiverAppointmentDates(getNumberReceiverAppointmentDates())
                .numberReceiverCessationDates(getNumberReceiverCessationDates())
                .numberTrustees(getNumberTrustees())
                .partialSatisfactionDate(getPartialSatisfactionDate())
                .propertyAcquiredDate(getPropertyAcquiredDate())
                .propertyDetails(getPropertyDetails())
                .propertyReleasedFromCharge(getPropertyReleasedFromCharge())
                .publicationTown(getPublicationTown())
                .receiverAppointment(getReceiverAppointment())
                .receiverCessation(getReceiverCessation())
                .registrationDate(getRegistrationDate())
                .regulatingProvisions(getRegulatingProvisions())
                .resolutionSeriesDate(getResolutionSeriesDate())
                .restrictingProvisions(getRestrictingProvisions())
                .totalDebenture(getTotalDebenture())
                .trusteeDetails(getTrusteeDetails());
        return builder;
    }

    /**
     * Class to build instances of {@link MortgageDetail}.
     */
    public static class Builder {
        private String alterationsToOrder;
        private String amountChargeIncreased;
        private String amountLatestIssue;
        private String amountSatisfied;
        private String amountSecured;
        private String chargeNumber;
        private String chargeType;
        private String chargeeText;
        private List<CommissionDetails> commissionDetails;
        private String creationDate;
        private String currency;
        private String dateFullySatisfied;
        private String deedDate;
        private List<String> executionDate;
        private List<ExecutorDetails> executorDetails;
        private String formType;
        private String fullySatisfiedIndicator;
        private String latestIssueDate;
        private List<LenderDetails> lenderDetails;
        private String lodgedDate;
        private List<NaturePartialSatisfaction> naturePartialSatisfaction;
        private Integer numberCommissionElements;
        private Integer numberExecutionDates;
        private Integer numberExecutors;
        private Integer numberLenders;
        private Integer numberPartialSatisfactionDataItems;
        private Integer numberPartialSatisfactionDates;
        private Integer numberReceiverAppointmentDates;
        private Integer numberReceiverCessationDates;
        private Integer numberTrustees;
        private List<String> partialSatisfactionDate;
        private String propertyAcquiredDate;
        private String propertyDetails;
        private String propertyReleasedFromCharge;
        private String publicationTown;
        private List<ReceiverAppointment> receiverAppointment;
        private List<ReceiverCessation> receiverCessation;
        private String registrationDate;
        private String regulatingProvisions;
        private String resolutionSeriesDate;
        private String restrictingProvisions;
        private String totalDebenture;
        private List<TrusteeDetails> trusteeDetails;



        /**
         * Setter for alterationsToOrder.
         * @param  alterationsToOrder  String value for alterationsToOrder.
         * @return Builder
         */
        public Builder alterationsToOrder(String alterationsToOrder) {
            this.alterationsToOrder = alterationsToOrder;
            return this;
        }

        /**
         * Setter for amountChargeIncreased.
         * @param  amountChargeIncreased  String value for amountChargeIncreased.
         * @return Builder
         */
        public Builder amountChargeIncreased(String amountChargeIncreased) {
            this.amountChargeIncreased = amountChargeIncreased;
            return this;
        }

        /**
         * Setter for amountLatestIssue.
         * @param  amountLatestIssue  String value for amountLatestIssue.
         * @return Builder
         */
        public Builder amountLatestIssue(String amountLatestIssue) {
            this.amountLatestIssue = amountLatestIssue;
            return this;
        }

        /**
         * Setter for amountSatisfied.
         * @param  amountSatisfied  String value for amountSatisfied.
         * @return Builder
         */
        public Builder amountSatisfied(String amountSatisfied) {
            this.amountSatisfied = amountSatisfied;
            return this;
        }

        /**
         * Setter for amountSecured.
         * @param  amountSecured  String value for amountSecured.
         * @return Builder
         */
        public Builder amountSecured(String amountSecured) {
            this.amountSecured = amountSecured;
            return this;
        }

        /**
         * Setter for chargeNumber.
         * @param  chargeNumber  String value for chargeNumber.
         * @return Builder
         */
        public Builder chargeNumber(String chargeNumber) {
            this.chargeNumber = chargeNumber;
            return this;
        }

        /**
         * Setter for chargeType.
         * @param  chargeType  String value for chargeType.
         * @return Builder
         */
        public Builder chargeType(String chargeType) {
            this.chargeType = chargeType;
            return this;
        }

        /**
         * Setter for chargeeText.
         * @param  chargeeText  String value for chargeeText.
         * @return Builder
         */
        public Builder chargeeText(String chargeeText) {
            this.chargeeText = chargeeText;
            return this;
        }

        /**
         * Setter for commissionDetails.
         * @param  commissionDetails  List of CommissionDetails value for commissionDetails.
         * @return Builder
         */
        public Builder commissionDetails(List<CommissionDetails> commissionDetails) {
            this.commissionDetails = commissionDetails;
            return this;
        }

        /**
         * Setter for creationDate.
         * @param  creationDate  String value for creationDate.
         * @return Builder
         */
        public Builder creationDate(String creationDate) {
            this.creationDate = creationDate;
            return this;
        }

        /**
         * Setter for currency.
         * @param  currency  String value for currency.
         * @return Builder
         */
        public Builder currency(String currency) {
            this.currency = currency;
            return this;
        }

        /**
         * Setter for dateFullySatisfied.
         * @param  dateFullySatisfied  String value for dateFullySatisfied.
         * @return Builder
         */
        public Builder dateFullySatisfied(String dateFullySatisfied) {
            this.dateFullySatisfied = dateFullySatisfied;
            return this;
        }

        /**
         * Setter for deedDate.
         * @param  deedDate  String value for deedDate.
         * @return Builder
         */
        public Builder deedDate(String deedDate) {
            this.deedDate = deedDate;
            return this;
        }

        /**
         * Setter for executionDate.
         * @param  executionDate  List of String value for executionDate.
         * @return Builder
         */
        public Builder executionDate(List<String> executionDate) {
            this.executionDate = executionDate;
            return this;
        }

        /**
         * Setter for executorDetails.
         * @param  executorDetails  List of ExecutorDetails value for executorDetails.
         * @return Builder
         */
        public Builder executorDetails(List<ExecutorDetails> executorDetails) {
            this.executorDetails = executorDetails;
            return this;
        }

        /**
         * Setter for formType.
         * @param  formType  String value for formType.
         * @return Builder
         */
        public Builder formType(String formType) {
            this.formType = formType;
            return this;
        }

        /**
         * Setter for fullySatisfiedIndicator.
         * @param  fullySatisfiedIndicator  String value for fullySatisfiedIndicator.
         * @return Builder
         */
        public Builder fullySatisfiedIndicator(String fullySatisfiedIndicator) {
            this.fullySatisfiedIndicator = fullySatisfiedIndicator;
            return this;
        }

        /**
         * Setter for latestIssueDate.
         * @param  latestIssueDate  String value for latestIssueDate.
         * @return Builder
         */
        public Builder latestIssueDate(String latestIssueDate) {
            this.latestIssueDate = latestIssueDate;
            return this;
        }

        /**
         * Setter for lenderDetails.
         * @param  lenderDetails  List of LenderDetails value for lenderDetails.
         * @return Builder
         */
        public Builder lenderDetails(List<LenderDetails> lenderDetails) {
            this.lenderDetails = lenderDetails;
            return this;
        }

        /**
         * Setter for lodgedDate.
         * @param  lodgedDate  String value for lodgedDate.
         * @return Builder
         */
        public Builder lodgedDate(String lodgedDate) {
            this.lodgedDate = lodgedDate;
            return this;
        }

        /**
         * Setter for naturePartialSatisfaction.
         * @param  naturePartialSatisfaction  List of NaturePartialSatisfaction value for
         *         naturePartialSatisfaction.
         * @return Builder
         */
        public Builder naturePartialSatisfaction(
                List<NaturePartialSatisfaction> naturePartialSatisfaction) {
            this.naturePartialSatisfaction = naturePartialSatisfaction;
            return this;
        }

        /**
         * Setter for numberCommissionElements.
         * @param  numberCommissionElements  Integer value for numberCommissionElements.
         * @return Builder
         */
        public Builder numberCommissionElements(Integer numberCommissionElements) {
            this.numberCommissionElements = numberCommissionElements;
            return this;
        }

        /**
         * Setter for numberExecutionDates.
         * @param  numberExecutionDates  Integer value for numberExecutionDates.
         * @return Builder
         */
        public Builder numberExecutionDates(Integer numberExecutionDates) {
            this.numberExecutionDates = numberExecutionDates;
            return this;
        }

        /**
         * Setter for numberExecutors.
         * @param  numberExecutors  Integer value for numberExecutors.
         * @return Builder
         */
        public Builder numberExecutors(Integer numberExecutors) {
            this.numberExecutors = numberExecutors;
            return this;
        }

        /**
         * Setter for numberLenders.
         * @param  numberLenders  Integer value for numberLenders.
         * @return Builder
         */
        public Builder numberLenders(Integer numberLenders) {
            this.numberLenders = numberLenders;
            return this;
        }

        /**
         * Setter for numberPartialSatisfactionDataItems.
         * @param  numberPartialSatisfactionDataItems  Integer value for
         *         numberPartialSatisfactionDataItems.
         * @return Builder
         */
        public Builder numberPartialSatisfactionDataItems(
                Integer numberPartialSatisfactionDataItems) {
            this.numberPartialSatisfactionDataItems = numberPartialSatisfactionDataItems;
            return this;
        }

        /**
         * Setter for numberPartialSatisfactionDates.
         * @param  numberPartialSatisfactionDates  Integer value for numberPartialSatisfactionDates.
         * @return Builder
         */
        public Builder numberPartialSatisfactionDates(Integer numberPartialSatisfactionDates) {
            this.numberPartialSatisfactionDates = numberPartialSatisfactionDates;
            return this;
        }

        /**
         * Setter for numberReceiverAppointmentDates.
         * @param  numberReceiverAppointmentDates  Integer value for numberReceiverAppointmentDates.
         * @return Builder
         */
        public Builder numberReceiverAppointmentDates(Integer numberReceiverAppointmentDates) {
            this.numberReceiverAppointmentDates = numberReceiverAppointmentDates;
            return this;
        }

        /**
         * Setter for numberReceiverCessationDates.
         * @param  numberReceiverCessationDates  Integer value for numberReceiverCessationDates.
         * @return Builder
         */
        public Builder numberReceiverCessationDates(Integer numberReceiverCessationDates) {
            this.numberReceiverCessationDates = numberReceiverCessationDates;
            return this;
        }

        /**
         * Setter for numberTrustees.
         * @param  numberTrustees  Integer value for numberTrustees.
         * @return Builder
         */
        public Builder numberTrustees(Integer numberTrustees) {
            this.numberTrustees = numberTrustees;
            return this;
        }

        /**
         * Setter for partialSatisfactionDate.
         * @param  partialSatisfactionDate  List of String value for partialSatisfactionDate.
         * @return Builder
         */
        public Builder partialSatisfactionDate(List<String> partialSatisfactionDate) {
            this.partialSatisfactionDate = partialSatisfactionDate;
            return this;
        }

        /**
         * Setter for propertyAcquiredDate.
         * @param  propertyAcquiredDate  String value for propertyAcquiredDate.
         * @return Builder
         */
        public Builder propertyAcquiredDate(String propertyAcquiredDate) {
            this.propertyAcquiredDate = propertyAcquiredDate;
            return this;
        }

        /**
         * Setter for propertyDetails.
         * @param  propertyDetails  String value for propertyDetails.
         * @return Builder
         */
        public Builder propertyDetails(String propertyDetails) {
            this.propertyDetails = propertyDetails;
            return this;
        }

        /**
         * Setter for propertyReleasedFromCharge.
         * @param  propertyReleasedFromCharge  String value for propertyReleasedFromCharge.
         * @return Builder
         */
        public Builder propertyReleasedFromCharge(String propertyReleasedFromCharge) {
            this.propertyReleasedFromCharge = propertyReleasedFromCharge;
            return this;
        }

        /**
         * Setter for publicationTown.
         * @param  publicationTown  String value for publicationTown.
         * @return Builder
         */
        public Builder publicationTown(String publicationTown) {
            this.publicationTown = publicationTown;
            return this;
        }

        /**
         * Setter for receiverAppointment.
         * @param  receiverAppointment  List of ReceiverAppointment value for receiverAppointment.
         * @return Builder
         */
        public Builder receiverAppointment(List<ReceiverAppointment> receiverAppointment) {
            this.receiverAppointment = receiverAppointment;
            return this;
        }

        /**
         * Setter for receiverCessation.
         * @param  receiverCessation  List of ReceiverCessation value for receiverCessation.
         * @return Builder
         */
        public Builder receiverCessation(List<ReceiverCessation> receiverCessation) {
            this.receiverCessation = receiverCessation;
            return this;
        }

        /**
         * Setter for registrationDate.
         * @param  registrationDate  String value for registrationDate.
         * @return Builder
         */
        public Builder registrationDate(String registrationDate) {
            this.registrationDate = registrationDate;
            return this;
        }

        /**
         * Setter for regulatingProvisions.
         * @param  regulatingProvisions  String value for regulatingProvisions.
         * @return Builder
         */
        public Builder regulatingProvisions(String regulatingProvisions) {
            this.regulatingProvisions = regulatingProvisions;
            return this;
        }

        /**
         * Setter for resolutionSeriesDate.
         * @param  resolutionSeriesDate  String value for resolutionSeriesDate.
         * @return Builder
         */
        public Builder resolutionSeriesDate(String resolutionSeriesDate) {
            this.resolutionSeriesDate = resolutionSeriesDate;
            return this;
        }

        /**
         * Setter for restrictingProvisions.
         * @param  restrictingProvisions  String value for restrictingProvisions.
         * @return Builder
         */
        public Builder restrictingProvisions(String restrictingProvisions) {
            this.restrictingProvisions = restrictingProvisions;
            return this;
        }

        /**
         * Setter for totalDebenture.
         * @param  totalDebenture  String value for totalDebenture.
         * @return Builder
         */
        public Builder totalDebenture(String totalDebenture) {
            this.totalDebenture = totalDebenture;
            return this;
        }

        /**
         * Setter for trusteeDetails.
         * @param  trusteeDetails  List of TrusteeDetails value for trusteeDetails.
         * @return Builder
         */
        public Builder trusteeDetails(List<TrusteeDetails> trusteeDetails) {
            this.trusteeDetails = trusteeDetails;
            return this;
        }

        /**
         * Builds a new {@link MortgageDetail} object using the set fields.
         * @return {@link MortgageDetail}
         */
        public MortgageDetail build() {
            return new MortgageDetail(alterationsToOrder, amountChargeIncreased, amountLatestIssue,
                    amountSatisfied, amountSecured, chargeNumber, chargeType, chargeeText,
                    commissionDetails, creationDate, currency, dateFullySatisfied, deedDate,
                    executionDate, executorDetails, formType, fullySatisfiedIndicator,
                    latestIssueDate, lenderDetails, lodgedDate, naturePartialSatisfaction,
                    numberCommissionElements, numberExecutionDates, numberExecutors, numberLenders,
                    numberPartialSatisfactionDataItems, numberPartialSatisfactionDates,
                    numberReceiverAppointmentDates, numberReceiverCessationDates, numberTrustees,
                    partialSatisfactionDate, propertyAcquiredDate, propertyDetails,
                    propertyReleasedFromCharge, publicationTown, receiverAppointment,
                    receiverCessation, registrationDate, regulatingProvisions, resolutionSeriesDate,
                    restrictingProvisions, totalDebenture, trusteeDetails);
        }
    }
}
