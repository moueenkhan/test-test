/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for ManagementInfo type.
 */
public class ManagementInfo {
    private String latestReturns;
    private Integer numDirs;
    private Integer numSecs;
    private Integer numCurrDirs;
    private Integer numPrevDirs;
    private Integer directorAvgAge;
    private Integer directorAvgLength;
    private Integer numCurrDirectorLast12;
    private Integer numAppointmentsLast12;
    private Integer numResignationsLast12;
    private Integer numDisqualifications;
    private Directors directors;
    private Secretaries secretaries;

    /**
     * Default constructor.
     */
    public ManagementInfo() {
    }

    /**
     * Initialization constructor.
     * @param  latestReturns  String value for latestReturns.
     * @param  numDirs  Integer value for numDirs.
     * @param  numSecs  Integer value for numSecs.
     * @param  numCurrDirs  Integer value for numCurrDirs.
     * @param  numPrevDirs  Integer value for numPrevDirs.
     * @param  directorAvgAge  Integer value for directorAvgAge.
     * @param  directorAvgLength  Integer value for directorAvgLength.
     * @param  numCurrDirectorLast12  Integer value for numCurrDirectorLast12.
     * @param  numAppointmentsLast12  Integer value for numAppointmentsLast12.
     * @param  numResignationsLast12  Integer value for numResignationsLast12.
     * @param  numDisqualifications  Integer value for numDisqualifications.
     * @param  directors  Directors value for directors.
     * @param  secretaries  Secretaries value for secretaries.
     */
    public ManagementInfo(
            String latestReturns,
            Integer numDirs,
            Integer numSecs,
            Integer numCurrDirs,
            Integer numPrevDirs,
            Integer directorAvgAge,
            Integer directorAvgLength,
            Integer numCurrDirectorLast12,
            Integer numAppointmentsLast12,
            Integer numResignationsLast12,
            Integer numDisqualifications,
            Directors directors,
            Secretaries secretaries) {
        this.latestReturns = latestReturns;
        this.numDirs = numDirs;
        this.numSecs = numSecs;
        this.numCurrDirs = numCurrDirs;
        this.numPrevDirs = numPrevDirs;
        this.directorAvgAge = directorAvgAge;
        this.directorAvgLength = directorAvgLength;
        this.numCurrDirectorLast12 = numCurrDirectorLast12;
        this.numAppointmentsLast12 = numAppointmentsLast12;
        this.numResignationsLast12 = numResignationsLast12;
        this.numDisqualifications = numDisqualifications;
        this.directors = directors;
        this.secretaries = secretaries;
    }

    /**
     * Getter for LatestReturns.
     * Filing date for the limited company latest Confirmation Statement accepted and loaded by
     * Experian (yyyy-mm-dd)
     * @return Returns the String
     */
    @JsonGetter("LatestReturns")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLatestReturns() {
        return latestReturns;
    }

    /**
     * Setter for LatestReturns.
     * Filing date for the limited company latest Confirmation Statement accepted and loaded by
     * Experian (yyyy-mm-dd)
     * @param latestReturns Value for String
     */
    @JsonSetter("LatestReturns")
    public void setLatestReturns(String latestReturns) {
        this.latestReturns = latestReturns;
    }

    /**
     * Getter for NumDirs.
     * Number of Directors recorded for the company
     * @return Returns the Integer
     */
    @JsonGetter("NumDirs")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumDirs() {
        return numDirs;
    }

    /**
     * Setter for NumDirs.
     * Number of Directors recorded for the company
     * @param numDirs Value for Integer
     */
    @JsonSetter("NumDirs")
    public void setNumDirs(Integer numDirs) {
        this.numDirs = numDirs;
    }

    /**
     * Getter for NumSecs.
     * Number of Secretaries recorded for the company
     * @return Returns the Integer
     */
    @JsonGetter("NumSecs")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumSecs() {
        return numSecs;
    }

    /**
     * Setter for NumSecs.
     * Number of Secretaries recorded for the company
     * @param numSecs Value for Integer
     */
    @JsonSetter("NumSecs")
    public void setNumSecs(Integer numSecs) {
        this.numSecs = numSecs;
    }

    /**
     * Getter for NumCurrDirs.
     * Number of Directors recorded for the company that are current
     * @return Returns the Integer
     */
    @JsonGetter("NumCurrDirs")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumCurrDirs() {
        return numCurrDirs;
    }

    /**
     * Setter for NumCurrDirs.
     * Number of Directors recorded for the company that are current
     * @param numCurrDirs Value for Integer
     */
    @JsonSetter("NumCurrDirs")
    public void setNumCurrDirs(Integer numCurrDirs) {
        this.numCurrDirs = numCurrDirs;
    }

    /**
     * Getter for NumPrevDirs.
     * Number of previous Directors recorded for the company
     * @return Returns the Integer
     */
    @JsonGetter("NumPrevDirs")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumPrevDirs() {
        return numPrevDirs;
    }

    /**
     * Setter for NumPrevDirs.
     * Number of previous Directors recorded for the company
     * @param numPrevDirs Value for Integer
     */
    @JsonSetter("NumPrevDirs")
    public void setNumPrevDirs(Integer numPrevDirs) {
        this.numPrevDirs = numPrevDirs;
    }

    /**
     * Getter for DirectorAvgAge.
     * Average length of Directorship in months
     * @return Returns the Integer
     */
    @JsonGetter("DirectorAvgAge")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getDirectorAvgAge() {
        return directorAvgAge;
    }

    /**
     * Setter for DirectorAvgAge.
     * Average length of Directorship in months
     * @param directorAvgAge Value for Integer
     */
    @JsonSetter("DirectorAvgAge")
    public void setDirectorAvgAge(Integer directorAvgAge) {
        this.directorAvgAge = directorAvgAge;
    }

    /**
     * Getter for DirectorAvgLength.
     * Average age of Directors in years
     * @return Returns the Integer
     */
    @JsonGetter("DirectorAvgLength")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getDirectorAvgLength() {
        return directorAvgLength;
    }

    /**
     * Setter for DirectorAvgLength.
     * Average age of Directors in years
     * @param directorAvgLength Value for Integer
     */
    @JsonSetter("DirectorAvgLength")
    public void setDirectorAvgLength(Integer directorAvgLength) {
        this.directorAvgLength = directorAvgLength;
    }

    /**
     * Getter for NumCurrDirectorLast12.
     * Number of Current Directors of the limited company who were appointed in the last 12 months
     * @return Returns the Integer
     */
    @JsonGetter("NumCurrDirectorLast12")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumCurrDirectorLast12() {
        return numCurrDirectorLast12;
    }

    /**
     * Setter for NumCurrDirectorLast12.
     * Number of Current Directors of the limited company who were appointed in the last 12 months
     * @param numCurrDirectorLast12 Value for Integer
     */
    @JsonSetter("NumCurrDirectorLast12")
    public void setNumCurrDirectorLast12(Integer numCurrDirectorLast12) {
        this.numCurrDirectorLast12 = numCurrDirectorLast12;
    }

    /**
     * Getter for NumAppointmentsLast12.
     * Number of director appointments for the limited company during the last 12 months
     * @return Returns the Integer
     */
    @JsonGetter("NumAppointmentsLast12")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumAppointmentsLast12() {
        return numAppointmentsLast12;
    }

    /**
     * Setter for NumAppointmentsLast12.
     * Number of director appointments for the limited company during the last 12 months
     * @param numAppointmentsLast12 Value for Integer
     */
    @JsonSetter("NumAppointmentsLast12")
    public void setNumAppointmentsLast12(Integer numAppointmentsLast12) {
        this.numAppointmentsLast12 = numAppointmentsLast12;
    }

    /**
     * Getter for NumResignationsLast12.
     * Number of director resignations for the limited company during the last 12 months
     * @return Returns the Integer
     */
    @JsonGetter("NumResignationsLast12")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumResignationsLast12() {
        return numResignationsLast12;
    }

    /**
     * Setter for NumResignationsLast12.
     * Number of director resignations for the limited company during the last 12 months
     * @param numResignationsLast12 Value for Integer
     */
    @JsonSetter("NumResignationsLast12")
    public void setNumResignationsLast12(Integer numResignationsLast12) {
        this.numResignationsLast12 = numResignationsLast12;
    }

    /**
     * Getter for NumDisqualifications.
     * Number of disqualifications against any of the Current Directors of the limited company
     * @return Returns the Integer
     */
    @JsonGetter("NumDisqualifications")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNumDisqualifications() {
        return numDisqualifications;
    }

    /**
     * Setter for NumDisqualifications.
     * Number of disqualifications against any of the Current Directors of the limited company
     * @param numDisqualifications Value for Integer
     */
    @JsonSetter("NumDisqualifications")
    public void setNumDisqualifications(Integer numDisqualifications) {
        this.numDisqualifications = numDisqualifications;
    }

    /**
     * Getter for Directors.
     * @return Returns the Directors
     */
    @JsonGetter("Directors")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Directors getDirectors() {
        return directors;
    }

    /**
     * Setter for Directors.
     * @param directors Value for Directors
     */
    @JsonSetter("Directors")
    public void setDirectors(Directors directors) {
        this.directors = directors;
    }

    /**
     * Getter for Secretaries.
     * @return Returns the Secretaries
     */
    @JsonGetter("Secretaries")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Secretaries getSecretaries() {
        return secretaries;
    }

    /**
     * Setter for Secretaries.
     * @param secretaries Value for Secretaries
     */
    @JsonSetter("Secretaries")
    public void setSecretaries(Secretaries secretaries) {
        this.secretaries = secretaries;
    }

    /**
     * Converts this ManagementInfo into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ManagementInfo [" + "latestReturns=" + latestReturns + ", numDirs=" + numDirs
                + ", numSecs=" + numSecs + ", numCurrDirs=" + numCurrDirs + ", numPrevDirs="
                + numPrevDirs + ", directorAvgAge=" + directorAvgAge + ", directorAvgLength="
                + directorAvgLength + ", numCurrDirectorLast12=" + numCurrDirectorLast12
                + ", numAppointmentsLast12=" + numAppointmentsLast12 + ", numResignationsLast12="
                + numResignationsLast12 + ", numDisqualifications=" + numDisqualifications
                + ", directors=" + directors + ", secretaries=" + secretaries + "]";
    }

    /**
     * Builds a new {@link ManagementInfo.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ManagementInfo.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .latestReturns(getLatestReturns())
                .numDirs(getNumDirs())
                .numSecs(getNumSecs())
                .numCurrDirs(getNumCurrDirs())
                .numPrevDirs(getNumPrevDirs())
                .directorAvgAge(getDirectorAvgAge())
                .directorAvgLength(getDirectorAvgLength())
                .numCurrDirectorLast12(getNumCurrDirectorLast12())
                .numAppointmentsLast12(getNumAppointmentsLast12())
                .numResignationsLast12(getNumResignationsLast12())
                .numDisqualifications(getNumDisqualifications())
                .directors(getDirectors())
                .secretaries(getSecretaries());
        return builder;
    }

    /**
     * Class to build instances of {@link ManagementInfo}.
     */
    public static class Builder {
        private String latestReturns;
        private Integer numDirs;
        private Integer numSecs;
        private Integer numCurrDirs;
        private Integer numPrevDirs;
        private Integer directorAvgAge;
        private Integer directorAvgLength;
        private Integer numCurrDirectorLast12;
        private Integer numAppointmentsLast12;
        private Integer numResignationsLast12;
        private Integer numDisqualifications;
        private Directors directors;
        private Secretaries secretaries;



        /**
         * Setter for latestReturns.
         * @param  latestReturns  String value for latestReturns.
         * @return Builder
         */
        public Builder latestReturns(String latestReturns) {
            this.latestReturns = latestReturns;
            return this;
        }

        /**
         * Setter for numDirs.
         * @param  numDirs  Integer value for numDirs.
         * @return Builder
         */
        public Builder numDirs(Integer numDirs) {
            this.numDirs = numDirs;
            return this;
        }

        /**
         * Setter for numSecs.
         * @param  numSecs  Integer value for numSecs.
         * @return Builder
         */
        public Builder numSecs(Integer numSecs) {
            this.numSecs = numSecs;
            return this;
        }

        /**
         * Setter for numCurrDirs.
         * @param  numCurrDirs  Integer value for numCurrDirs.
         * @return Builder
         */
        public Builder numCurrDirs(Integer numCurrDirs) {
            this.numCurrDirs = numCurrDirs;
            return this;
        }

        /**
         * Setter for numPrevDirs.
         * @param  numPrevDirs  Integer value for numPrevDirs.
         * @return Builder
         */
        public Builder numPrevDirs(Integer numPrevDirs) {
            this.numPrevDirs = numPrevDirs;
            return this;
        }

        /**
         * Setter for directorAvgAge.
         * @param  directorAvgAge  Integer value for directorAvgAge.
         * @return Builder
         */
        public Builder directorAvgAge(Integer directorAvgAge) {
            this.directorAvgAge = directorAvgAge;
            return this;
        }

        /**
         * Setter for directorAvgLength.
         * @param  directorAvgLength  Integer value for directorAvgLength.
         * @return Builder
         */
        public Builder directorAvgLength(Integer directorAvgLength) {
            this.directorAvgLength = directorAvgLength;
            return this;
        }

        /**
         * Setter for numCurrDirectorLast12.
         * @param  numCurrDirectorLast12  Integer value for numCurrDirectorLast12.
         * @return Builder
         */
        public Builder numCurrDirectorLast12(Integer numCurrDirectorLast12) {
            this.numCurrDirectorLast12 = numCurrDirectorLast12;
            return this;
        }

        /**
         * Setter for numAppointmentsLast12.
         * @param  numAppointmentsLast12  Integer value for numAppointmentsLast12.
         * @return Builder
         */
        public Builder numAppointmentsLast12(Integer numAppointmentsLast12) {
            this.numAppointmentsLast12 = numAppointmentsLast12;
            return this;
        }

        /**
         * Setter for numResignationsLast12.
         * @param  numResignationsLast12  Integer value for numResignationsLast12.
         * @return Builder
         */
        public Builder numResignationsLast12(Integer numResignationsLast12) {
            this.numResignationsLast12 = numResignationsLast12;
            return this;
        }

        /**
         * Setter for numDisqualifications.
         * @param  numDisqualifications  Integer value for numDisqualifications.
         * @return Builder
         */
        public Builder numDisqualifications(Integer numDisqualifications) {
            this.numDisqualifications = numDisqualifications;
            return this;
        }

        /**
         * Setter for directors.
         * @param  directors  Directors value for directors.
         * @return Builder
         */
        public Builder directors(Directors directors) {
            this.directors = directors;
            return this;
        }

        /**
         * Setter for secretaries.
         * @param  secretaries  Secretaries value for secretaries.
         * @return Builder
         */
        public Builder secretaries(Secretaries secretaries) {
            this.secretaries = secretaries;
            return this;
        }

        /**
         * Builds a new {@link ManagementInfo} object using the set fields.
         * @return {@link ManagementInfo}
         */
        public ManagementInfo build() {
            return new ManagementInfo(latestReturns, numDirs, numSecs, numCurrDirs, numPrevDirs,
                    directorAvgAge, directorAvgLength, numCurrDirectorLast12, numAppointmentsLast12,
                    numResignationsLast12, numDisqualifications, directors, secretaries);
        }
    }
}
