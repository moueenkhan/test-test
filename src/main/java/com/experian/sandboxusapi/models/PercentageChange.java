/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for PercentageChange type.
 */
public class PercentageChange {
    private String dateOfAccounts;
    private Integer accountingPeriod;
    private String currency;
    private String companyClass;
    private String consAccounts;
    private Double percentChangeNumEmployees;
    private Double percentChangeGrossAsset;
    private Double percentChangeNetWorth;
    private Double percentChangeFixedAssets;
    private Double percentChangeCurrentAssets;
    private Double percentChangeCurrentLiabilities;
    private Double percentChangeWorkingCapital;
    private Double percentChangeCapitalEmployed;
    private Double percentChangeNetAssets;
    private Double percentChangeIssuedCapital;
    private Double percentChangeRetainedEarnings;
    private Double percentChangeShareholdersFunds;
    private Double percentChangeUKTurnover;
    private Double percentChangeExportTurnover;
    private Double percentChangeTotalTurnover;
    private Double percentChangePreTaxProfitLoss;
    private Double percentChangeRetainedProfitLoss;
    private Double percentChangeCurrentRatio;
    private Double percentChangeCreditPeriod;
    private Double percentChangeReturnOnCapital;
    private Double percentChangePreTaxProfitMargin;
    private Double percentChangeBorrowingRatio;
    private Double percentChangeEquityGearing;
    private Double percentChangeDebtGearing;
    private Double percentChangeAvgEmpPerRem;
    private Double percentChangeProfPerEmp;
    private Double percentChangeTurnoverPerEmp;

    /**
     * Default constructor.
     */
    public PercentageChange() {
    }

    /**
     * Initialization constructor.
     * @param  dateOfAccounts  String value for dateOfAccounts.
     * @param  accountingPeriod  Integer value for accountingPeriod.
     * @param  currency  String value for currency.
     * @param  companyClass  String value for companyClass.
     * @param  consAccounts  String value for consAccounts.
     * @param  percentChangeNumEmployees  Double value for percentChangeNumEmployees.
     * @param  percentChangeGrossAsset  Double value for percentChangeGrossAsset.
     * @param  percentChangeNetWorth  Double value for percentChangeNetWorth.
     * @param  percentChangeFixedAssets  Double value for percentChangeFixedAssets.
     * @param  percentChangeCurrentAssets  Double value for percentChangeCurrentAssets.
     * @param  percentChangeCurrentLiabilities  Double value for percentChangeCurrentLiabilities.
     * @param  percentChangeWorkingCapital  Double value for percentChangeWorkingCapital.
     * @param  percentChangeCapitalEmployed  Double value for percentChangeCapitalEmployed.
     * @param  percentChangeNetAssets  Double value for percentChangeNetAssets.
     * @param  percentChangeIssuedCapital  Double value for percentChangeIssuedCapital.
     * @param  percentChangeRetainedEarnings  Double value for percentChangeRetainedEarnings.
     * @param  percentChangeShareholdersFunds  Double value for percentChangeShareholdersFunds.
     * @param  percentChangeUKTurnover  Double value for percentChangeUKTurnover.
     * @param  percentChangeExportTurnover  Double value for percentChangeExportTurnover.
     * @param  percentChangeTotalTurnover  Double value for percentChangeTotalTurnover.
     * @param  percentChangePreTaxProfitLoss  Double value for percentChangePreTaxProfitLoss.
     * @param  percentChangeRetainedProfitLoss  Double value for percentChangeRetainedProfitLoss.
     * @param  percentChangeCurrentRatio  Double value for percentChangeCurrentRatio.
     * @param  percentChangeCreditPeriod  Double value for percentChangeCreditPeriod.
     * @param  percentChangeReturnOnCapital  Double value for percentChangeReturnOnCapital.
     * @param  percentChangePreTaxProfitMargin  Double value for percentChangePreTaxProfitMargin.
     * @param  percentChangeBorrowingRatio  Double value for percentChangeBorrowingRatio.
     * @param  percentChangeEquityGearing  Double value for percentChangeEquityGearing.
     * @param  percentChangeDebtGearing  Double value for percentChangeDebtGearing.
     * @param  percentChangeAvgEmpPerRem  Double value for percentChangeAvgEmpPerRem.
     * @param  percentChangeProfPerEmp  Double value for percentChangeProfPerEmp.
     * @param  percentChangeTurnoverPerEmp  Double value for percentChangeTurnoverPerEmp.
     */
    public PercentageChange(
            String dateOfAccounts,
            Integer accountingPeriod,
            String currency,
            String companyClass,
            String consAccounts,
            Double percentChangeNumEmployees,
            Double percentChangeGrossAsset,
            Double percentChangeNetWorth,
            Double percentChangeFixedAssets,
            Double percentChangeCurrentAssets,
            Double percentChangeCurrentLiabilities,
            Double percentChangeWorkingCapital,
            Double percentChangeCapitalEmployed,
            Double percentChangeNetAssets,
            Double percentChangeIssuedCapital,
            Double percentChangeRetainedEarnings,
            Double percentChangeShareholdersFunds,
            Double percentChangeUKTurnover,
            Double percentChangeExportTurnover,
            Double percentChangeTotalTurnover,
            Double percentChangePreTaxProfitLoss,
            Double percentChangeRetainedProfitLoss,
            Double percentChangeCurrentRatio,
            Double percentChangeCreditPeriod,
            Double percentChangeReturnOnCapital,
            Double percentChangePreTaxProfitMargin,
            Double percentChangeBorrowingRatio,
            Double percentChangeEquityGearing,
            Double percentChangeDebtGearing,
            Double percentChangeAvgEmpPerRem,
            Double percentChangeProfPerEmp,
            Double percentChangeTurnoverPerEmp) {
        this.dateOfAccounts = dateOfAccounts;
        this.accountingPeriod = accountingPeriod;
        this.currency = currency;
        this.companyClass = companyClass;
        this.consAccounts = consAccounts;
        this.percentChangeNumEmployees = percentChangeNumEmployees;
        this.percentChangeGrossAsset = percentChangeGrossAsset;
        this.percentChangeNetWorth = percentChangeNetWorth;
        this.percentChangeFixedAssets = percentChangeFixedAssets;
        this.percentChangeCurrentAssets = percentChangeCurrentAssets;
        this.percentChangeCurrentLiabilities = percentChangeCurrentLiabilities;
        this.percentChangeWorkingCapital = percentChangeWorkingCapital;
        this.percentChangeCapitalEmployed = percentChangeCapitalEmployed;
        this.percentChangeNetAssets = percentChangeNetAssets;
        this.percentChangeIssuedCapital = percentChangeIssuedCapital;
        this.percentChangeRetainedEarnings = percentChangeRetainedEarnings;
        this.percentChangeShareholdersFunds = percentChangeShareholdersFunds;
        this.percentChangeUKTurnover = percentChangeUKTurnover;
        this.percentChangeExportTurnover = percentChangeExportTurnover;
        this.percentChangeTotalTurnover = percentChangeTotalTurnover;
        this.percentChangePreTaxProfitLoss = percentChangePreTaxProfitLoss;
        this.percentChangeRetainedProfitLoss = percentChangeRetainedProfitLoss;
        this.percentChangeCurrentRatio = percentChangeCurrentRatio;
        this.percentChangeCreditPeriod = percentChangeCreditPeriod;
        this.percentChangeReturnOnCapital = percentChangeReturnOnCapital;
        this.percentChangePreTaxProfitMargin = percentChangePreTaxProfitMargin;
        this.percentChangeBorrowingRatio = percentChangeBorrowingRatio;
        this.percentChangeEquityGearing = percentChangeEquityGearing;
        this.percentChangeDebtGearing = percentChangeDebtGearing;
        this.percentChangeAvgEmpPerRem = percentChangeAvgEmpPerRem;
        this.percentChangeProfPerEmp = percentChangeProfPerEmp;
        this.percentChangeTurnoverPerEmp = percentChangeTurnoverPerEmp;
    }

    /**
     * Getter for DateOfAccounts.
     * Filing date for the limited company accounts (yyyy-mm-dd)
     * @return Returns the String
     */
    @JsonGetter("DateOfAccounts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDateOfAccounts() {
        return dateOfAccounts;
    }

    /**
     * Setter for DateOfAccounts.
     * Filing date for the limited company accounts (yyyy-mm-dd)
     * @param dateOfAccounts Value for String
     */
    @JsonSetter("DateOfAccounts")
    public void setDateOfAccounts(String dateOfAccounts) {
        this.dateOfAccounts = dateOfAccounts;
    }

    /**
     * Getter for AccountingPeriod.
     * Number of weeks covered by these accounts
     * @return Returns the Integer
     */
    @JsonGetter("AccountingPeriod")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getAccountingPeriod() {
        return accountingPeriod;
    }

    /**
     * Setter for AccountingPeriod.
     * Number of weeks covered by these accounts
     * @param accountingPeriod Value for Integer
     */
    @JsonSetter("AccountingPeriod")
    public void setAccountingPeriod(Integer accountingPeriod) {
        this.accountingPeriod = accountingPeriod;
    }

    /**
     * Getter for Currency.
     * Currency under which the accounts have been reported - ISO currency code
     * @return Returns the String
     */
    @JsonGetter("Currency")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCurrency() {
        return currency;
    }

    /**
     * Setter for Currency.
     * Currency under which the accounts have been reported - ISO currency code
     * @param currency Value for String
     */
    @JsonSetter("Currency")
    public void setCurrency(String currency) {
        this.currency = currency;
    }

    /**
     * Getter for CompanyClass.
     * Size classification for the limited company - S = Small sized company; M= Medium sized
     * company; L = Large sized company
     * @return Returns the String
     */
    @JsonGetter("CompanyClass")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCompanyClass() {
        return companyClass;
    }

    /**
     * Setter for CompanyClass.
     * Size classification for the limited company - S = Small sized company; M= Medium sized
     * company; L = Large sized company
     * @param companyClass Value for String
     */
    @JsonSetter("CompanyClass")
    public void setCompanyClass(String companyClass) {
        this.companyClass = companyClass;
    }

    /**
     * Getter for ConsAccounts.
     * Indicator showing whether the accounts are consolidated - Y = Consolidated; N = Not
     * consolidated
     * @return Returns the String
     */
    @JsonGetter("ConsAccounts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getConsAccounts() {
        return consAccounts;
    }

    /**
     * Setter for ConsAccounts.
     * Indicator showing whether the accounts are consolidated - Y = Consolidated; N = Not
     * consolidated
     * @param consAccounts Value for String
     */
    @JsonSetter("ConsAccounts")
    public void setConsAccounts(String consAccounts) {
        this.consAccounts = consAccounts;
    }

    /**
     * Getter for PercentChangeNumEmployees.
     * Percentage Change to Number of Employees for these accounts as a percentage of the previous
     * accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("PercentChangeNumEmployees")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPercentChangeNumEmployees() {
        return percentChangeNumEmployees;
    }

    /**
     * Setter for PercentChangeNumEmployees.
     * Percentage Change to Number of Employees for these accounts as a percentage of the previous
     * accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @param percentChangeNumEmployees Value for Double
     */
    @JsonSetter("PercentChangeNumEmployees")
    public void setPercentChangeNumEmployees(Double percentChangeNumEmployees) {
        this.percentChangeNumEmployees = percentChangeNumEmployees;
    }

    /**
     * Getter for PercentChangeGrossAsset.
     * Percentage Change to Gross Assets for these accounts as a percentage of the previous accounts
     * (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("PercentChangeGrossAsset")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPercentChangeGrossAsset() {
        return percentChangeGrossAsset;
    }

    /**
     * Setter for PercentChangeGrossAsset.
     * Percentage Change to Gross Assets for these accounts as a percentage of the previous accounts
     * (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @param percentChangeGrossAsset Value for Double
     */
    @JsonSetter("PercentChangeGrossAsset")
    public void setPercentChangeGrossAsset(Double percentChangeGrossAsset) {
        this.percentChangeGrossAsset = percentChangeGrossAsset;
    }

    /**
     * Getter for PercentChangeNetWorth.
     * Percentage Change to Net Worth for these accounts as a percentage of the previous accounts
     * (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("PercentChangeNetWorth")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPercentChangeNetWorth() {
        return percentChangeNetWorth;
    }

    /**
     * Setter for PercentChangeNetWorth.
     * Percentage Change to Net Worth for these accounts as a percentage of the previous accounts
     * (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @param percentChangeNetWorth Value for Double
     */
    @JsonSetter("PercentChangeNetWorth")
    public void setPercentChangeNetWorth(Double percentChangeNetWorth) {
        this.percentChangeNetWorth = percentChangeNetWorth;
    }

    /**
     * Getter for PercentChangeFixedAssets.
     * Percentage Change to Fixed Assets for these accounts as a percentage of the previous accounts
     * (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("PercentChangeFixedAssets")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPercentChangeFixedAssets() {
        return percentChangeFixedAssets;
    }

    /**
     * Setter for PercentChangeFixedAssets.
     * Percentage Change to Fixed Assets for these accounts as a percentage of the previous accounts
     * (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @param percentChangeFixedAssets Value for Double
     */
    @JsonSetter("PercentChangeFixedAssets")
    public void setPercentChangeFixedAssets(Double percentChangeFixedAssets) {
        this.percentChangeFixedAssets = percentChangeFixedAssets;
    }

    /**
     * Getter for PercentChangeCurrentAssets.
     * Percentage Change to Current Assets for these accounts as a percentage of the previous
     * accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("PercentChangeCurrentAssets")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPercentChangeCurrentAssets() {
        return percentChangeCurrentAssets;
    }

    /**
     * Setter for PercentChangeCurrentAssets.
     * Percentage Change to Current Assets for these accounts as a percentage of the previous
     * accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @param percentChangeCurrentAssets Value for Double
     */
    @JsonSetter("PercentChangeCurrentAssets")
    public void setPercentChangeCurrentAssets(Double percentChangeCurrentAssets) {
        this.percentChangeCurrentAssets = percentChangeCurrentAssets;
    }

    /**
     * Getter for PercentChangeCurrentLiabilities.
     * Percentage Change to Current Liabilities for these accounts as a percentage of the previous
     * accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("PercentChangeCurrentLiabilities")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPercentChangeCurrentLiabilities() {
        return percentChangeCurrentLiabilities;
    }

    /**
     * Setter for PercentChangeCurrentLiabilities.
     * Percentage Change to Current Liabilities for these accounts as a percentage of the previous
     * accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @param percentChangeCurrentLiabilities Value for Double
     */
    @JsonSetter("PercentChangeCurrentLiabilities")
    public void setPercentChangeCurrentLiabilities(Double percentChangeCurrentLiabilities) {
        this.percentChangeCurrentLiabilities = percentChangeCurrentLiabilities;
    }

    /**
     * Getter for PercentChangeWorkingCapital.
     * Percentage Change to Current Assets (Working Capital) for these accounts as a percentage of
     * the previous accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("PercentChangeWorkingCapital")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPercentChangeWorkingCapital() {
        return percentChangeWorkingCapital;
    }

    /**
     * Setter for PercentChangeWorkingCapital.
     * Percentage Change to Current Assets (Working Capital) for these accounts as a percentage of
     * the previous accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @param percentChangeWorkingCapital Value for Double
     */
    @JsonSetter("PercentChangeWorkingCapital")
    public void setPercentChangeWorkingCapital(Double percentChangeWorkingCapital) {
        this.percentChangeWorkingCapital = percentChangeWorkingCapital;
    }

    /**
     * Getter for PercentChangeCapitalEmployed.
     * Percentage Change to Capital Employed for these accounts as a percentage of the previous
     * accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("PercentChangeCapitalEmployed")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPercentChangeCapitalEmployed() {
        return percentChangeCapitalEmployed;
    }

    /**
     * Setter for PercentChangeCapitalEmployed.
     * Percentage Change to Capital Employed for these accounts as a percentage of the previous
     * accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @param percentChangeCapitalEmployed Value for Double
     */
    @JsonSetter("PercentChangeCapitalEmployed")
    public void setPercentChangeCapitalEmployed(Double percentChangeCapitalEmployed) {
        this.percentChangeCapitalEmployed = percentChangeCapitalEmployed;
    }

    /**
     * Getter for PercentChangeNetAssets.
     * Percentage Change to Net Assets for these accounts as a percentage of the previous accounts
     * (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("PercentChangeNetAssets")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPercentChangeNetAssets() {
        return percentChangeNetAssets;
    }

    /**
     * Setter for PercentChangeNetAssets.
     * Percentage Change to Net Assets for these accounts as a percentage of the previous accounts
     * (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @param percentChangeNetAssets Value for Double
     */
    @JsonSetter("PercentChangeNetAssets")
    public void setPercentChangeNetAssets(Double percentChangeNetAssets) {
        this.percentChangeNetAssets = percentChangeNetAssets;
    }

    /**
     * Getter for PercentChangeIssuedCapital.
     * Percentage Change to Issued Capital for these accounts as a percentage of the previous
     * accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("PercentChangeIssuedCapital")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPercentChangeIssuedCapital() {
        return percentChangeIssuedCapital;
    }

    /**
     * Setter for PercentChangeIssuedCapital.
     * Percentage Change to Issued Capital for these accounts as a percentage of the previous
     * accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @param percentChangeIssuedCapital Value for Double
     */
    @JsonSetter("PercentChangeIssuedCapital")
    public void setPercentChangeIssuedCapital(Double percentChangeIssuedCapital) {
        this.percentChangeIssuedCapital = percentChangeIssuedCapital;
    }

    /**
     * Getter for PercentChangeRetainedEarnings.
     * Percentage Change to Retained Earnings for these accounts as a percentage of the previous
     * accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("PercentChangeRetainedEarnings")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPercentChangeRetainedEarnings() {
        return percentChangeRetainedEarnings;
    }

    /**
     * Setter for PercentChangeRetainedEarnings.
     * Percentage Change to Retained Earnings for these accounts as a percentage of the previous
     * accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @param percentChangeRetainedEarnings Value for Double
     */
    @JsonSetter("PercentChangeRetainedEarnings")
    public void setPercentChangeRetainedEarnings(Double percentChangeRetainedEarnings) {
        this.percentChangeRetainedEarnings = percentChangeRetainedEarnings;
    }

    /**
     * Getter for PercentChangeShareholdersFunds.
     * Percentage Change to Shareholders Funds for these accounts as a percentage of the previous
     * accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("PercentChangeShareholdersFunds")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPercentChangeShareholdersFunds() {
        return percentChangeShareholdersFunds;
    }

    /**
     * Setter for PercentChangeShareholdersFunds.
     * Percentage Change to Shareholders Funds for these accounts as a percentage of the previous
     * accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @param percentChangeShareholdersFunds Value for Double
     */
    @JsonSetter("PercentChangeShareholdersFunds")
    public void setPercentChangeShareholdersFunds(Double percentChangeShareholdersFunds) {
        this.percentChangeShareholdersFunds = percentChangeShareholdersFunds;
    }

    /**
     * Getter for PercentChangeUKTurnover.
     * Percentage Change to UK Turnover for these accounts as a percentage of the previous accounts
     * (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("PercentChangeUKTurnover")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPercentChangeUKTurnover() {
        return percentChangeUKTurnover;
    }

    /**
     * Setter for PercentChangeUKTurnover.
     * Percentage Change to UK Turnover for these accounts as a percentage of the previous accounts
     * (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @param percentChangeUKTurnover Value for Double
     */
    @JsonSetter("PercentChangeUKTurnover")
    public void setPercentChangeUKTurnover(Double percentChangeUKTurnover) {
        this.percentChangeUKTurnover = percentChangeUKTurnover;
    }

    /**
     * Getter for PercentChangeExportTurnover.
     * Percentage Change to Export Turnover for these accounts as a percentage of the previous
     * accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("PercentChangeExportTurnover")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPercentChangeExportTurnover() {
        return percentChangeExportTurnover;
    }

    /**
     * Setter for PercentChangeExportTurnover.
     * Percentage Change to Export Turnover for these accounts as a percentage of the previous
     * accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @param percentChangeExportTurnover Value for Double
     */
    @JsonSetter("PercentChangeExportTurnover")
    public void setPercentChangeExportTurnover(Double percentChangeExportTurnover) {
        this.percentChangeExportTurnover = percentChangeExportTurnover;
    }

    /**
     * Getter for PercentChangeTotalTurnover.
     * Percentage Change to Total Turnover for these accounts as a percentage of the previous
     * accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("PercentChangeTotalTurnover")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPercentChangeTotalTurnover() {
        return percentChangeTotalTurnover;
    }

    /**
     * Setter for PercentChangeTotalTurnover.
     * Percentage Change to Total Turnover for these accounts as a percentage of the previous
     * accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @param percentChangeTotalTurnover Value for Double
     */
    @JsonSetter("PercentChangeTotalTurnover")
    public void setPercentChangeTotalTurnover(Double percentChangeTotalTurnover) {
        this.percentChangeTotalTurnover = percentChangeTotalTurnover;
    }

    /**
     * Getter for PercentChangePreTaxProfitLoss.
     * Percentage Change to Pre-Tax Profit / Loss for these accounts as a percentage of the previous
     * accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("PercentChangePreTaxProfitLoss")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPercentChangePreTaxProfitLoss() {
        return percentChangePreTaxProfitLoss;
    }

    /**
     * Setter for PercentChangePreTaxProfitLoss.
     * Percentage Change to Pre-Tax Profit / Loss for these accounts as a percentage of the previous
     * accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @param percentChangePreTaxProfitLoss Value for Double
     */
    @JsonSetter("PercentChangePreTaxProfitLoss")
    public void setPercentChangePreTaxProfitLoss(Double percentChangePreTaxProfitLoss) {
        this.percentChangePreTaxProfitLoss = percentChangePreTaxProfitLoss;
    }

    /**
     * Getter for PercentChangeRetainedProfitLoss.
     * Percentage Change to Retained Profit / Loss for these accounts as a percentage of the
     * previous accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("PercentChangeRetainedProfitLoss")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPercentChangeRetainedProfitLoss() {
        return percentChangeRetainedProfitLoss;
    }

    /**
     * Setter for PercentChangeRetainedProfitLoss.
     * Percentage Change to Retained Profit / Loss for these accounts as a percentage of the
     * previous accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @param percentChangeRetainedProfitLoss Value for Double
     */
    @JsonSetter("PercentChangeRetainedProfitLoss")
    public void setPercentChangeRetainedProfitLoss(Double percentChangeRetainedProfitLoss) {
        this.percentChangeRetainedProfitLoss = percentChangeRetainedProfitLoss;
    }

    /**
     * Getter for PercentChangeCurrentRatio.
     * Percentage Change to Current Ratio for these accounts as a percentage of the previous
     * accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("PercentChangeCurrentRatio")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPercentChangeCurrentRatio() {
        return percentChangeCurrentRatio;
    }

    /**
     * Setter for PercentChangeCurrentRatio.
     * Percentage Change to Current Ratio for these accounts as a percentage of the previous
     * accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @param percentChangeCurrentRatio Value for Double
     */
    @JsonSetter("PercentChangeCurrentRatio")
    public void setPercentChangeCurrentRatio(Double percentChangeCurrentRatio) {
        this.percentChangeCurrentRatio = percentChangeCurrentRatio;
    }

    /**
     * Getter for PercentChangeCreditPeriod.
     * Percentage Change to Credit Period for these accounts as a percentage of the previous
     * accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("PercentChangeCreditPeriod")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPercentChangeCreditPeriod() {
        return percentChangeCreditPeriod;
    }

    /**
     * Setter for PercentChangeCreditPeriod.
     * Percentage Change to Credit Period for these accounts as a percentage of the previous
     * accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @param percentChangeCreditPeriod Value for Double
     */
    @JsonSetter("PercentChangeCreditPeriod")
    public void setPercentChangeCreditPeriod(Double percentChangeCreditPeriod) {
        this.percentChangeCreditPeriod = percentChangeCreditPeriod;
    }

    /**
     * Getter for PercentChangeReturnOnCapital.
     * Percentage Change to Return On Capital for these accounts as a percentage of the previous
     * accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("PercentChangeReturnOnCapital")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPercentChangeReturnOnCapital() {
        return percentChangeReturnOnCapital;
    }

    /**
     * Setter for PercentChangeReturnOnCapital.
     * Percentage Change to Return On Capital for these accounts as a percentage of the previous
     * accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @param percentChangeReturnOnCapital Value for Double
     */
    @JsonSetter("PercentChangeReturnOnCapital")
    public void setPercentChangeReturnOnCapital(Double percentChangeReturnOnCapital) {
        this.percentChangeReturnOnCapital = percentChangeReturnOnCapital;
    }

    /**
     * Getter for PercentChangePreTaxProfitMargin.
     * Percentage Change to Pre-Tax Profit Margin for these accounts as a percentage of the previous
     * accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("PercentChangePreTaxProfitMargin")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPercentChangePreTaxProfitMargin() {
        return percentChangePreTaxProfitMargin;
    }

    /**
     * Setter for PercentChangePreTaxProfitMargin.
     * Percentage Change to Pre-Tax Profit Margin for these accounts as a percentage of the previous
     * accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @param percentChangePreTaxProfitMargin Value for Double
     */
    @JsonSetter("PercentChangePreTaxProfitMargin")
    public void setPercentChangePreTaxProfitMargin(Double percentChangePreTaxProfitMargin) {
        this.percentChangePreTaxProfitMargin = percentChangePreTaxProfitMargin;
    }

    /**
     * Getter for PercentChangeBorrowingRatio.
     * Percentage Change to Borrowing Ratio for these accounts as a percentage of the previous
     * accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("PercentChangeBorrowingRatio")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPercentChangeBorrowingRatio() {
        return percentChangeBorrowingRatio;
    }

    /**
     * Setter for PercentChangeBorrowingRatio.
     * Percentage Change to Borrowing Ratio for these accounts as a percentage of the previous
     * accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @param percentChangeBorrowingRatio Value for Double
     */
    @JsonSetter("PercentChangeBorrowingRatio")
    public void setPercentChangeBorrowingRatio(Double percentChangeBorrowingRatio) {
        this.percentChangeBorrowingRatio = percentChangeBorrowingRatio;
    }

    /**
     * Getter for PercentChangeEquityGearing.
     * Percentage Change to Equity Gearing for these accounts as a percentage of the previous
     * accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("PercentChangeEquityGearing")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPercentChangeEquityGearing() {
        return percentChangeEquityGearing;
    }

    /**
     * Setter for PercentChangeEquityGearing.
     * Percentage Change to Equity Gearing for these accounts as a percentage of the previous
     * accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @param percentChangeEquityGearing Value for Double
     */
    @JsonSetter("PercentChangeEquityGearing")
    public void setPercentChangeEquityGearing(Double percentChangeEquityGearing) {
        this.percentChangeEquityGearing = percentChangeEquityGearing;
    }

    /**
     * Getter for PercentChangeDebtGearing.
     * Percentage Change to Debt Gearing for these accounts as a percentage of the previous accounts
     * (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("PercentChangeDebtGearing")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPercentChangeDebtGearing() {
        return percentChangeDebtGearing;
    }

    /**
     * Setter for PercentChangeDebtGearing.
     * Percentage Change to Debt Gearing for these accounts as a percentage of the previous accounts
     * (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @param percentChangeDebtGearing Value for Double
     */
    @JsonSetter("PercentChangeDebtGearing")
    public void setPercentChangeDebtGearing(Double percentChangeDebtGearing) {
        this.percentChangeDebtGearing = percentChangeDebtGearing;
    }

    /**
     * Getter for PercentChangeAvgEmpPerRem.
     * Percentage Change to Average Remuneration per Employee for these accounts as a percentage of
     * the previous accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("PercentChangeAvgEmpPerRem")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPercentChangeAvgEmpPerRem() {
        return percentChangeAvgEmpPerRem;
    }

    /**
     * Setter for PercentChangeAvgEmpPerRem.
     * Percentage Change to Average Remuneration per Employee for these accounts as a percentage of
     * the previous accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @param percentChangeAvgEmpPerRem Value for Double
     */
    @JsonSetter("PercentChangeAvgEmpPerRem")
    public void setPercentChangeAvgEmpPerRem(Double percentChangeAvgEmpPerRem) {
        this.percentChangeAvgEmpPerRem = percentChangeAvgEmpPerRem;
    }

    /**
     * Getter for PercentChangeProfPerEmp.
     * Percentage Change to Profit per Employee for these accounts as a percentage of the previous
     * accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("PercentChangeProfPerEmp")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPercentChangeProfPerEmp() {
        return percentChangeProfPerEmp;
    }

    /**
     * Setter for PercentChangeProfPerEmp.
     * Percentage Change to Profit per Employee for these accounts as a percentage of the previous
     * accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @param percentChangeProfPerEmp Value for Double
     */
    @JsonSetter("PercentChangeProfPerEmp")
    public void setPercentChangeProfPerEmp(Double percentChangeProfPerEmp) {
        this.percentChangeProfPerEmp = percentChangeProfPerEmp;
    }

    /**
     * Getter for PercentChangeTurnoverPerEmp.
     * Percentage Change to Turnover per Employee for these accounts as a percentage of the previous
     * accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @return Returns the Double
     */
    @JsonGetter("PercentChangeTurnoverPerEmp")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getPercentChangeTurnoverPerEmp() {
        return percentChangeTurnoverPerEmp;
    }

    /**
     * Setter for PercentChangeTurnoverPerEmp.
     * Percentage Change to Turnover per Employee for these accounts as a percentage of the previous
     * accounts (as ZZZZZ.99 or ZZZZZ.9 where least significant is zero)
     * @param percentChangeTurnoverPerEmp Value for Double
     */
    @JsonSetter("PercentChangeTurnoverPerEmp")
    public void setPercentChangeTurnoverPerEmp(Double percentChangeTurnoverPerEmp) {
        this.percentChangeTurnoverPerEmp = percentChangeTurnoverPerEmp;
    }

    /**
     * Converts this PercentageChange into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "PercentageChange [" + "dateOfAccounts=" + dateOfAccounts + ", accountingPeriod="
                + accountingPeriod + ", currency=" + currency + ", companyClass=" + companyClass
                + ", consAccounts=" + consAccounts + ", percentChangeNumEmployees="
                + percentChangeNumEmployees + ", percentChangeGrossAsset=" + percentChangeGrossAsset
                + ", percentChangeNetWorth=" + percentChangeNetWorth + ", percentChangeFixedAssets="
                + percentChangeFixedAssets + ", percentChangeCurrentAssets="
                + percentChangeCurrentAssets + ", percentChangeCurrentLiabilities="
                + percentChangeCurrentLiabilities + ", percentChangeWorkingCapital="
                + percentChangeWorkingCapital + ", percentChangeCapitalEmployed="
                + percentChangeCapitalEmployed + ", percentChangeNetAssets="
                + percentChangeNetAssets + ", percentChangeIssuedCapital="
                + percentChangeIssuedCapital + ", percentChangeRetainedEarnings="
                + percentChangeRetainedEarnings + ", percentChangeShareholdersFunds="
                + percentChangeShareholdersFunds + ", percentChangeUKTurnover="
                + percentChangeUKTurnover + ", percentChangeExportTurnover="
                + percentChangeExportTurnover + ", percentChangeTotalTurnover="
                + percentChangeTotalTurnover + ", percentChangePreTaxProfitLoss="
                + percentChangePreTaxProfitLoss + ", percentChangeRetainedProfitLoss="
                + percentChangeRetainedProfitLoss + ", percentChangeCurrentRatio="
                + percentChangeCurrentRatio + ", percentChangeCreditPeriod="
                + percentChangeCreditPeriod + ", percentChangeReturnOnCapital="
                + percentChangeReturnOnCapital + ", percentChangePreTaxProfitMargin="
                + percentChangePreTaxProfitMargin + ", percentChangeBorrowingRatio="
                + percentChangeBorrowingRatio + ", percentChangeEquityGearing="
                + percentChangeEquityGearing + ", percentChangeDebtGearing="
                + percentChangeDebtGearing + ", percentChangeAvgEmpPerRem="
                + percentChangeAvgEmpPerRem + ", percentChangeProfPerEmp=" + percentChangeProfPerEmp
                + ", percentChangeTurnoverPerEmp=" + percentChangeTurnoverPerEmp + "]";
    }

    /**
     * Builds a new {@link PercentageChange.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link PercentageChange.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .dateOfAccounts(getDateOfAccounts())
                .accountingPeriod(getAccountingPeriod())
                .currency(getCurrency())
                .companyClass(getCompanyClass())
                .consAccounts(getConsAccounts())
                .percentChangeNumEmployees(getPercentChangeNumEmployees())
                .percentChangeGrossAsset(getPercentChangeGrossAsset())
                .percentChangeNetWorth(getPercentChangeNetWorth())
                .percentChangeFixedAssets(getPercentChangeFixedAssets())
                .percentChangeCurrentAssets(getPercentChangeCurrentAssets())
                .percentChangeCurrentLiabilities(getPercentChangeCurrentLiabilities())
                .percentChangeWorkingCapital(getPercentChangeWorkingCapital())
                .percentChangeCapitalEmployed(getPercentChangeCapitalEmployed())
                .percentChangeNetAssets(getPercentChangeNetAssets())
                .percentChangeIssuedCapital(getPercentChangeIssuedCapital())
                .percentChangeRetainedEarnings(getPercentChangeRetainedEarnings())
                .percentChangeShareholdersFunds(getPercentChangeShareholdersFunds())
                .percentChangeUKTurnover(getPercentChangeUKTurnover())
                .percentChangeExportTurnover(getPercentChangeExportTurnover())
                .percentChangeTotalTurnover(getPercentChangeTotalTurnover())
                .percentChangePreTaxProfitLoss(getPercentChangePreTaxProfitLoss())
                .percentChangeRetainedProfitLoss(getPercentChangeRetainedProfitLoss())
                .percentChangeCurrentRatio(getPercentChangeCurrentRatio())
                .percentChangeCreditPeriod(getPercentChangeCreditPeriod())
                .percentChangeReturnOnCapital(getPercentChangeReturnOnCapital())
                .percentChangePreTaxProfitMargin(getPercentChangePreTaxProfitMargin())
                .percentChangeBorrowingRatio(getPercentChangeBorrowingRatio())
                .percentChangeEquityGearing(getPercentChangeEquityGearing())
                .percentChangeDebtGearing(getPercentChangeDebtGearing())
                .percentChangeAvgEmpPerRem(getPercentChangeAvgEmpPerRem())
                .percentChangeProfPerEmp(getPercentChangeProfPerEmp())
                .percentChangeTurnoverPerEmp(getPercentChangeTurnoverPerEmp());
        return builder;
    }

    /**
     * Class to build instances of {@link PercentageChange}.
     */
    public static class Builder {
        private String dateOfAccounts;
        private Integer accountingPeriod;
        private String currency;
        private String companyClass;
        private String consAccounts;
        private Double percentChangeNumEmployees;
        private Double percentChangeGrossAsset;
        private Double percentChangeNetWorth;
        private Double percentChangeFixedAssets;
        private Double percentChangeCurrentAssets;
        private Double percentChangeCurrentLiabilities;
        private Double percentChangeWorkingCapital;
        private Double percentChangeCapitalEmployed;
        private Double percentChangeNetAssets;
        private Double percentChangeIssuedCapital;
        private Double percentChangeRetainedEarnings;
        private Double percentChangeShareholdersFunds;
        private Double percentChangeUKTurnover;
        private Double percentChangeExportTurnover;
        private Double percentChangeTotalTurnover;
        private Double percentChangePreTaxProfitLoss;
        private Double percentChangeRetainedProfitLoss;
        private Double percentChangeCurrentRatio;
        private Double percentChangeCreditPeriod;
        private Double percentChangeReturnOnCapital;
        private Double percentChangePreTaxProfitMargin;
        private Double percentChangeBorrowingRatio;
        private Double percentChangeEquityGearing;
        private Double percentChangeDebtGearing;
        private Double percentChangeAvgEmpPerRem;
        private Double percentChangeProfPerEmp;
        private Double percentChangeTurnoverPerEmp;



        /**
         * Setter for dateOfAccounts.
         * @param  dateOfAccounts  String value for dateOfAccounts.
         * @return Builder
         */
        public Builder dateOfAccounts(String dateOfAccounts) {
            this.dateOfAccounts = dateOfAccounts;
            return this;
        }

        /**
         * Setter for accountingPeriod.
         * @param  accountingPeriod  Integer value for accountingPeriod.
         * @return Builder
         */
        public Builder accountingPeriod(Integer accountingPeriod) {
            this.accountingPeriod = accountingPeriod;
            return this;
        }

        /**
         * Setter for currency.
         * @param  currency  String value for currency.
         * @return Builder
         */
        public Builder currency(String currency) {
            this.currency = currency;
            return this;
        }

        /**
         * Setter for companyClass.
         * @param  companyClass  String value for companyClass.
         * @return Builder
         */
        public Builder companyClass(String companyClass) {
            this.companyClass = companyClass;
            return this;
        }

        /**
         * Setter for consAccounts.
         * @param  consAccounts  String value for consAccounts.
         * @return Builder
         */
        public Builder consAccounts(String consAccounts) {
            this.consAccounts = consAccounts;
            return this;
        }

        /**
         * Setter for percentChangeNumEmployees.
         * @param  percentChangeNumEmployees  Double value for percentChangeNumEmployees.
         * @return Builder
         */
        public Builder percentChangeNumEmployees(Double percentChangeNumEmployees) {
            this.percentChangeNumEmployees = percentChangeNumEmployees;
            return this;
        }

        /**
         * Setter for percentChangeGrossAsset.
         * @param  percentChangeGrossAsset  Double value for percentChangeGrossAsset.
         * @return Builder
         */
        public Builder percentChangeGrossAsset(Double percentChangeGrossAsset) {
            this.percentChangeGrossAsset = percentChangeGrossAsset;
            return this;
        }

        /**
         * Setter for percentChangeNetWorth.
         * @param  percentChangeNetWorth  Double value for percentChangeNetWorth.
         * @return Builder
         */
        public Builder percentChangeNetWorth(Double percentChangeNetWorth) {
            this.percentChangeNetWorth = percentChangeNetWorth;
            return this;
        }

        /**
         * Setter for percentChangeFixedAssets.
         * @param  percentChangeFixedAssets  Double value for percentChangeFixedAssets.
         * @return Builder
         */
        public Builder percentChangeFixedAssets(Double percentChangeFixedAssets) {
            this.percentChangeFixedAssets = percentChangeFixedAssets;
            return this;
        }

        /**
         * Setter for percentChangeCurrentAssets.
         * @param  percentChangeCurrentAssets  Double value for percentChangeCurrentAssets.
         * @return Builder
         */
        public Builder percentChangeCurrentAssets(Double percentChangeCurrentAssets) {
            this.percentChangeCurrentAssets = percentChangeCurrentAssets;
            return this;
        }

        /**
         * Setter for percentChangeCurrentLiabilities.
         * @param  percentChangeCurrentLiabilities  Double value for
         *         percentChangeCurrentLiabilities.
         * @return Builder
         */
        public Builder percentChangeCurrentLiabilities(Double percentChangeCurrentLiabilities) {
            this.percentChangeCurrentLiabilities = percentChangeCurrentLiabilities;
            return this;
        }

        /**
         * Setter for percentChangeWorkingCapital.
         * @param  percentChangeWorkingCapital  Double value for percentChangeWorkingCapital.
         * @return Builder
         */
        public Builder percentChangeWorkingCapital(Double percentChangeWorkingCapital) {
            this.percentChangeWorkingCapital = percentChangeWorkingCapital;
            return this;
        }

        /**
         * Setter for percentChangeCapitalEmployed.
         * @param  percentChangeCapitalEmployed  Double value for percentChangeCapitalEmployed.
         * @return Builder
         */
        public Builder percentChangeCapitalEmployed(Double percentChangeCapitalEmployed) {
            this.percentChangeCapitalEmployed = percentChangeCapitalEmployed;
            return this;
        }

        /**
         * Setter for percentChangeNetAssets.
         * @param  percentChangeNetAssets  Double value for percentChangeNetAssets.
         * @return Builder
         */
        public Builder percentChangeNetAssets(Double percentChangeNetAssets) {
            this.percentChangeNetAssets = percentChangeNetAssets;
            return this;
        }

        /**
         * Setter for percentChangeIssuedCapital.
         * @param  percentChangeIssuedCapital  Double value for percentChangeIssuedCapital.
         * @return Builder
         */
        public Builder percentChangeIssuedCapital(Double percentChangeIssuedCapital) {
            this.percentChangeIssuedCapital = percentChangeIssuedCapital;
            return this;
        }

        /**
         * Setter for percentChangeRetainedEarnings.
         * @param  percentChangeRetainedEarnings  Double value for percentChangeRetainedEarnings.
         * @return Builder
         */
        public Builder percentChangeRetainedEarnings(Double percentChangeRetainedEarnings) {
            this.percentChangeRetainedEarnings = percentChangeRetainedEarnings;
            return this;
        }

        /**
         * Setter for percentChangeShareholdersFunds.
         * @param  percentChangeShareholdersFunds  Double value for percentChangeShareholdersFunds.
         * @return Builder
         */
        public Builder percentChangeShareholdersFunds(Double percentChangeShareholdersFunds) {
            this.percentChangeShareholdersFunds = percentChangeShareholdersFunds;
            return this;
        }

        /**
         * Setter for percentChangeUKTurnover.
         * @param  percentChangeUKTurnover  Double value for percentChangeUKTurnover.
         * @return Builder
         */
        public Builder percentChangeUKTurnover(Double percentChangeUKTurnover) {
            this.percentChangeUKTurnover = percentChangeUKTurnover;
            return this;
        }

        /**
         * Setter for percentChangeExportTurnover.
         * @param  percentChangeExportTurnover  Double value for percentChangeExportTurnover.
         * @return Builder
         */
        public Builder percentChangeExportTurnover(Double percentChangeExportTurnover) {
            this.percentChangeExportTurnover = percentChangeExportTurnover;
            return this;
        }

        /**
         * Setter for percentChangeTotalTurnover.
         * @param  percentChangeTotalTurnover  Double value for percentChangeTotalTurnover.
         * @return Builder
         */
        public Builder percentChangeTotalTurnover(Double percentChangeTotalTurnover) {
            this.percentChangeTotalTurnover = percentChangeTotalTurnover;
            return this;
        }

        /**
         * Setter for percentChangePreTaxProfitLoss.
         * @param  percentChangePreTaxProfitLoss  Double value for percentChangePreTaxProfitLoss.
         * @return Builder
         */
        public Builder percentChangePreTaxProfitLoss(Double percentChangePreTaxProfitLoss) {
            this.percentChangePreTaxProfitLoss = percentChangePreTaxProfitLoss;
            return this;
        }

        /**
         * Setter for percentChangeRetainedProfitLoss.
         * @param  percentChangeRetainedProfitLoss  Double value for
         *         percentChangeRetainedProfitLoss.
         * @return Builder
         */
        public Builder percentChangeRetainedProfitLoss(Double percentChangeRetainedProfitLoss) {
            this.percentChangeRetainedProfitLoss = percentChangeRetainedProfitLoss;
            return this;
        }

        /**
         * Setter for percentChangeCurrentRatio.
         * @param  percentChangeCurrentRatio  Double value for percentChangeCurrentRatio.
         * @return Builder
         */
        public Builder percentChangeCurrentRatio(Double percentChangeCurrentRatio) {
            this.percentChangeCurrentRatio = percentChangeCurrentRatio;
            return this;
        }

        /**
         * Setter for percentChangeCreditPeriod.
         * @param  percentChangeCreditPeriod  Double value for percentChangeCreditPeriod.
         * @return Builder
         */
        public Builder percentChangeCreditPeriod(Double percentChangeCreditPeriod) {
            this.percentChangeCreditPeriod = percentChangeCreditPeriod;
            return this;
        }

        /**
         * Setter for percentChangeReturnOnCapital.
         * @param  percentChangeReturnOnCapital  Double value for percentChangeReturnOnCapital.
         * @return Builder
         */
        public Builder percentChangeReturnOnCapital(Double percentChangeReturnOnCapital) {
            this.percentChangeReturnOnCapital = percentChangeReturnOnCapital;
            return this;
        }

        /**
         * Setter for percentChangePreTaxProfitMargin.
         * @param  percentChangePreTaxProfitMargin  Double value for
         *         percentChangePreTaxProfitMargin.
         * @return Builder
         */
        public Builder percentChangePreTaxProfitMargin(Double percentChangePreTaxProfitMargin) {
            this.percentChangePreTaxProfitMargin = percentChangePreTaxProfitMargin;
            return this;
        }

        /**
         * Setter for percentChangeBorrowingRatio.
         * @param  percentChangeBorrowingRatio  Double value for percentChangeBorrowingRatio.
         * @return Builder
         */
        public Builder percentChangeBorrowingRatio(Double percentChangeBorrowingRatio) {
            this.percentChangeBorrowingRatio = percentChangeBorrowingRatio;
            return this;
        }

        /**
         * Setter for percentChangeEquityGearing.
         * @param  percentChangeEquityGearing  Double value for percentChangeEquityGearing.
         * @return Builder
         */
        public Builder percentChangeEquityGearing(Double percentChangeEquityGearing) {
            this.percentChangeEquityGearing = percentChangeEquityGearing;
            return this;
        }

        /**
         * Setter for percentChangeDebtGearing.
         * @param  percentChangeDebtGearing  Double value for percentChangeDebtGearing.
         * @return Builder
         */
        public Builder percentChangeDebtGearing(Double percentChangeDebtGearing) {
            this.percentChangeDebtGearing = percentChangeDebtGearing;
            return this;
        }

        /**
         * Setter for percentChangeAvgEmpPerRem.
         * @param  percentChangeAvgEmpPerRem  Double value for percentChangeAvgEmpPerRem.
         * @return Builder
         */
        public Builder percentChangeAvgEmpPerRem(Double percentChangeAvgEmpPerRem) {
            this.percentChangeAvgEmpPerRem = percentChangeAvgEmpPerRem;
            return this;
        }

        /**
         * Setter for percentChangeProfPerEmp.
         * @param  percentChangeProfPerEmp  Double value for percentChangeProfPerEmp.
         * @return Builder
         */
        public Builder percentChangeProfPerEmp(Double percentChangeProfPerEmp) {
            this.percentChangeProfPerEmp = percentChangeProfPerEmp;
            return this;
        }

        /**
         * Setter for percentChangeTurnoverPerEmp.
         * @param  percentChangeTurnoverPerEmp  Double value for percentChangeTurnoverPerEmp.
         * @return Builder
         */
        public Builder percentChangeTurnoverPerEmp(Double percentChangeTurnoverPerEmp) {
            this.percentChangeTurnoverPerEmp = percentChangeTurnoverPerEmp;
            return this;
        }

        /**
         * Builds a new {@link PercentageChange} object using the set fields.
         * @return {@link PercentageChange}
         */
        public PercentageChange build() {
            return new PercentageChange(dateOfAccounts, accountingPeriod, currency, companyClass,
                    consAccounts, percentChangeNumEmployees, percentChangeGrossAsset,
                    percentChangeNetWorth, percentChangeFixedAssets, percentChangeCurrentAssets,
                    percentChangeCurrentLiabilities, percentChangeWorkingCapital,
                    percentChangeCapitalEmployed, percentChangeNetAssets,
                    percentChangeIssuedCapital, percentChangeRetainedEarnings,
                    percentChangeShareholdersFunds, percentChangeUKTurnover,
                    percentChangeExportTurnover, percentChangeTotalTurnover,
                    percentChangePreTaxProfitLoss, percentChangeRetainedProfitLoss,
                    percentChangeCurrentRatio, percentChangeCreditPeriod,
                    percentChangeReturnOnCapital, percentChangePreTaxProfitMargin,
                    percentChangeBorrowingRatio, percentChangeEquityGearing,
                    percentChangeDebtGearing, percentChangeAvgEmpPerRem, percentChangeProfPerEmp,
                    percentChangeTurnoverPerEmp);
        }
    }
}
