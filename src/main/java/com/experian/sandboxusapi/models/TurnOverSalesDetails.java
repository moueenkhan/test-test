/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for TurnOverSalesDetails type.
 */
public class TurnOverSalesDetails {
    private Double turnoverSales;
    private Double homeNation;
    private Double europe;
    private Double restOfTheWorld;
    private Double export;

    /**
     * Default constructor.
     */
    public TurnOverSalesDetails() {
    }

    /**
     * Initialization constructor.
     * @param  turnoverSales  Double value for turnoverSales.
     * @param  homeNation  Double value for homeNation.
     * @param  europe  Double value for europe.
     * @param  restOfTheWorld  Double value for restOfTheWorld.
     * @param  export  Double value for export.
     */
    public TurnOverSalesDetails(
            Double turnoverSales,
            Double homeNation,
            Double europe,
            Double restOfTheWorld,
            Double export) {
        this.turnoverSales = turnoverSales;
        this.homeNation = homeNation;
        this.europe = europe;
        this.restOfTheWorld = restOfTheWorld;
        this.export = export;
    }

    /**
     * Getter for TurnoverSales.
     * Value for Profit & Loss - Turnover Sales Details - Turnover Sales for these accounts
     * @return Returns the Double
     */
    @JsonGetter("TurnoverSales")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTurnoverSales() {
        return turnoverSales;
    }

    /**
     * Setter for TurnoverSales.
     * Value for Profit & Loss - Turnover Sales Details - Turnover Sales for these accounts
     * @param turnoverSales Value for Double
     */
    @JsonSetter("TurnoverSales")
    public void setTurnoverSales(Double turnoverSales) {
        this.turnoverSales = turnoverSales;
    }

    /**
     * Getter for HomeNation.
     * Value for Profit & Loss - Turnover Sales Details - Turnover Sales - Home Nation for these
     * accounts
     * @return Returns the Double
     */
    @JsonGetter("HomeNation")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getHomeNation() {
        return homeNation;
    }

    /**
     * Setter for HomeNation.
     * Value for Profit & Loss - Turnover Sales Details - Turnover Sales - Home Nation for these
     * accounts
     * @param homeNation Value for Double
     */
    @JsonSetter("HomeNation")
    public void setHomeNation(Double homeNation) {
        this.homeNation = homeNation;
    }

    /**
     * Getter for Europe.
     * Value for Profit & Loss - Turnover Sales Details - Turnover Sales - Europe for these accounts
     * @return Returns the Double
     */
    @JsonGetter("Europe")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getEurope() {
        return europe;
    }

    /**
     * Setter for Europe.
     * Value for Profit & Loss - Turnover Sales Details - Turnover Sales - Europe for these accounts
     * @param europe Value for Double
     */
    @JsonSetter("Europe")
    public void setEurope(Double europe) {
        this.europe = europe;
    }

    /**
     * Getter for RestOfTheWorld.
     * Value for Profit & Loss - Turnover Sales Details - Turnover Sales - Rest of the World for
     * these accounts
     * @return Returns the Double
     */
    @JsonGetter("RestOfTheWorld")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getRestOfTheWorld() {
        return restOfTheWorld;
    }

    /**
     * Setter for RestOfTheWorld.
     * Value for Profit & Loss - Turnover Sales Details - Turnover Sales - Rest of the World for
     * these accounts
     * @param restOfTheWorld Value for Double
     */
    @JsonSetter("RestOfTheWorld")
    public void setRestOfTheWorld(Double restOfTheWorld) {
        this.restOfTheWorld = restOfTheWorld;
    }

    /**
     * Getter for Export.
     * Value for Profit & Loss - Turnover Sales Details - Turnover Sales - Export for these accounts
     * (applicable to UK GAAP only)
     * @return Returns the Double
     */
    @JsonGetter("Export")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getExport() {
        return export;
    }

    /**
     * Setter for Export.
     * Value for Profit & Loss - Turnover Sales Details - Turnover Sales - Export for these accounts
     * (applicable to UK GAAP only)
     * @param export Value for Double
     */
    @JsonSetter("Export")
    public void setExport(Double export) {
        this.export = export;
    }

    /**
     * Converts this TurnOverSalesDetails into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "TurnOverSalesDetails [" + "turnoverSales=" + turnoverSales + ", homeNation="
                + homeNation + ", europe=" + europe + ", restOfTheWorld=" + restOfTheWorld
                + ", export=" + export + "]";
    }

    /**
     * Builds a new {@link TurnOverSalesDetails.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link TurnOverSalesDetails.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .turnoverSales(getTurnoverSales())
                .homeNation(getHomeNation())
                .europe(getEurope())
                .restOfTheWorld(getRestOfTheWorld())
                .export(getExport());
        return builder;
    }

    /**
     * Class to build instances of {@link TurnOverSalesDetails}.
     */
    public static class Builder {
        private Double turnoverSales;
        private Double homeNation;
        private Double europe;
        private Double restOfTheWorld;
        private Double export;



        /**
         * Setter for turnoverSales.
         * @param  turnoverSales  Double value for turnoverSales.
         * @return Builder
         */
        public Builder turnoverSales(Double turnoverSales) {
            this.turnoverSales = turnoverSales;
            return this;
        }

        /**
         * Setter for homeNation.
         * @param  homeNation  Double value for homeNation.
         * @return Builder
         */
        public Builder homeNation(Double homeNation) {
            this.homeNation = homeNation;
            return this;
        }

        /**
         * Setter for europe.
         * @param  europe  Double value for europe.
         * @return Builder
         */
        public Builder europe(Double europe) {
            this.europe = europe;
            return this;
        }

        /**
         * Setter for restOfTheWorld.
         * @param  restOfTheWorld  Double value for restOfTheWorld.
         * @return Builder
         */
        public Builder restOfTheWorld(Double restOfTheWorld) {
            this.restOfTheWorld = restOfTheWorld;
            return this;
        }

        /**
         * Setter for export.
         * @param  export  Double value for export.
         * @return Builder
         */
        public Builder export(Double export) {
            this.export = export;
            return this;
        }

        /**
         * Builds a new {@link TurnOverSalesDetails} object using the set fields.
         * @return {@link TurnOverSalesDetails}
         */
        public TurnOverSalesDetails build() {
            return new TurnOverSalesDetails(turnoverSales, homeNation, europe, restOfTheWorld,
                    export);
        }
    }
}
