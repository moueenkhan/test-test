/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for Alerts type.
 */
public class Alerts {
    private List<Notes> notes;
    private Integer notesCount;
    private String notesLength;

    /**
     * Default constructor.
     */
    public Alerts() {
    }

    /**
     * Initialization constructor.
     * @param  notes  List of Notes value for notes.
     * @param  notesCount  Integer value for notesCount.
     * @param  notesLength  String value for notesLength.
     */
    public Alerts(
            List<Notes> notes,
            Integer notesCount,
            String notesLength) {
        this.notes = notes;
        this.notesCount = notesCount;
        this.notesLength = notesLength;
    }

    /**
     * Getter for Notes.
     * @return Returns the List of Notes
     */
    @JsonGetter("Notes")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Notes> getNotes() {
        return notes;
    }

    /**
     * Setter for Notes.
     * @param notes Value for List of Notes
     */
    @JsonSetter("Notes")
    public void setNotes(List<Notes> notes) {
        this.notes = notes;
    }

    /**
     * Getter for NotesCount.
     * Number of Notes recorded
     * @return Returns the Integer
     */
    @JsonGetter("NotesCount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNotesCount() {
        return notesCount;
    }

    /**
     * Setter for NotesCount.
     * Number of Notes recorded
     * @param notesCount Value for Integer
     */
    @JsonSetter("NotesCount")
    public void setNotesCount(Integer notesCount) {
        this.notesCount = notesCount;
    }

    /**
     * Getter for NotesLength.
     * Notes length
     * @return Returns the String
     */
    @JsonGetter("NotesLength")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getNotesLength() {
        return notesLength;
    }

    /**
     * Setter for NotesLength.
     * Notes length
     * @param notesLength Value for String
     */
    @JsonSetter("NotesLength")
    public void setNotesLength(String notesLength) {
        this.notesLength = notesLength;
    }

    /**
     * Converts this Alerts into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Alerts [" + "notes=" + notes + ", notesCount=" + notesCount + ", notesLength="
                + notesLength + "]";
    }

    /**
     * Builds a new {@link Alerts.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Alerts.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .notes(getNotes())
                .notesCount(getNotesCount())
                .notesLength(getNotesLength());
        return builder;
    }

    /**
     * Class to build instances of {@link Alerts}.
     */
    public static class Builder {
        private List<Notes> notes;
        private Integer notesCount;
        private String notesLength;



        /**
         * Setter for notes.
         * @param  notes  List of Notes value for notes.
         * @return Builder
         */
        public Builder notes(List<Notes> notes) {
            this.notes = notes;
            return this;
        }

        /**
         * Setter for notesCount.
         * @param  notesCount  Integer value for notesCount.
         * @return Builder
         */
        public Builder notesCount(Integer notesCount) {
            this.notesCount = notesCount;
            return this;
        }

        /**
         * Setter for notesLength.
         * @param  notesLength  String value for notesLength.
         * @return Builder
         */
        public Builder notesLength(String notesLength) {
            this.notesLength = notesLength;
            return this;
        }

        /**
         * Builds a new {@link Alerts} object using the set fields.
         * @return {@link Alerts}
         */
        public Alerts build() {
            return new Alerts(notes, notesCount, notesLength);
        }
    }
}
