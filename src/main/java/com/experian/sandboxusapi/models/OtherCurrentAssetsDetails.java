/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for OtherCurrentAssetsDetails type.
 */
public class OtherCurrentAssetsDetails {
    private Double otherCurrentAssets;
    private Double assetsHeldForResale;
    private Double other;

    /**
     * Default constructor.
     */
    public OtherCurrentAssetsDetails() {
    }

    /**
     * Initialization constructor.
     * @param  otherCurrentAssets  Double value for otherCurrentAssets.
     * @param  assetsHeldForResale  Double value for assetsHeldForResale.
     * @param  other  Double value for other.
     */
    public OtherCurrentAssetsDetails(
            Double otherCurrentAssets,
            Double assetsHeldForResale,
            Double other) {
        this.otherCurrentAssets = otherCurrentAssets;
        this.assetsHeldForResale = assetsHeldForResale;
        this.other = other;
    }

    /**
     * Getter for OtherCurrentAssets.
     * Value for Balance Sheet - Other Current Assets Details - Other Current Assets for these
     * accounts
     * @return Returns the Double
     */
    @JsonGetter("OtherCurrentAssets")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getOtherCurrentAssets() {
        return otherCurrentAssets;
    }

    /**
     * Setter for OtherCurrentAssets.
     * Value for Balance Sheet - Other Current Assets Details - Other Current Assets for these
     * accounts
     * @param otherCurrentAssets Value for Double
     */
    @JsonSetter("OtherCurrentAssets")
    public void setOtherCurrentAssets(Double otherCurrentAssets) {
        this.otherCurrentAssets = otherCurrentAssets;
    }

    /**
     * Getter for AssetsHeldForResale.
     * Value for Balance Sheet - Other Current Assets Details - Assets Held for Resale for these
     * accounts
     * @return Returns the Double
     */
    @JsonGetter("AssetsHeldForResale")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getAssetsHeldForResale() {
        return assetsHeldForResale;
    }

    /**
     * Setter for AssetsHeldForResale.
     * Value for Balance Sheet - Other Current Assets Details - Assets Held for Resale for these
     * accounts
     * @param assetsHeldForResale Value for Double
     */
    @JsonSetter("AssetsHeldForResale")
    public void setAssetsHeldForResale(Double assetsHeldForResale) {
        this.assetsHeldForResale = assetsHeldForResale;
    }

    /**
     * Getter for Other.
     * Value for Balance Sheet - Other Current Assets Details - Other Assets for these accounts
     * @return Returns the Double
     */
    @JsonGetter("Other")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getOther() {
        return other;
    }

    /**
     * Setter for Other.
     * Value for Balance Sheet - Other Current Assets Details - Other Assets for these accounts
     * @param other Value for Double
     */
    @JsonSetter("Other")
    public void setOther(Double other) {
        this.other = other;
    }

    /**
     * Converts this OtherCurrentAssetsDetails into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "OtherCurrentAssetsDetails [" + "otherCurrentAssets=" + otherCurrentAssets
                + ", assetsHeldForResale=" + assetsHeldForResale + ", other=" + other + "]";
    }

    /**
     * Builds a new {@link OtherCurrentAssetsDetails.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link OtherCurrentAssetsDetails.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .otherCurrentAssets(getOtherCurrentAssets())
                .assetsHeldForResale(getAssetsHeldForResale())
                .other(getOther());
        return builder;
    }

    /**
     * Class to build instances of {@link OtherCurrentAssetsDetails}.
     */
    public static class Builder {
        private Double otherCurrentAssets;
        private Double assetsHeldForResale;
        private Double other;



        /**
         * Setter for otherCurrentAssets.
         * @param  otherCurrentAssets  Double value for otherCurrentAssets.
         * @return Builder
         */
        public Builder otherCurrentAssets(Double otherCurrentAssets) {
            this.otherCurrentAssets = otherCurrentAssets;
            return this;
        }

        /**
         * Setter for assetsHeldForResale.
         * @param  assetsHeldForResale  Double value for assetsHeldForResale.
         * @return Builder
         */
        public Builder assetsHeldForResale(Double assetsHeldForResale) {
            this.assetsHeldForResale = assetsHeldForResale;
            return this;
        }

        /**
         * Setter for other.
         * @param  other  Double value for other.
         * @return Builder
         */
        public Builder other(Double other) {
            this.other = other;
            return this;
        }

        /**
         * Builds a new {@link OtherCurrentAssetsDetails} object using the set fields.
         * @return {@link OtherCurrentAssetsDetails}
         */
        public OtherCurrentAssetsDetails build() {
            return new OtherCurrentAssetsDetails(otherCurrentAssets, assetsHeldForResale, other);
        }
    }
}
