/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for CreditorsDetails type.
 */
public class CreditorsDetails {
    private Double creditors;
    private Double accountsPayableTradeCreditors;
    private Double subsidiaryAssociateJoint;
    private Double groupLoans;
    private Double directorLoans;
    private Double accrualsDeferredIncome;
    private Double socialSecurityVAT;
    private Double taxationPayable;
    private Double otherCreditors;

    /**
     * Default constructor.
     */
    public CreditorsDetails() {
    }

    /**
     * Initialization constructor.
     * @param  creditors  Double value for creditors.
     * @param  accountsPayableTradeCreditors  Double value for accountsPayableTradeCreditors.
     * @param  subsidiaryAssociateJoint  Double value for subsidiaryAssociateJoint.
     * @param  groupLoans  Double value for groupLoans.
     * @param  directorLoans  Double value for directorLoans.
     * @param  accrualsDeferredIncome  Double value for accrualsDeferredIncome.
     * @param  socialSecurityVAT  Double value for socialSecurityVAT.
     * @param  taxationPayable  Double value for taxationPayable.
     * @param  otherCreditors  Double value for otherCreditors.
     */
    public CreditorsDetails(
            Double creditors,
            Double accountsPayableTradeCreditors,
            Double subsidiaryAssociateJoint,
            Double groupLoans,
            Double directorLoans,
            Double accrualsDeferredIncome,
            Double socialSecurityVAT,
            Double taxationPayable,
            Double otherCreditors) {
        this.creditors = creditors;
        this.accountsPayableTradeCreditors = accountsPayableTradeCreditors;
        this.subsidiaryAssociateJoint = subsidiaryAssociateJoint;
        this.groupLoans = groupLoans;
        this.directorLoans = directorLoans;
        this.accrualsDeferredIncome = accrualsDeferredIncome;
        this.socialSecurityVAT = socialSecurityVAT;
        this.taxationPayable = taxationPayable;
        this.otherCreditors = otherCreditors;
    }

    /**
     * Getter for Creditors.
     * Value for Balance Sheet - Creditors for these accounts
     * @return Returns the Double
     */
    @JsonGetter("Creditors")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getCreditors() {
        return creditors;
    }

    /**
     * Setter for Creditors.
     * Value for Balance Sheet - Creditors for these accounts
     * @param creditors Value for Double
     */
    @JsonSetter("Creditors")
    public void setCreditors(Double creditors) {
        this.creditors = creditors;
    }

    /**
     * Getter for AccountsPayableTradeCreditors.
     * Value for Balance Sheet - Creditors - Accounts Receivable Trade Creditors for these accounts
     * @return Returns the Double
     */
    @JsonGetter("AccountsPayableTradeCreditors")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getAccountsPayableTradeCreditors() {
        return accountsPayableTradeCreditors;
    }

    /**
     * Setter for AccountsPayableTradeCreditors.
     * Value for Balance Sheet - Creditors - Accounts Receivable Trade Creditors for these accounts
     * @param accountsPayableTradeCreditors Value for Double
     */
    @JsonSetter("AccountsPayableTradeCreditors")
    public void setAccountsPayableTradeCreditors(Double accountsPayableTradeCreditors) {
        this.accountsPayableTradeCreditors = accountsPayableTradeCreditors;
    }

    /**
     * Getter for SubsidiaryAssociateJoint.
     * Value for Balance Sheet - Creditors - Subsidiary / Associate / Joint Creditors for these
     * accounts
     * @return Returns the Double
     */
    @JsonGetter("SubsidiaryAssociateJoint")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getSubsidiaryAssociateJoint() {
        return subsidiaryAssociateJoint;
    }

    /**
     * Setter for SubsidiaryAssociateJoint.
     * Value for Balance Sheet - Creditors - Subsidiary / Associate / Joint Creditors for these
     * accounts
     * @param subsidiaryAssociateJoint Value for Double
     */
    @JsonSetter("SubsidiaryAssociateJoint")
    public void setSubsidiaryAssociateJoint(Double subsidiaryAssociateJoint) {
        this.subsidiaryAssociateJoint = subsidiaryAssociateJoint;
    }

    /**
     * Getter for GroupLoans.
     * Value for Balance Sheet - Creditors - Creditors Group Loans for these accounts (applicable to
     * UK GAAP only)
     * @return Returns the Double
     */
    @JsonGetter("GroupLoans")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getGroupLoans() {
        return groupLoans;
    }

    /**
     * Setter for GroupLoans.
     * Value for Balance Sheet - Creditors - Creditors Group Loans for these accounts (applicable to
     * UK GAAP only)
     * @param groupLoans Value for Double
     */
    @JsonSetter("GroupLoans")
    public void setGroupLoans(Double groupLoans) {
        this.groupLoans = groupLoans;
    }

    /**
     * Getter for DirectorLoans.
     * Value for Balance Sheet - Creditors - Creditors Director's Loans for these accounts
     * (applicable to UK GAAP only)
     * @return Returns the Double
     */
    @JsonGetter("DirectorLoans")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getDirectorLoans() {
        return directorLoans;
    }

    /**
     * Setter for DirectorLoans.
     * Value for Balance Sheet - Creditors - Creditors Director's Loans for these accounts
     * (applicable to UK GAAP only)
     * @param directorLoans Value for Double
     */
    @JsonSetter("DirectorLoans")
    public void setDirectorLoans(Double directorLoans) {
        this.directorLoans = directorLoans;
    }

    /**
     * Getter for AccrualsDeferredIncome.
     * Value for Balance Sheet - Creditors - Accruals Deferred Income for these accounts
     * @return Returns the Double
     */
    @JsonGetter("AccrualsDeferredIncome")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getAccrualsDeferredIncome() {
        return accrualsDeferredIncome;
    }

    /**
     * Setter for AccrualsDeferredIncome.
     * Value for Balance Sheet - Creditors - Accruals Deferred Income for these accounts
     * @param accrualsDeferredIncome Value for Double
     */
    @JsonSetter("AccrualsDeferredIncome")
    public void setAccrualsDeferredIncome(Double accrualsDeferredIncome) {
        this.accrualsDeferredIncome = accrualsDeferredIncome;
    }

    /**
     * Getter for SocialSecurityVAT.
     * Value for Balance Sheet - Creditors - Social Security VAT for these accounts
     * @return Returns the Double
     */
    @JsonGetter("SocialSecurityVAT")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getSocialSecurityVAT() {
        return socialSecurityVAT;
    }

    /**
     * Setter for SocialSecurityVAT.
     * Value for Balance Sheet - Creditors - Social Security VAT for these accounts
     * @param socialSecurityVAT Value for Double
     */
    @JsonSetter("SocialSecurityVAT")
    public void setSocialSecurityVAT(Double socialSecurityVAT) {
        this.socialSecurityVAT = socialSecurityVAT;
    }

    /**
     * Getter for TaxationPayable.
     * Value for Balance Sheet - Creditors - Taxation Payable for these accounts
     * @return Returns the Double
     */
    @JsonGetter("TaxationPayable")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTaxationPayable() {
        return taxationPayable;
    }

    /**
     * Setter for TaxationPayable.
     * Value for Balance Sheet - Creditors - Taxation Payable for these accounts
     * @param taxationPayable Value for Double
     */
    @JsonSetter("TaxationPayable")
    public void setTaxationPayable(Double taxationPayable) {
        this.taxationPayable = taxationPayable;
    }

    /**
     * Getter for OtherCreditors.
     * Value for Balance Sheet - Creditors - Other Creditors for these accounts
     * @return Returns the Double
     */
    @JsonGetter("OtherCreditors")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getOtherCreditors() {
        return otherCreditors;
    }

    /**
     * Setter for OtherCreditors.
     * Value for Balance Sheet - Creditors - Other Creditors for these accounts
     * @param otherCreditors Value for Double
     */
    @JsonSetter("OtherCreditors")
    public void setOtherCreditors(Double otherCreditors) {
        this.otherCreditors = otherCreditors;
    }

    /**
     * Converts this CreditorsDetails into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "CreditorsDetails [" + "creditors=" + creditors + ", accountsPayableTradeCreditors="
                + accountsPayableTradeCreditors + ", subsidiaryAssociateJoint="
                + subsidiaryAssociateJoint + ", groupLoans=" + groupLoans + ", directorLoans="
                + directorLoans + ", accrualsDeferredIncome=" + accrualsDeferredIncome
                + ", socialSecurityVAT=" + socialSecurityVAT + ", taxationPayable="
                + taxationPayable + ", otherCreditors=" + otherCreditors + "]";
    }

    /**
     * Builds a new {@link CreditorsDetails.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link CreditorsDetails.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .creditors(getCreditors())
                .accountsPayableTradeCreditors(getAccountsPayableTradeCreditors())
                .subsidiaryAssociateJoint(getSubsidiaryAssociateJoint())
                .groupLoans(getGroupLoans())
                .directorLoans(getDirectorLoans())
                .accrualsDeferredIncome(getAccrualsDeferredIncome())
                .socialSecurityVAT(getSocialSecurityVAT())
                .taxationPayable(getTaxationPayable())
                .otherCreditors(getOtherCreditors());
        return builder;
    }

    /**
     * Class to build instances of {@link CreditorsDetails}.
     */
    public static class Builder {
        private Double creditors;
        private Double accountsPayableTradeCreditors;
        private Double subsidiaryAssociateJoint;
        private Double groupLoans;
        private Double directorLoans;
        private Double accrualsDeferredIncome;
        private Double socialSecurityVAT;
        private Double taxationPayable;
        private Double otherCreditors;



        /**
         * Setter for creditors.
         * @param  creditors  Double value for creditors.
         * @return Builder
         */
        public Builder creditors(Double creditors) {
            this.creditors = creditors;
            return this;
        }

        /**
         * Setter for accountsPayableTradeCreditors.
         * @param  accountsPayableTradeCreditors  Double value for accountsPayableTradeCreditors.
         * @return Builder
         */
        public Builder accountsPayableTradeCreditors(Double accountsPayableTradeCreditors) {
            this.accountsPayableTradeCreditors = accountsPayableTradeCreditors;
            return this;
        }

        /**
         * Setter for subsidiaryAssociateJoint.
         * @param  subsidiaryAssociateJoint  Double value for subsidiaryAssociateJoint.
         * @return Builder
         */
        public Builder subsidiaryAssociateJoint(Double subsidiaryAssociateJoint) {
            this.subsidiaryAssociateJoint = subsidiaryAssociateJoint;
            return this;
        }

        /**
         * Setter for groupLoans.
         * @param  groupLoans  Double value for groupLoans.
         * @return Builder
         */
        public Builder groupLoans(Double groupLoans) {
            this.groupLoans = groupLoans;
            return this;
        }

        /**
         * Setter for directorLoans.
         * @param  directorLoans  Double value for directorLoans.
         * @return Builder
         */
        public Builder directorLoans(Double directorLoans) {
            this.directorLoans = directorLoans;
            return this;
        }

        /**
         * Setter for accrualsDeferredIncome.
         * @param  accrualsDeferredIncome  Double value for accrualsDeferredIncome.
         * @return Builder
         */
        public Builder accrualsDeferredIncome(Double accrualsDeferredIncome) {
            this.accrualsDeferredIncome = accrualsDeferredIncome;
            return this;
        }

        /**
         * Setter for socialSecurityVAT.
         * @param  socialSecurityVAT  Double value for socialSecurityVAT.
         * @return Builder
         */
        public Builder socialSecurityVAT(Double socialSecurityVAT) {
            this.socialSecurityVAT = socialSecurityVAT;
            return this;
        }

        /**
         * Setter for taxationPayable.
         * @param  taxationPayable  Double value for taxationPayable.
         * @return Builder
         */
        public Builder taxationPayable(Double taxationPayable) {
            this.taxationPayable = taxationPayable;
            return this;
        }

        /**
         * Setter for otherCreditors.
         * @param  otherCreditors  Double value for otherCreditors.
         * @return Builder
         */
        public Builder otherCreditors(Double otherCreditors) {
            this.otherCreditors = otherCreditors;
            return this;
        }

        /**
         * Builds a new {@link CreditorsDetails} object using the set fields.
         * @return {@link CreditorsDetails}
         */
        public CreditorsDetails build() {
            return new CreditorsDetails(creditors, accountsPayableTradeCreditors,
                    subsidiaryAssociateJoint, groupLoans, directorLoans, accrualsDeferredIncome,
                    socialSecurityVAT, taxationPayable, otherCreditors);
        }
    }
}
