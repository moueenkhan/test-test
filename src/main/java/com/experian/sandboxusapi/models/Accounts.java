/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for Accounts type.
 */
public class Accounts {
    private String dateOfAccounts;
    private Integer accountingPeriod;
    private String currency;
    private String currencyMultiplier;
    private String companyClass;
    private String consolidatedAccounts;
    private String dormancyFlag;
    private String latestAccountsType;
    private String restatedAccounts;
    private BalanceSheet balanceSheet;
    private ProfitLoss profitLoss;
    private DiscontinuedOperations discontinuedOperations;
    private DisclosureItems disclosureItems;
    private String contingentLiability;
    private String postBalanceSheetEvents;
    private String charitableGivingIndicator;
    private Double charitableGivingValue;

    /**
     * Default constructor.
     */
    public Accounts() {
    }

    /**
     * Initialization constructor.
     * @param  dateOfAccounts  String value for dateOfAccounts.
     * @param  accountingPeriod  Integer value for accountingPeriod.
     * @param  currency  String value for currency.
     * @param  currencyMultiplier  String value for currencyMultiplier.
     * @param  companyClass  String value for companyClass.
     * @param  consolidatedAccounts  String value for consolidatedAccounts.
     * @param  dormancyFlag  String value for dormancyFlag.
     * @param  latestAccountsType  String value for latestAccountsType.
     * @param  restatedAccounts  String value for restatedAccounts.
     * @param  balanceSheet  BalanceSheet value for balanceSheet.
     * @param  profitLoss  ProfitLoss value for profitLoss.
     * @param  discontinuedOperations  DiscontinuedOperations value for discontinuedOperations.
     * @param  disclosureItems  DisclosureItems value for disclosureItems.
     * @param  contingentLiability  String value for contingentLiability.
     * @param  postBalanceSheetEvents  String value for postBalanceSheetEvents.
     * @param  charitableGivingIndicator  String value for charitableGivingIndicator.
     * @param  charitableGivingValue  Double value for charitableGivingValue.
     */
    public Accounts(
            String dateOfAccounts,
            Integer accountingPeriod,
            String currency,
            String currencyMultiplier,
            String companyClass,
            String consolidatedAccounts,
            String dormancyFlag,
            String latestAccountsType,
            String restatedAccounts,
            BalanceSheet balanceSheet,
            ProfitLoss profitLoss,
            DiscontinuedOperations discontinuedOperations,
            DisclosureItems disclosureItems,
            String contingentLiability,
            String postBalanceSheetEvents,
            String charitableGivingIndicator,
            Double charitableGivingValue) {
        this.dateOfAccounts = dateOfAccounts;
        this.accountingPeriod = accountingPeriod;
        this.currency = currency;
        this.currencyMultiplier = currencyMultiplier;
        this.companyClass = companyClass;
        this.consolidatedAccounts = consolidatedAccounts;
        this.dormancyFlag = dormancyFlag;
        this.latestAccountsType = latestAccountsType;
        this.restatedAccounts = restatedAccounts;
        this.balanceSheet = balanceSheet;
        this.profitLoss = profitLoss;
        this.discontinuedOperations = discontinuedOperations;
        this.disclosureItems = disclosureItems;
        this.contingentLiability = contingentLiability;
        this.postBalanceSheetEvents = postBalanceSheetEvents;
        this.charitableGivingIndicator = charitableGivingIndicator;
        this.charitableGivingValue = charitableGivingValue;
    }

    /**
     * Getter for DateOfAccounts.
     * Date of accounts (yyyy-mm-dd)
     * @return Returns the String
     */
    @JsonGetter("DateOfAccounts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDateOfAccounts() {
        return dateOfAccounts;
    }

    /**
     * Setter for DateOfAccounts.
     * Date of accounts (yyyy-mm-dd)
     * @param dateOfAccounts Value for String
     */
    @JsonSetter("DateOfAccounts")
    public void setDateOfAccounts(String dateOfAccounts) {
        this.dateOfAccounts = dateOfAccounts;
    }

    /**
     * Getter for AccountingPeriod.
     * Number of weeks covered by these accounts
     * @return Returns the Integer
     */
    @JsonGetter("AccountingPeriod")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getAccountingPeriod() {
        return accountingPeriod;
    }

    /**
     * Setter for AccountingPeriod.
     * Number of weeks covered by these accounts
     * @param accountingPeriod Value for Integer
     */
    @JsonSetter("AccountingPeriod")
    public void setAccountingPeriod(Integer accountingPeriod) {
        this.accountingPeriod = accountingPeriod;
    }

    /**
     * Getter for Currency.
     * Currency under which the accounts have been reported - ISO currency code
     * @return Returns the String
     */
    @JsonGetter("Currency")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCurrency() {
        return currency;
    }

    /**
     * Setter for Currency.
     * Currency under which the accounts have been reported - ISO currency code
     * @param currency Value for String
     */
    @JsonSetter("Currency")
    public void setCurrency(String currency) {
        this.currency = currency;
    }

    /**
     * Getter for CurrencyMultiplier.
     * Currency multiplier applicable to these accounts - N = Financial fields in units; T =
     * Financial fields in thousands
     * @return Returns the String
     */
    @JsonGetter("CurrencyMultiplier")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCurrencyMultiplier() {
        return currencyMultiplier;
    }

    /**
     * Setter for CurrencyMultiplier.
     * Currency multiplier applicable to these accounts - N = Financial fields in units; T =
     * Financial fields in thousands
     * @param currencyMultiplier Value for String
     */
    @JsonSetter("CurrencyMultiplier")
    public void setCurrencyMultiplier(String currencyMultiplier) {
        this.currencyMultiplier = currencyMultiplier;
    }

    /**
     * Getter for CompanyClass.
     * Size classification for the limited company - S = Small sized company; M = Medium sized
     * company; L = Large sized company
     * @return Returns the String
     */
    @JsonGetter("CompanyClass")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCompanyClass() {
        return companyClass;
    }

    /**
     * Setter for CompanyClass.
     * Size classification for the limited company - S = Small sized company; M = Medium sized
     * company; L = Large sized company
     * @param companyClass Value for String
     */
    @JsonSetter("CompanyClass")
    public void setCompanyClass(String companyClass) {
        this.companyClass = companyClass;
    }

    /**
     * Getter for ConsolidatedAccounts.
     * Indicator showing whether the accounts are consolidated - Y = Consolidated; N = Not
     * consolidated
     * @return Returns the String
     */
    @JsonGetter("ConsolidatedAccounts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getConsolidatedAccounts() {
        return consolidatedAccounts;
    }

    /**
     * Setter for ConsolidatedAccounts.
     * Indicator showing whether the accounts are consolidated - Y = Consolidated; N = Not
     * consolidated
     * @param consolidatedAccounts Value for String
     */
    @JsonSetter("ConsolidatedAccounts")
    public void setConsolidatedAccounts(String consolidatedAccounts) {
        this.consolidatedAccounts = consolidatedAccounts;
    }

    /**
     * Getter for DormancyFlag.
     * Indicator showing the dormancy status of the limited company accounts- C = CRO dormancy; A =
     * Dormant accounts; N = Company not dormant/ No accounts; Q = Quasi-dormant
     * @return Returns the String
     */
    @JsonGetter("DormancyFlag")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDormancyFlag() {
        return dormancyFlag;
    }

    /**
     * Setter for DormancyFlag.
     * Indicator showing the dormancy status of the limited company accounts- C = CRO dormancy; A =
     * Dormant accounts; N = Company not dormant/ No accounts; Q = Quasi-dormant
     * @param dormancyFlag Value for String
     */
    @JsonSetter("DormancyFlag")
    public void setDormancyFlag(String dormancyFlag) {
        this.dormancyFlag = dormancyFlag;
    }

    /**
     * Getter for LatestAccountsType.
     * Indicator of accounting method used to prepare the accounts - I = IFRS; G = GAAP
     * @return Returns the String
     */
    @JsonGetter("LatestAccountsType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLatestAccountsType() {
        return latestAccountsType;
    }

    /**
     * Setter for LatestAccountsType.
     * Indicator of accounting method used to prepare the accounts - I = IFRS; G = GAAP
     * @param latestAccountsType Value for String
     */
    @JsonSetter("LatestAccountsType")
    public void setLatestAccountsType(String latestAccountsType) {
        this.latestAccountsType = latestAccountsType;
    }

    /**
     * Getter for RestatedAccounts.
     * Indicator showing whether the accounts are restated - Y = Restated; N = Not restated
     * @return Returns the String
     */
    @JsonGetter("RestatedAccounts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getRestatedAccounts() {
        return restatedAccounts;
    }

    /**
     * Setter for RestatedAccounts.
     * Indicator showing whether the accounts are restated - Y = Restated; N = Not restated
     * @param restatedAccounts Value for String
     */
    @JsonSetter("RestatedAccounts")
    public void setRestatedAccounts(String restatedAccounts) {
        this.restatedAccounts = restatedAccounts;
    }

    /**
     * Getter for BalanceSheet.
     * @return Returns the BalanceSheet
     */
    @JsonGetter("BalanceSheet")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public BalanceSheet getBalanceSheet() {
        return balanceSheet;
    }

    /**
     * Setter for BalanceSheet.
     * @param balanceSheet Value for BalanceSheet
     */
    @JsonSetter("BalanceSheet")
    public void setBalanceSheet(BalanceSheet balanceSheet) {
        this.balanceSheet = balanceSheet;
    }

    /**
     * Getter for ProfitLoss.
     * @return Returns the ProfitLoss
     */
    @JsonGetter("ProfitLoss")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ProfitLoss getProfitLoss() {
        return profitLoss;
    }

    /**
     * Setter for ProfitLoss.
     * @param profitLoss Value for ProfitLoss
     */
    @JsonSetter("ProfitLoss")
    public void setProfitLoss(ProfitLoss profitLoss) {
        this.profitLoss = profitLoss;
    }

    /**
     * Getter for DiscontinuedOperations.
     * @return Returns the DiscontinuedOperations
     */
    @JsonGetter("DiscontinuedOperations")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public DiscontinuedOperations getDiscontinuedOperations() {
        return discontinuedOperations;
    }

    /**
     * Setter for DiscontinuedOperations.
     * @param discontinuedOperations Value for DiscontinuedOperations
     */
    @JsonSetter("DiscontinuedOperations")
    public void setDiscontinuedOperations(DiscontinuedOperations discontinuedOperations) {
        this.discontinuedOperations = discontinuedOperations;
    }

    /**
     * Getter for DisclosureItems.
     * @return Returns the DisclosureItems
     */
    @JsonGetter("DisclosureItems")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public DisclosureItems getDisclosureItems() {
        return disclosureItems;
    }

    /**
     * Setter for DisclosureItems.
     * @param disclosureItems Value for DisclosureItems
     */
    @JsonSetter("DisclosureItems")
    public void setDisclosureItems(DisclosureItems disclosureItems) {
        this.disclosureItems = disclosureItems;
    }

    /**
     * Getter for ContingentLiability.
     * Contingent Liability indicator - Y = There are contingent liabilities; N = There are no
     * contingent liabilities
     * @return Returns the String
     */
    @JsonGetter("ContingentLiability")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getContingentLiability() {
        return contingentLiability;
    }

    /**
     * Setter for ContingentLiability.
     * Contingent Liability indicator - Y = There are contingent liabilities; N = There are no
     * contingent liabilities
     * @param contingentLiability Value for String
     */
    @JsonSetter("ContingentLiability")
    public void setContingentLiability(String contingentLiability) {
        this.contingentLiability = contingentLiability;
    }

    /**
     * Getter for PostBalanceSheetEvents.
     * Post Balance Sheet Events indicator - Y = There are post balance sheet events; N = There are
     * no post balance sheet events
     * @return Returns the String
     */
    @JsonGetter("PostBalanceSheetEvents")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPostBalanceSheetEvents() {
        return postBalanceSheetEvents;
    }

    /**
     * Setter for PostBalanceSheetEvents.
     * Post Balance Sheet Events indicator - Y = There are post balance sheet events; N = There are
     * no post balance sheet events
     * @param postBalanceSheetEvents Value for String
     */
    @JsonSetter("PostBalanceSheetEvents")
    public void setPostBalanceSheetEvents(String postBalanceSheetEvents) {
        this.postBalanceSheetEvents = postBalanceSheetEvents;
    }

    /**
     * Getter for CharitableGivingIndicator.
     * Charitable Giving indicator - Y = There is a charitable giving value; N = There is no
     * charitable giving value
     * @return Returns the String
     */
    @JsonGetter("CharitableGivingIndicator")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCharitableGivingIndicator() {
        return charitableGivingIndicator;
    }

    /**
     * Setter for CharitableGivingIndicator.
     * Charitable Giving indicator - Y = There is a charitable giving value; N = There is no
     * charitable giving value
     * @param charitableGivingIndicator Value for String
     */
    @JsonSetter("CharitableGivingIndicator")
    public void setCharitableGivingIndicator(String charitableGivingIndicator) {
        this.charitableGivingIndicator = charitableGivingIndicator;
    }

    /**
     * Getter for CharitableGivingValue.
     * Value of Charitable Giving for these accounts - Not subject to Currency Multiplier
     * @return Returns the Double
     */
    @JsonGetter("CharitableGivingValue")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getCharitableGivingValue() {
        return charitableGivingValue;
    }

    /**
     * Setter for CharitableGivingValue.
     * Value of Charitable Giving for these accounts - Not subject to Currency Multiplier
     * @param charitableGivingValue Value for Double
     */
    @JsonSetter("CharitableGivingValue")
    public void setCharitableGivingValue(Double charitableGivingValue) {
        this.charitableGivingValue = charitableGivingValue;
    }

    /**
     * Converts this Accounts into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Accounts [" + "dateOfAccounts=" + dateOfAccounts + ", accountingPeriod="
                + accountingPeriod + ", currency=" + currency + ", currencyMultiplier="
                + currencyMultiplier + ", companyClass=" + companyClass + ", consolidatedAccounts="
                + consolidatedAccounts + ", dormancyFlag=" + dormancyFlag + ", latestAccountsType="
                + latestAccountsType + ", restatedAccounts=" + restatedAccounts + ", balanceSheet="
                + balanceSheet + ", profitLoss=" + profitLoss + ", discontinuedOperations="
                + discontinuedOperations + ", disclosureItems=" + disclosureItems
                + ", contingentLiability=" + contingentLiability + ", postBalanceSheetEvents="
                + postBalanceSheetEvents + ", charitableGivingIndicator="
                + charitableGivingIndicator + ", charitableGivingValue=" + charitableGivingValue
                + "]";
    }

    /**
     * Builds a new {@link Accounts.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Accounts.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .dateOfAccounts(getDateOfAccounts())
                .accountingPeriod(getAccountingPeriod())
                .currency(getCurrency())
                .currencyMultiplier(getCurrencyMultiplier())
                .companyClass(getCompanyClass())
                .consolidatedAccounts(getConsolidatedAccounts())
                .dormancyFlag(getDormancyFlag())
                .latestAccountsType(getLatestAccountsType())
                .restatedAccounts(getRestatedAccounts())
                .balanceSheet(getBalanceSheet())
                .profitLoss(getProfitLoss())
                .discontinuedOperations(getDiscontinuedOperations())
                .disclosureItems(getDisclosureItems())
                .contingentLiability(getContingentLiability())
                .postBalanceSheetEvents(getPostBalanceSheetEvents())
                .charitableGivingIndicator(getCharitableGivingIndicator())
                .charitableGivingValue(getCharitableGivingValue());
        return builder;
    }

    /**
     * Class to build instances of {@link Accounts}.
     */
    public static class Builder {
        private String dateOfAccounts;
        private Integer accountingPeriod;
        private String currency;
        private String currencyMultiplier;
        private String companyClass;
        private String consolidatedAccounts;
        private String dormancyFlag;
        private String latestAccountsType;
        private String restatedAccounts;
        private BalanceSheet balanceSheet;
        private ProfitLoss profitLoss;
        private DiscontinuedOperations discontinuedOperations;
        private DisclosureItems disclosureItems;
        private String contingentLiability;
        private String postBalanceSheetEvents;
        private String charitableGivingIndicator;
        private Double charitableGivingValue;



        /**
         * Setter for dateOfAccounts.
         * @param  dateOfAccounts  String value for dateOfAccounts.
         * @return Builder
         */
        public Builder dateOfAccounts(String dateOfAccounts) {
            this.dateOfAccounts = dateOfAccounts;
            return this;
        }

        /**
         * Setter for accountingPeriod.
         * @param  accountingPeriod  Integer value for accountingPeriod.
         * @return Builder
         */
        public Builder accountingPeriod(Integer accountingPeriod) {
            this.accountingPeriod = accountingPeriod;
            return this;
        }

        /**
         * Setter for currency.
         * @param  currency  String value for currency.
         * @return Builder
         */
        public Builder currency(String currency) {
            this.currency = currency;
            return this;
        }

        /**
         * Setter for currencyMultiplier.
         * @param  currencyMultiplier  String value for currencyMultiplier.
         * @return Builder
         */
        public Builder currencyMultiplier(String currencyMultiplier) {
            this.currencyMultiplier = currencyMultiplier;
            return this;
        }

        /**
         * Setter for companyClass.
         * @param  companyClass  String value for companyClass.
         * @return Builder
         */
        public Builder companyClass(String companyClass) {
            this.companyClass = companyClass;
            return this;
        }

        /**
         * Setter for consolidatedAccounts.
         * @param  consolidatedAccounts  String value for consolidatedAccounts.
         * @return Builder
         */
        public Builder consolidatedAccounts(String consolidatedAccounts) {
            this.consolidatedAccounts = consolidatedAccounts;
            return this;
        }

        /**
         * Setter for dormancyFlag.
         * @param  dormancyFlag  String value for dormancyFlag.
         * @return Builder
         */
        public Builder dormancyFlag(String dormancyFlag) {
            this.dormancyFlag = dormancyFlag;
            return this;
        }

        /**
         * Setter for latestAccountsType.
         * @param  latestAccountsType  String value for latestAccountsType.
         * @return Builder
         */
        public Builder latestAccountsType(String latestAccountsType) {
            this.latestAccountsType = latestAccountsType;
            return this;
        }

        /**
         * Setter for restatedAccounts.
         * @param  restatedAccounts  String value for restatedAccounts.
         * @return Builder
         */
        public Builder restatedAccounts(String restatedAccounts) {
            this.restatedAccounts = restatedAccounts;
            return this;
        }

        /**
         * Setter for balanceSheet.
         * @param  balanceSheet  BalanceSheet value for balanceSheet.
         * @return Builder
         */
        public Builder balanceSheet(BalanceSheet balanceSheet) {
            this.balanceSheet = balanceSheet;
            return this;
        }

        /**
         * Setter for profitLoss.
         * @param  profitLoss  ProfitLoss value for profitLoss.
         * @return Builder
         */
        public Builder profitLoss(ProfitLoss profitLoss) {
            this.profitLoss = profitLoss;
            return this;
        }

        /**
         * Setter for discontinuedOperations.
         * @param  discontinuedOperations  DiscontinuedOperations value for discontinuedOperations.
         * @return Builder
         */
        public Builder discontinuedOperations(DiscontinuedOperations discontinuedOperations) {
            this.discontinuedOperations = discontinuedOperations;
            return this;
        }

        /**
         * Setter for disclosureItems.
         * @param  disclosureItems  DisclosureItems value for disclosureItems.
         * @return Builder
         */
        public Builder disclosureItems(DisclosureItems disclosureItems) {
            this.disclosureItems = disclosureItems;
            return this;
        }

        /**
         * Setter for contingentLiability.
         * @param  contingentLiability  String value for contingentLiability.
         * @return Builder
         */
        public Builder contingentLiability(String contingentLiability) {
            this.contingentLiability = contingentLiability;
            return this;
        }

        /**
         * Setter for postBalanceSheetEvents.
         * @param  postBalanceSheetEvents  String value for postBalanceSheetEvents.
         * @return Builder
         */
        public Builder postBalanceSheetEvents(String postBalanceSheetEvents) {
            this.postBalanceSheetEvents = postBalanceSheetEvents;
            return this;
        }

        /**
         * Setter for charitableGivingIndicator.
         * @param  charitableGivingIndicator  String value for charitableGivingIndicator.
         * @return Builder
         */
        public Builder charitableGivingIndicator(String charitableGivingIndicator) {
            this.charitableGivingIndicator = charitableGivingIndicator;
            return this;
        }

        /**
         * Setter for charitableGivingValue.
         * @param  charitableGivingValue  Double value for charitableGivingValue.
         * @return Builder
         */
        public Builder charitableGivingValue(Double charitableGivingValue) {
            this.charitableGivingValue = charitableGivingValue;
            return this;
        }

        /**
         * Builds a new {@link Accounts} object using the set fields.
         * @return {@link Accounts}
         */
        public Accounts build() {
            return new Accounts(dateOfAccounts, accountingPeriod, currency, currencyMultiplier,
                    companyClass, consolidatedAccounts, dormancyFlag, latestAccountsType,
                    restatedAccounts, balanceSheet, profitLoss, discontinuedOperations,
                    disclosureItems, contingentLiability, postBalanceSheetEvents,
                    charitableGivingIndicator, charitableGivingValue);
        }
    }
}
