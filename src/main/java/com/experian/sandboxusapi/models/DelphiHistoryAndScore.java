/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for DelphiHistoryAndScore type.
 */
public class DelphiHistoryAndScore {
    private String commDelphiScore;
    private String commDelphiBand;
    private String stabilityOdds;
    private String overrideIndicator;
    private Integer textCount;
    private Integer scoreHistoryCount;
    private String commDelphiBandText;
    private List<NonLtdScoreHistory> scoreHistory;

    /**
     * Default constructor.
     */
    public DelphiHistoryAndScore() {
    }

    /**
     * Initialization constructor.
     * @param  commDelphiScore  String value for commDelphiScore.
     * @param  commDelphiBand  String value for commDelphiBand.
     * @param  stabilityOdds  String value for stabilityOdds.
     * @param  overrideIndicator  String value for overrideIndicator.
     * @param  textCount  Integer value for textCount.
     * @param  scoreHistoryCount  Integer value for scoreHistoryCount.
     * @param  commDelphiBandText  String value for commDelphiBandText.
     * @param  scoreHistory  List of NonLtdScoreHistory value for scoreHistory.
     */
    public DelphiHistoryAndScore(
            String commDelphiScore,
            String commDelphiBand,
            String stabilityOdds,
            String overrideIndicator,
            Integer textCount,
            Integer scoreHistoryCount,
            String commDelphiBandText,
            List<NonLtdScoreHistory> scoreHistory) {
        this.commDelphiScore = commDelphiScore;
        this.commDelphiBand = commDelphiBand;
        this.stabilityOdds = stabilityOdds;
        this.overrideIndicator = overrideIndicator;
        this.textCount = textCount;
        this.scoreHistoryCount = scoreHistoryCount;
        this.commDelphiBandText = commDelphiBandText;
        this.scoreHistory = scoreHistory;
    }

    /**
     * Getter for CommDelphiScore.
     * Current Commercial Delphi Score for the non-limited business
     * @return Returns the String
     */
    @JsonGetter("CommDelphiScore")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCommDelphiScore() {
        return commDelphiScore;
    }

    /**
     * Setter for CommDelphiScore.
     * Current Commercial Delphi Score for the non-limited business
     * @param commDelphiScore Value for String
     */
    @JsonSetter("CommDelphiScore")
    public void setCommDelphiScore(String commDelphiScore) {
        this.commDelphiScore = commDelphiScore;
    }

    /**
     * Getter for CommDelphiBand.
     * Current Commercial Delphi Band for the non-limited business
     * @return Returns the String
     */
    @JsonGetter("CommDelphiBand")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCommDelphiBand() {
        return commDelphiBand;
    }

    /**
     * Setter for CommDelphiBand.
     * Current Commercial Delphi Band for the non-limited business
     * @param commDelphiBand Value for String
     */
    @JsonSetter("CommDelphiBand")
    public void setCommDelphiBand(String commDelphiBand) {
        this.commDelphiBand = commDelphiBand;
    }

    /**
     * Getter for StabilityOdds.
     * Stability Odds for the non-limited business
     * @return Returns the String
     */
    @JsonGetter("StabilityOdds")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getStabilityOdds() {
        return stabilityOdds;
    }

    /**
     * Setter for StabilityOdds.
     * Stability Odds for the non-limited business
     * @param stabilityOdds Value for String
     */
    @JsonSetter("StabilityOdds")
    public void setStabilityOdds(String stabilityOdds) {
        this.stabilityOdds = stabilityOdds;
    }

    /**
     * Getter for OverrideIndicator.
     * Commercial Delphi Score Override indicator - Y = Overridden; N = Not Overridden
     * @return Returns the String
     */
    @JsonGetter("OverrideIndicator")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getOverrideIndicator() {
        return overrideIndicator;
    }

    /**
     * Setter for OverrideIndicator.
     * Commercial Delphi Score Override indicator - Y = Overridden; N = Not Overridden
     * @param overrideIndicator Value for String
     */
    @JsonSetter("OverrideIndicator")
    public void setOverrideIndicator(String overrideIndicator) {
        this.overrideIndicator = overrideIndicator;
    }

    /**
     * Getter for TextCount.
     * Length of text for Commercial Delphi Band Text
     * @return Returns the Integer
     */
    @JsonGetter("TextCount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getTextCount() {
        return textCount;
    }

    /**
     * Setter for TextCount.
     * Length of text for Commercial Delphi Band Text
     * @param textCount Value for Integer
     */
    @JsonSetter("TextCount")
    public void setTextCount(Integer textCount) {
        this.textCount = textCount;
    }

    /**
     * Getter for ScoreHistoryCount.
     * Number of instances of Commercial Delphi Score History
     * @return Returns the Integer
     */
    @JsonGetter("ScoreHistoryCount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getScoreHistoryCount() {
        return scoreHistoryCount;
    }

    /**
     * Setter for ScoreHistoryCount.
     * Number of instances of Commercial Delphi Score History
     * @param scoreHistoryCount Value for Integer
     */
    @JsonSetter("ScoreHistoryCount")
    public void setScoreHistoryCount(Integer scoreHistoryCount) {
        this.scoreHistoryCount = scoreHistoryCount;
    }

    /**
     * Getter for CommDelphiBandText.
     * Current Commercial Delphi Band Text
     * @return Returns the String
     */
    @JsonGetter("CommDelphiBandText")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCommDelphiBandText() {
        return commDelphiBandText;
    }

    /**
     * Setter for CommDelphiBandText.
     * Current Commercial Delphi Band Text
     * @param commDelphiBandText Value for String
     */
    @JsonSetter("CommDelphiBandText")
    public void setCommDelphiBandText(String commDelphiBandText) {
        this.commDelphiBandText = commDelphiBandText;
    }

    /**
     * Getter for ScoreHistory.
     * @return Returns the List of NonLtdScoreHistory
     */
    @JsonGetter("ScoreHistory")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<NonLtdScoreHistory> getScoreHistory() {
        return scoreHistory;
    }

    /**
     * Setter for ScoreHistory.
     * @param scoreHistory Value for List of NonLtdScoreHistory
     */
    @JsonSetter("ScoreHistory")
    public void setScoreHistory(List<NonLtdScoreHistory> scoreHistory) {
        this.scoreHistory = scoreHistory;
    }

    /**
     * Converts this DelphiHistoryAndScore into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DelphiHistoryAndScore [" + "commDelphiScore=" + commDelphiScore
                + ", commDelphiBand=" + commDelphiBand + ", stabilityOdds=" + stabilityOdds
                + ", overrideIndicator=" + overrideIndicator + ", textCount=" + textCount
                + ", scoreHistoryCount=" + scoreHistoryCount + ", commDelphiBandText="
                + commDelphiBandText + ", scoreHistory=" + scoreHistory + "]";
    }

    /**
     * Builds a new {@link DelphiHistoryAndScore.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DelphiHistoryAndScore.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .commDelphiScore(getCommDelphiScore())
                .commDelphiBand(getCommDelphiBand())
                .stabilityOdds(getStabilityOdds())
                .overrideIndicator(getOverrideIndicator())
                .textCount(getTextCount())
                .scoreHistoryCount(getScoreHistoryCount())
                .commDelphiBandText(getCommDelphiBandText())
                .scoreHistory(getScoreHistory());
        return builder;
    }

    /**
     * Class to build instances of {@link DelphiHistoryAndScore}.
     */
    public static class Builder {
        private String commDelphiScore;
        private String commDelphiBand;
        private String stabilityOdds;
        private String overrideIndicator;
        private Integer textCount;
        private Integer scoreHistoryCount;
        private String commDelphiBandText;
        private List<NonLtdScoreHistory> scoreHistory;



        /**
         * Setter for commDelphiScore.
         * @param  commDelphiScore  String value for commDelphiScore.
         * @return Builder
         */
        public Builder commDelphiScore(String commDelphiScore) {
            this.commDelphiScore = commDelphiScore;
            return this;
        }

        /**
         * Setter for commDelphiBand.
         * @param  commDelphiBand  String value for commDelphiBand.
         * @return Builder
         */
        public Builder commDelphiBand(String commDelphiBand) {
            this.commDelphiBand = commDelphiBand;
            return this;
        }

        /**
         * Setter for stabilityOdds.
         * @param  stabilityOdds  String value for stabilityOdds.
         * @return Builder
         */
        public Builder stabilityOdds(String stabilityOdds) {
            this.stabilityOdds = stabilityOdds;
            return this;
        }

        /**
         * Setter for overrideIndicator.
         * @param  overrideIndicator  String value for overrideIndicator.
         * @return Builder
         */
        public Builder overrideIndicator(String overrideIndicator) {
            this.overrideIndicator = overrideIndicator;
            return this;
        }

        /**
         * Setter for textCount.
         * @param  textCount  Integer value for textCount.
         * @return Builder
         */
        public Builder textCount(Integer textCount) {
            this.textCount = textCount;
            return this;
        }

        /**
         * Setter for scoreHistoryCount.
         * @param  scoreHistoryCount  Integer value for scoreHistoryCount.
         * @return Builder
         */
        public Builder scoreHistoryCount(Integer scoreHistoryCount) {
            this.scoreHistoryCount = scoreHistoryCount;
            return this;
        }

        /**
         * Setter for commDelphiBandText.
         * @param  commDelphiBandText  String value for commDelphiBandText.
         * @return Builder
         */
        public Builder commDelphiBandText(String commDelphiBandText) {
            this.commDelphiBandText = commDelphiBandText;
            return this;
        }

        /**
         * Setter for scoreHistory.
         * @param  scoreHistory  List of NonLtdScoreHistory value for scoreHistory.
         * @return Builder
         */
        public Builder scoreHistory(List<NonLtdScoreHistory> scoreHistory) {
            this.scoreHistory = scoreHistory;
            return this;
        }

        /**
         * Builds a new {@link DelphiHistoryAndScore} object using the set fields.
         * @return {@link DelphiHistoryAndScore}
         */
        public DelphiHistoryAndScore build() {
            return new DelphiHistoryAndScore(commDelphiScore, commDelphiBand, stabilityOdds,
                    overrideIndicator, textCount, scoreHistoryCount, commDelphiBandText,
                    scoreHistory);
        }
    }
}
