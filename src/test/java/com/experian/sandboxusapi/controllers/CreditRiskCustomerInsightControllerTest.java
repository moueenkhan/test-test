/*
 * CommercialCreditAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.experian.sandboxusapi.controllers;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;

import com.experian.sandboxusapi.CommercialCreditAPIClient;
import com.experian.sandboxusapi.exceptions.ApiException;
import io.apimatic.core.utilities.TestHelper;
import java.util.LinkedHashMap;
import java.util.Map;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;

public class CreditRiskCustomerInsightControllerTest extends BaseControllerTest {

    /**
     * Client instance.
     */
    private static CommercialCreditAPIClient client;
    
    /**
     * Controller instance (for all tests).
     */
    private static CreditRiskCustomerInsightController controller;

    /**
     * Setup test class.
     */
    @BeforeClass
    public static void setUpClass() {
        client = createConfiguration();
        controller = client.getCreditRiskCustomerInsightController();
    }

    /**
     * Tear down test class.
     */
    @AfterClass
    public static void tearDownClass() {
        controller = null;
    }

    /**
     * &lt;div&gt; Search Experian's UK Business database to return either the best matching business or a
     * list of businesses to choose from. You can then use a returned identifier to request
     * additional business information from many of Experian's Business Information APIs. &lt;br/&gt;&lt;br/&gt;
     * Searches can be made using: &lt;ul&gt; &lt;li&gt;the business name only&lt;/li&gt; &lt;li&gt;the business
     * postcode&lt;/li&gt; &lt;li&gt;the business identifiers (registration number or Experian non limited
     * key)&lt;/li&gt; &lt;li&gt;additional filters to qualify the search scope (registered/non registered,
     * dissolved businesses)&lt;/li&gt; &lt;/ul&gt; &lt;br/&gt; Sample searches against name=TEST will work in the
     * Sandbox. &lt;/div&gt; .
     * @throws Throwable exception if occurs.
     */
    @Test
    public void testTestBusinessSearch() throws Exception {
        // Parameters for the API call
        String name = 
                "TEST";
        String postcode = null;
        String town = null;
        String phonenumber = null;
        String businessref = null;
        Boolean searchcorporates = true;
        Boolean excludedissolved = true;
        Boolean searchnoncorps = false;

        // Set callback and perform API call
        try {
            controller.businessSearch(name, postcode, town, phonenumber, businessref, searchcorporates, excludedissolved, searchnoncorps);
        } catch (ApiException e) {
            // Empty block
        }

        // Test whether the response is null
        assertNotNull("Response is null", 
                httpResponse.getResponse());
        // Test response code
        assertEquals("Status is not 200", 
                200, httpResponse.getResponse().getStatusCode());

        // Test headers
        Map<String, String> headers = new LinkedHashMap<String, String>();
        headers.put("Content-Type", "application/json");
        
        assertTrue("Headers do not match", TestHelper.areHeadersProperSubsetOf(
                headers, httpResponse.getResponse().getHeaders().asSimpleMap(), true));

    }

    /**
     * &lt;div&gt; Search Experian's UK Business database to return either the best matching business or a
     * list of businesses to choose from. You can then use a returned identifier to request
     * additional business information from many of Experian's Business Information APIs. &lt;br/&gt;&lt;br/&gt;
     * Searches can be made using: &lt;ul&gt; &lt;li&gt;the business name only&lt;/li&gt; &lt;li&gt;the business
     * postcode&lt;/li&gt; &lt;li&gt;the business identifiers (registration number or Experian non limited
     * key)&lt;/li&gt; &lt;li&gt;additional filters to qualify the search scope (registered/non registered,
     * dissolved businesses)&lt;/li&gt; &lt;/ul&gt; &lt;br/&gt; Sample searches against name=TEST will work in the
     * Sandbox. &lt;/div&gt; .
     * @throws Throwable exception if occurs.
     */
    @Test
    public void testTestBusinessSearch1() throws Exception {
        // Parameters for the API call
        String name = 
                "TEST";
        String postcode = null;
        String town = null;
        String phonenumber = null;
        String businessref = null;
        Boolean searchcorporates = true;
        Boolean excludedissolved = true;
        Boolean searchnoncorps = false;

        // Set callback and perform API call
        try {
            controller.businessSearch(name, postcode, town, phonenumber, businessref, searchcorporates, excludedissolved, searchnoncorps);
        } catch (ApiException e) {
            // Empty block
        }

        // Test whether the response is null
        assertNotNull("Response is null", 
                httpResponse.getResponse());
        // Test response code
        assertEquals("Status is not 200", 
                200, httpResponse.getResponse().getStatusCode());

        // Test headers
        Map<String, String> headers = new LinkedHashMap<String, String>();
        headers.put("Content-Type", "application/xml");
        
        assertTrue("Headers do not match", TestHelper.areHeadersProperSubsetOf(
                headers, httpResponse.getResponse().getHeaders().asSimpleMap(), true));

    }

    /**
     * Returns detailed information on UK limited companies, including corporate structure,
     * management info, shareholders, financials, Commercial Delphi credit scores and history, CCJs,
     * mortgages, legal notices, Cifas fraud data and business credit history (CAIS).&lt;br/&gt; Sample
     * searches using RegNumber=99999999 will work in the Sandbox. .
     * @throws Throwable exception if occurs.
     */
    @Test
    public void testTestRegisteredCompanyCredit() throws Exception {
        // Parameters for the API call
        String regNumber = 
                "99999999";

        // Set callback and perform API call
        try {
            controller.registeredCompanyCredit(regNumber);
        } catch (ApiException e) {
            // Empty block
        }

        // Test whether the response is null
        assertNotNull("Response is null", 
                httpResponse.getResponse());
        // Test response code
        assertEquals("Status is not 200", 
                200, httpResponse.getResponse().getStatusCode());

        // Test headers
        Map<String, String> headers = new LinkedHashMap<String, String>();
        headers.put("Content-Type", "application/json");
        
        assertTrue("Headers do not match", TestHelper.areHeadersProperSubsetOf(
                headers, httpResponse.getResponse().getHeaders().asSimpleMap(), true));

    }

    /**
     * Returns detailed information on UK limited companies, including corporate structure,
     * management info, shareholders, financials, Commercial Delphi credit scores and history, CCJs,
     * mortgages, legal notices, Cifas fraud data and business credit history (CAIS).&lt;br/&gt; Sample
     * searches using RegNumber=99999999 will work in the Sandbox. .
     * @throws Throwable exception if occurs.
     */
    @Test
    public void testTestRegisteredCompanyCredit1() throws Exception {
        // Parameters for the API call
        String regNumber = 
                "99999999";

        // Set callback and perform API call
        try {
            controller.registeredCompanyCredit(regNumber);
        } catch (ApiException e) {
            // Empty block
        }

        // Test whether the response is null
        assertNotNull("Response is null", 
                httpResponse.getResponse());
        // Test response code
        assertEquals("Status is not 200", 
                200, httpResponse.getResponse().getStatusCode());

        // Test headers
        Map<String, String> headers = new LinkedHashMap<String, String>();
        headers.put("Content-Type", "application/xml");
        
        assertTrue("Headers do not match", TestHelper.areHeadersProperSubsetOf(
                headers, httpResponse.getResponse().getHeaders().asSimpleMap(), true));

    }

    /**
     * Returns detailed information on UK non-limited businesses, including Commercial Delphi credit
     * scores and history, commercial credit history (CAIS), payment performance, Cifas fraud data,
     * CCJs and bankruptcies.&lt;br/&gt; Sample searches using NonLimitedKey=UI88888888 will work in the
     * Sandbox. .
     * @throws Throwable exception if occurs.
     */
    @Test
    public void testTestNonRegisteredCompanyCredit() throws Exception {
        // Parameters for the API call
        String nonLimitedKey = 
                "UI88888888";

        // Set callback and perform API call
        try {
            controller.nonRegisteredCompanyCredit(nonLimitedKey);
        } catch (ApiException e) {
            // Empty block
        }

        // Test whether the response is null
        assertNotNull("Response is null", 
                httpResponse.getResponse());
        // Test response code
        assertEquals("Status is not 200", 
                200, httpResponse.getResponse().getStatusCode());

        // Test headers
        Map<String, String> headers = new LinkedHashMap<String, String>();
        headers.put("Content-Type", "application/json");
        
        assertTrue("Headers do not match", TestHelper.areHeadersProperSubsetOf(
                headers, httpResponse.getResponse().getHeaders().asSimpleMap(), true));

    }

    /**
     * Returns detailed information on UK non-limited businesses, including Commercial Delphi credit
     * scores and history, commercial credit history (CAIS), payment performance, Cifas fraud data,
     * CCJs and bankruptcies.&lt;br/&gt; Sample searches using NonLimitedKey=UI88888888 will work in the
     * Sandbox. .
     * @throws Throwable exception if occurs.
     */
    @Test
    public void testTestNonRegisteredCompanyCredit1() throws Exception {
        // Parameters for the API call
        String nonLimitedKey = 
                "UI88888888";

        // Set callback and perform API call
        try {
            controller.nonRegisteredCompanyCredit(nonLimitedKey);
        } catch (ApiException e) {
            // Empty block
        }

        // Test whether the response is null
        assertNotNull("Response is null", 
                httpResponse.getResponse());
        // Test response code
        assertEquals("Status is not 200", 
                200, httpResponse.getResponse().getStatusCode());

        // Test headers
        Map<String, String> headers = new LinkedHashMap<String, String>();
        headers.put("Content-Type", "application/xml");
        
        assertTrue("Headers do not match", TestHelper.areHeadersProperSubsetOf(
                headers, httpResponse.getResponse().getHeaders().asSimpleMap(), true));

    }

    /**
     * &lt;div&gt; Search Experian's UK Business database to return a list of Directors and/or
     * Secretaries. Each matching entry provides an identifier which can be used to access
     * additional information about the director via other endpoints such as Director Details.
     * &lt;br/&gt;&lt;br/&gt; Searches can be made using: &lt;li&gt;forename, middlenames and surname&lt;/li&gt; &lt;li&gt;service
     * address postcode&lt;/li&gt; &lt;li&gt;flags qualifying the scope of the search
     * (directors/secretaries).&lt;/li&gt; &lt;/div&gt; &lt;br/&gt; Sample searches using forename=John and
     * surname=Smith will return data in the Sandbox .
     * @throws Throwable exception if occurs.
     */
    @Test
    public void testTestDirectorSearch() throws Exception {
        // Parameters for the API call
        String title = null;
        String forename = 
                "John";
        String middlenames = 
                "William";
        String surname = 
                "Smith";
        String suffix = null;
        String dateofbirth = null;
        String flat = null;
        String housename = null;
        String housenumber = null;
        String street = null;
        String district = null;
        String county = null;
        String postcode = null;
        String town = null;
        Boolean directorsflag = true;
        Boolean secretariesflag = false;

        // Set callback and perform API call
        try {
            controller.directorSearch(title, forename, middlenames, surname, suffix, dateofbirth, flat, housename, housenumber, street, district, county, postcode, town, directorsflag, secretariesflag);
        } catch (ApiException e) {
            // Empty block
        }

        // Test whether the response is null
        assertNotNull("Response is null", 
                httpResponse.getResponse());
        // Test response code
        assertEquals("Status is not 200", 
                200, httpResponse.getResponse().getStatusCode());

        // Test headers
        Map<String, String> headers = new LinkedHashMap<String, String>();
        headers.put("Content-Type", "application/json");
        
        assertTrue("Headers do not match", TestHelper.areHeadersProperSubsetOf(
                headers, httpResponse.getResponse().getHeaders().asSimpleMap(), true));

    }

    /**
     * &lt;div&gt; Search Experian's UK Business database to return a list of Directors and/or
     * Secretaries. Each matching entry provides an identifier which can be used to access
     * additional information about the director via other endpoints such as Director Details.
     * &lt;br/&gt;&lt;br/&gt; Searches can be made using: &lt;li&gt;forename, middlenames and surname&lt;/li&gt; &lt;li&gt;service
     * address postcode&lt;/li&gt; &lt;li&gt;flags qualifying the scope of the search
     * (directors/secretaries).&lt;/li&gt; &lt;/div&gt; &lt;br/&gt; Sample searches using forename=John and
     * surname=Smith will return data in the Sandbox .
     * @throws Throwable exception if occurs.
     */
    @Test
    public void testTestDirectorSearch1() throws Exception {
        // Parameters for the API call
        String title = null;
        String forename = 
                "John";
        String middlenames = 
                "William";
        String surname = 
                "Smith";
        String suffix = null;
        String dateofbirth = null;
        String flat = null;
        String housename = null;
        String housenumber = null;
        String street = null;
        String district = null;
        String county = null;
        String postcode = null;
        String town = null;
        Boolean directorsflag = true;
        Boolean secretariesflag = false;

        // Set callback and perform API call
        try {
            controller.directorSearch(title, forename, middlenames, surname, suffix, dateofbirth, flat, housename, housenumber, street, district, county, postcode, town, directorsflag, secretariesflag);
        } catch (ApiException e) {
            // Empty block
        }

        // Test whether the response is null
        assertNotNull("Response is null", 
                httpResponse.getResponse());
        // Test response code
        assertEquals("Status is not 200", 
                200, httpResponse.getResponse().getStatusCode());

        // Test headers
        Map<String, String> headers = new LinkedHashMap<String, String>();
        headers.put("Content-Type", "application/xml");
        
        assertTrue("Headers do not match", TestHelper.areHeadersProperSubsetOf(
                headers, httpResponse.getResponse().getHeaders().asSimpleMap(), true));

    }

    /**
     * Returns detailed information about a Director of UK Limited company, including other
     * Directorships, disqualifications, convictions and Cifas fraud data. &lt;br/&gt;&lt;br/&gt; Sample
     * searches against DirectorNumber=D99999999 will return data in the Sandbox .
     * @throws Throwable exception if occurs.
     */
    @Test
    public void testTestDirectorsDetails() throws Exception {
        // Parameters for the API call
        String directorNumber = 
                "D99999999";

        // Set callback and perform API call
        try {
            controller.directorsDetails(directorNumber);
        } catch (ApiException e) {
            // Empty block
        }

        // Test whether the response is null
        assertNotNull("Response is null", 
                httpResponse.getResponse());
        // Test response code
        assertEquals("Status is not 200", 
                200, httpResponse.getResponse().getStatusCode());

        // Test headers
        Map<String, String> headers = new LinkedHashMap<String, String>();
        headers.put("Content-Type", "application/json");
        
        assertTrue("Headers do not match", TestHelper.areHeadersProperSubsetOf(
                headers, httpResponse.getResponse().getHeaders().asSimpleMap(), true));

    }

    /**
     * Returns detailed information about a Director of UK Limited company, including other
     * Directorships, disqualifications, convictions and Cifas fraud data. &lt;br/&gt;&lt;br/&gt; Sample
     * searches against DirectorNumber=D99999999 will return data in the Sandbox .
     * @throws Throwable exception if occurs.
     */
    @Test
    public void testTestDirectorsDetails1() throws Exception {
        // Parameters for the API call
        String directorNumber = 
                "D99999999";

        // Set callback and perform API call
        try {
            controller.directorsDetails(directorNumber);
        } catch (ApiException e) {
            // Empty block
        }

        // Test whether the response is null
        assertNotNull("Response is null", 
                httpResponse.getResponse());
        // Test response code
        assertEquals("Status is not 200", 
                200, httpResponse.getResponse().getStatusCode());

        // Test headers
        Map<String, String> headers = new LinkedHashMap<String, String>();
        headers.put("Content-Type", "application/xml");
        
        assertTrue("Headers do not match", TestHelper.areHeadersProperSubsetOf(
                headers, httpResponse.getResponse().getHeaders().asSimpleMap(), true));

    }

}
